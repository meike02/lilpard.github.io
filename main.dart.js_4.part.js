// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, deferred-serialization, csp), the Dart to JavaScript compiler version: 2.18.0-271.4.beta.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {LineSplitter: function LineSplitter() {
    }, SelectableText: function SelectableText() {
    },
    ResizeImage_resizeIfNeeded(cacheWidth, cacheHeight, provider) {
      return provider;
    },
    AssetBundleImageKey: function AssetBundleImageKey(t0, t1, t2) {
      this.bundle = t0;
      this.name = t1;
      this.scale = t2;
    },
    AssetBundleImageProvider: function AssetBundleImageProvider() {
    },
    MemoryImage: function MemoryImage(t0, t1) {
      this.bytes = t0;
      this.scale = t1;
    },
    AssetImage__manifestParser(jsonData) {
      var parsedJson, t1, t2, t3, t4, t5, t6;
      if (jsonData == null)
        return new B.SynchronousFuture(null, type$.SynchronousFuture_nullable_Map_of_String_and_List_String);
      parsedJson = type$.Map_String_dynamic._as(C.C_JsonCodec.decode$1(0, jsonData));
      t1 = J.getInterceptor$x(parsedJson);
      t2 = type$.String;
      t3 = B.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_String);
      for (t4 = J.get$iterator$ax(t1.get$keys(parsedJson)), t5 = type$.List_dynamic; t4.moveNext$0();) {
        t6 = t4.get$current(t4);
        t3.$indexSet(0, t6, B.List_List$from(t5._as(t1.$index(parsedJson, t6)), true, t2));
      }
      return new B.SynchronousFuture(t3, type$.SynchronousFuture_nullable_Map_of_String_and_List_String);
    },
    AssetImage: function AssetImage(t0, t1, t2) {
      this.assetName = t0;
      this.bundle = t1;
      this.$package = t2;
    },
    AssetImage_obtainKey_closure: function AssetImage_obtainKey_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.configuration = t2;
      _.chosenBundle = t3;
    },
    AssetImage_obtainKey_closure0: function AssetImage_obtainKey_closure0(t0) {
      this._box_0 = t0;
    },
    TextSelectionPoint: function TextSelectionPoint(t0, t1) {
      this.point = t0;
      this.direction = t1;
    },
    RenderEditable_getRectForComposingRange_closure: function RenderEditable_getRectForComposingRange_closure() {
    },
    RenderEditablePainter: function RenderEditablePainter() {
    },
    _FloatingCursorPainter: function _FloatingCursorPainter(t0, t1, t2, t3) {
      var _ = this;
      _._shouldPaint = true;
      _.caretPaintCallback = t0;
      _.showRegularCaret = false;
      _.caretPaint = t1;
      _.___FloatingCursorPainter_floatingCursorPaint_FI = $;
      _._cursorRadius = _._caretColor = null;
      _._cursorOffset = t2;
      _._floatingCursorRect = _._backgroundCursorColor = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__debugDisposed = false;
    },
    RenderImage: function RenderImage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _._flipHorizontally = _._image$_resolvedAlignment = null;
      _._image = t0;
      _.debugImageLabel = t1;
      _._image$_width = t2;
      _._image$_height = t3;
      _._scale = t4;
      _._colorFilter = null;
      _._image$_color = t5;
      _._image$_opacity = t6;
      _._filterQuality = t7;
      _._colorBlendMode = t8;
      _._image$_fit = t9;
      _._image$_alignment = t10;
      _._repeat = t11;
      _._centerSlice = t12;
      _._invertColors = t13;
      _._matchTextDirection = t14;
      _._image$_textDirection = t15;
      _._image$_isAntiAlias = t16;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t17;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    FollowerLayer__collectTransformForLayerChain(layers) {
      var index, t1,
        result = new B.Matrix4(new Float64Array(16));
      result.setIdentity$0();
      for (index = layers.length - 1; index > 0; --index) {
        t1 = layers[index];
        if (t1 != null)
          t1.applyTransform$2(layers[index - 1], result);
      }
      return result;
    },
    FollowerLayer__pathsToCommonAncestor(a, b, ancestorsA, ancestorsB) {
      var t1, t2;
      if (a == null || b == null)
        return null;
      if (a === b)
        return a;
      t1 = a._depth;
      t2 = b._depth;
      if (t1 < t2) {
        t1 = type$.nullable_ContainerLayer;
        ancestorsB.push(t1._as(B.AbstractNode.prototype.get$parent.call(b, b)));
        return A.FollowerLayer__pathsToCommonAncestor(a, t1._as(B.AbstractNode.prototype.get$parent.call(b, b)), ancestorsA, ancestorsB);
      } else if (t1 > t2) {
        t1 = type$.nullable_ContainerLayer;
        ancestorsA.push(t1._as(B.AbstractNode.prototype.get$parent.call(a, a)));
        return A.FollowerLayer__pathsToCommonAncestor(t1._as(B.AbstractNode.prototype.get$parent.call(a, a)), b, ancestorsA, ancestorsB);
      }
      t1 = type$.nullable_ContainerLayer;
      ancestorsA.push(t1._as(B.AbstractNode.prototype.get$parent.call(a, a)));
      ancestorsB.push(t1._as(B.AbstractNode.prototype.get$parent.call(b, b)));
      return A.FollowerLayer__pathsToCommonAncestor(t1._as(B.AbstractNode.prototype.get$parent.call(a, a)), t1._as(B.AbstractNode.prototype.get$parent.call(b, b)), ancestorsA, ancestorsB);
    },
    FollowerLayer: function FollowerLayer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._layer$_link = t0;
      _.showWhenUnlinked = t1;
      _.unlinkedOffset = t2;
      _.linkedOffset = t3;
      _._invertedTransform = _._layer$_lastTransform = _._lastOffset = null;
      _._inverseDirty = true;
      _._lastChild = _._firstChild = null;
      _._layer$_callbacks = t4;
      _._compositionCallbackCount = 0;
      _._layer$_debugDisposed = false;
      _._parentHandle = t5;
      _._layer$_refCount = 0;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFollowerLayer: function RenderFollowerLayer(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._proxy_box$_link = t0;
      _._showWhenUnlinked = t1;
      _._proxy_box$_offset = t2;
      _._leaderAnchor = t3;
      _._followerAnchor = t4;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFollowerLayer_hitTestChildren_closure: function RenderFollowerLayer_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    TableCellParentData: function TableCellParentData(t0) {
      this.verticalAlignment = null;
      this.offset = t0;
    },
    TableColumnWidth: function TableColumnWidth() {
    },
    FlexColumnWidth: function FlexColumnWidth() {
    },
    TableCellVerticalAlignment: function TableCellVerticalAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    RenderTable: function RenderTable(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._table$_children = t0;
      _._columns = t1;
      _._rows = t2;
      _._columnWidths = t3;
      _._defaultColumnWidth = t4;
      _._table$_textDirection = t5;
      _._border = t6;
      _._rowDecorationPainters = _._table$_rowDecorations = null;
      _._table$_configuration = t7;
      _._defaultVerticalAlignment = t8;
      _._table$_textBaseline = t9;
      _._baselineDistance = null;
      _._rowTops = t10;
      _._columnLefts = null;
      _.__RenderTable__tableWidth_A = $;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._object$_debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t11;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderTable_computeDryLayout_closure: function RenderTable_computeDryLayout_closure() {
    },
    RenderTable_hitTestChildren_closure: function RenderTable_hitTestChildren_closure(t0, t1, t2) {
      this.position = t0;
      this.childParentData = t1;
      this.child = t2;
    },
    TableBorder_TableBorder$all(color, width) {
      var side = new B.BorderSide(color, width, C.BorderStyle_1, C.StrokeAlign_0);
      return new A.TableBorder(side, side, side, side, side, side, C.BorderRadius_tLn);
    },
    TableBorder: function TableBorder(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.top = t0;
      _.right = t1;
      _.bottom = t2;
      _.left = t3;
      _.horizontalInside = t4;
      _.verticalInside = t5;
      _.borderRadius = t6;
    },
    AutofillConfiguration: function AutofillConfiguration(t0, t1, t2, t3, t4) {
      var _ = this;
      _.enabled = t0;
      _.uniqueIdentifier = t1;
      _.autofillHints = t2;
      _.currentEditingValue = t3;
      _.hintText = t4;
    },
    _MutableTextRange: function _MutableTextRange(t0, t1) {
      this.base = t0;
      this.extent = t1;
    },
    _TextEditingValueAccumulator: function _TextEditingValueAccumulator(t0, t1, t2, t3) {
      var _ = this;
      _.inputValue = t0;
      _.stringBuffer = t1;
      _.selection = t2;
      _.composingRegion = t3;
      _.debugFinalized = false;
    },
    FilteringTextInputFormatter__processRegion_adjustIndex: function FilteringTextInputFormatter__processRegion_adjustIndex(t0, t1, t2) {
      this.regionStart = t0;
      this.regionEnd = t1;
      this.replacementString = t2;
    },
    TextInputConnection$_(_client) {
      var t1 = B._setArrayType([], type$.JSArray_SelectionRect),
        t2 = $.TextInputConnection__nextId;
      $.TextInputConnection__nextId = t2 + 1;
      return new A.TextInputConnection(t1, t2, _client);
    },
    TextInputType: function TextInputType(t0, t1, t2) {
      this.index = t0;
      this.signed = t1;
      this.decimal = t2;
    },
    TextCapitalization0: function TextCapitalization0(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextInputConfiguration: function TextInputConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.inputType = t0;
      _.readOnly = t1;
      _.obscureText = t2;
      _.autocorrect = t3;
      _.autofillConfiguration = t4;
      _.smartDashesType = t5;
      _.smartQuotesType = t6;
      _.enableSuggestions = t7;
      _.enableInteractiveSelection = t8;
      _.inputAction = t9;
      _.textCapitalization = t10;
      _.keyboardAppearance = t11;
      _.enableIMEPersonalizedLearning = t12;
    },
    TextInputConnection: function TextInputConnection(t0, t1, t2) {
      var _ = this;
      _._cachedCaretRect = _._text_input$_cachedRect = _._cachedTransform = _._cachedSize = null;
      _._cachedSelectionRects = t0;
      _._text_input$_id = t1;
      _._client = t2;
    },
    CompositedTransformFollower$(child, link, offset, showWhenUnlinked) {
      return new A.CompositedTransformFollower(link, false, offset, child, null);
    },
    CompositedTransformFollower: function CompositedTransformFollower(t0, t1, t2, t3, t4) {
      var _ = this;
      _.link = t0;
      _.showWhenUnlinked = t1;
      _.offset = t2;
      _.child = t3;
      _.key = t4;
    },
    RawImage: function RawImage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.image = t0;
      _.debugImageLabel = t1;
      _.width = t2;
      _.height = t3;
      _.scale = t4;
      _.color = t5;
      _.opacity = t6;
      _.filterQuality = t7;
      _.colorBlendMode = t8;
      _.fit = t9;
      _.alignment = t10;
      _.repeat = t11;
      _.centerSlice = t12;
      _.matchTextDirection = t13;
      _.invertColors = t14;
      _.isAntiAlias = t15;
      _.key = t16;
    },
    DisposableBuildContext: function DisposableBuildContext(t0, t1) {
      this._disposable_build_context$_state = t0;
      this.$ti = t1;
    },
    _KeyFrame: function _KeyFrame(t0, t1) {
      this.time = t0;
      this.value = t1;
    },
    _DiscreteKeyFrameSimulation: function _DiscreteKeyFrameSimulation(t0, t1, t2) {
      var _ = this;
      _.maxDuration = t0;
      _._keyFrames = t1;
      _._lastKeyFrameIndex = 0;
      _.tolerance = t2;
    },
    EditableTextState__scheduleShowCaretOnScreen_closure: function EditableTextState__scheduleShowCaretOnScreen_closure(t0, t1) {
      this.$this = t0;
      this.withAnimation = t1;
    },
    EditableTextState__formatAndSetValue_closure: function EditableTextState__formatAndSetValue_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__startCursorBlink_closure: function EditableTextState__startCursorBlink_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__onCursorTick_closure: function EditableTextState__onCursorTick_closure() {
    },
    EditableTextState__onCursorTick_closure0: function EditableTextState__onCursorTick_closure0(t0) {
      this.$this = t0;
    },
    EditableTextState__onCursorTick_closure1: function EditableTextState__onCursorTick_closure1(t0) {
      this.$this = t0;
    },
    EditableTextState__updateSizeAndTransform_closure: function EditableTextState__updateSizeAndTransform_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__updateComposingRectIfNeeded_closure: function EditableTextState__updateComposingRectIfNeeded_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__updateCaretRectIfNeeded_closure: function EditableTextState__updateCaretRectIfNeeded_closure(t0) {
      this.$this = t0;
    },
    EditableTextState_insertTextPlaceholder_closure: function EditableTextState_insertTextPlaceholder_closure(t0) {
      this.$this = t0;
    },
    EditableTextState_removeTextPlaceholder_closure: function EditableTextState_removeTextPlaceholder_closure(t0) {
      this.$this = t0;
    },
    EditableTextState_showAutocorrectionPromptRect_closure: function EditableTextState_showAutocorrectionPromptRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.start = t1;
      this.end = t2;
    },
    _ScribbleFocusableState_isInScribbleRect_closure: function _ScribbleFocusableState_isInScribbleRect_closure(t0) {
      this.$this = t0;
    },
    Image$network(src, height, width) {
      var _null = null;
      return new A.Image(A.ResizeImage_resizeIfNeeded(_null, _null, new B.NetworkImage(src, 1, _null)), width, height, _null);
    },
    Image: function Image(t0, t1, t2, t3) {
      var _ = this;
      _.image = t0;
      _.width = t1;
      _.height = t2;
      _.key = t3;
    },
    _ImageState: function _ImageState(t0) {
      var _ = this;
      _._loadingProgress = _._imageInfo = _._imageStream = null;
      _._isListeningToStream = false;
      _.___ImageState__invertColors_A = $;
      _._frameNumber = null;
      _._wasSynchronouslyLoaded = false;
      _.___ImageState__scrollAwareContext_A = $;
      _._widget = _._imageStreamListener = _._completerHandle = _._lastStack = _._lastException = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _ImageState__handleImageFrame_closure: function _ImageState__handleImageFrame_closure(t0, t1, t2) {
      this.$this = t0;
      this.imageInfo = t1;
      this.synchronousCall = t2;
    },
    _ImageState__updateSourceStream_closure: function _ImageState__updateSourceStream_closure(t0) {
      this.$this = t0;
    },
    _ImageState__updateSourceStream_closure0: function _ImageState__updateSourceStream_closure0(t0) {
      this.$this = t0;
    },
    __ImageState_State_WidgetsBindingObserver: function __ImageState_State_WidgetsBindingObserver() {
    },
    ScrollAwareImageProvider: function ScrollAwareImageProvider(t0, t1, t2) {
      this.context = t0;
      this.imageProvider = t1;
      this.$ti = t2;
    },
    ScrollAwareImageProvider_resolveStreamForKey_closure: function ScrollAwareImageProvider_resolveStreamForKey_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.configuration = t1;
      _.stream = t2;
      _.key = t3;
      _.handleError = t4;
    },
    ScrollAwareImageProvider_resolveStreamForKey__closure: function ScrollAwareImageProvider_resolveStreamForKey__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.configuration = t1;
      _.stream = t2;
      _.key = t3;
      _.handleError = t4;
    },
    Table$(border, children, defaultColumnWidth, defaultVerticalAlignment) {
      var t1;
      if (C.JSArray_methods.any$1(children, new A.Table_closure())) {
        t1 = B._arrayInstanceType(children)._eval$1("MappedListIterable<1,Decoration?>");
        t1 = B.List_List$of(new B.MappedListIterable(children, new A.Table_closure0(), t1), false, t1._eval$1("ListIterable.E"));
      } else
        t1 = null;
      return new A.Table(children, defaultColumnWidth, border, defaultVerticalAlignment, t1, null);
    },
    TableRow: function TableRow(t0, t1) {
      this.decoration = t0;
      this.children = t1;
    },
    _TableElementRow: function _TableElementRow(t0, t1) {
      this.key = t0;
      this.children = t1;
    },
    Table: function Table(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.children = t0;
      _.defaultColumnWidth = t1;
      _.border = t2;
      _.defaultVerticalAlignment = t3;
      _._rowDecorations = t4;
      _.key = t5;
    },
    Table_closure: function Table_closure() {
    },
    Table_closure0: function Table_closure0() {
    },
    _TableElement: function _TableElement(t0, t1, t2, t3) {
      var _ = this;
      _._table0$_children = t0;
      _._doingMountOrUpdate = false;
      _._table0$_forgottenChildren = t1;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    _TableElement_mount_closure: function _TableElement_mount_closure(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    _TableElement_mount__closure: function _TableElement_mount__closure(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.$this = t2;
    },
    _TableElement_update_closure: function _TableElement_update_closure() {
    },
    _TableElement_update_closure0: function _TableElement_update_closure0(t0) {
      this.taken = t0;
    },
    _TableElement__updateRenderObjectChildren_closure: function _TableElement__updateRenderObjectChildren_closure() {
    },
    _TableElement__updateRenderObjectChildren__closure: function _TableElement__updateRenderObjectChildren__closure() {
    },
    _TableElement_visitChildren_closure: function _TableElement_visitChildren_closure() {
    },
    TableCell: function TableCell(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _TableSlot: function _TableSlot(t0, t1) {
      this.column = t0;
      this.row = t1;
    },
    __TableSlot_Object_Diagnosticable: function __TableSlot_Object_Diagnosticable() {
    },
    _SelectionHandleOverlay$(dragStartBehavior, handleLayerLink, onSelectionHandleDragEnd, onSelectionHandleDragStart, onSelectionHandleDragUpdate, onSelectionHandleTapped, preferredLineHeight, selectionControls, type, visibility) {
      return new A._SelectionHandleOverlay(handleLayerLink, onSelectionHandleTapped, onSelectionHandleDragStart, onSelectionHandleDragUpdate, onSelectionHandleDragEnd, selectionControls, visibility, preferredLineHeight, type, dragStartBehavior, null);
    },
    TextSelectionOverlay: function TextSelectionOverlay(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.renderObject = t0;
      _.selectionControls = t1;
      _.selectionDelegate = t2;
      _.__TextSelectionOverlay__selectionOverlay_F = $;
      _._text_selection$_value = t3;
      _._effectiveStartHandleVisibility = t4;
      _._effectiveEndHandleVisibility = t5;
      _._effectiveToolbarVisibility = t6;
      _._handlesVisible = false;
      _.__TextSelectionOverlay__dragStartPosition_A = _.__TextSelectionOverlay__dragEndPosition_A = $;
    },
    SelectionOverlay: function SelectionOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.context = t0;
      _._startHandleType = t1;
      _._lineHeightAtStart = t2;
      _.startHandlesVisible = t3;
      _.onStartHandleDragStart = t4;
      _.onStartHandleDragUpdate = t5;
      _._endHandleType = t6;
      _._lineHeightAtEnd = t7;
      _.endHandlesVisible = t8;
      _.onEndHandleDragStart = t9;
      _.onEndHandleDragUpdate = t10;
      _.toolbarVisible = t11;
      _._selectionEndpoints = t12;
      _.debugRequiredFor = t13;
      _.toolbarLayerLink = t14;
      _.startHandleLayerLink = t15;
      _.endHandleLayerLink = t16;
      _.selectionControls = t17;
      _.selectionDelegate = t18;
      _.dragStartBehavior = t19;
      _.onSelectionHandleTapped = t20;
      _.clipboardStatus = t21;
      _._toolbarLocation = t22;
      _._toolbar = _._text_selection$_handles = null;
      _._buildScheduled = false;
    },
    SelectionOverlay__markNeedsBuild_closure: function SelectionOverlay__markNeedsBuild_closure(t0) {
      this.$this = t0;
    },
    _SelectionHandleOverlay: function _SelectionHandleOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.handleLayerLink = t0;
      _.onSelectionHandleTapped = t1;
      _.onSelectionHandleDragStart = t2;
      _.onSelectionHandleDragUpdate = t3;
      _.onSelectionHandleDragEnd = t4;
      _.selectionControls = t5;
      _.visibility = t6;
      _.preferredLineHeight = t7;
      _.type = t8;
      _.dragStartBehavior = t9;
      _.key = t10;
    },
    _SelectionHandleOverlayState: function _SelectionHandleOverlayState(t0, t1, t2) {
      var _ = this;
      _.___SelectionHandleOverlayState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _SelectionHandleOverlayState_build_closure: function _SelectionHandleOverlayState_build_closure(t0) {
      this.$this = t0;
    },
    _SelectionHandleOverlayState_build_closure0: function _SelectionHandleOverlayState_build_closure0(t0) {
      this.$this = t0;
    },
    __SelectionHandleOverlayState_State_SingleTickerProviderStateMixin: function __SelectionHandleOverlayState_State_SingleTickerProviderStateMixin() {
    },
    _handleDataSchemeUri(uri, width, height) {
      var _null = null,
        t1 = uri.get$data(uri),
        mimeType = t1.get$mimeType(t1);
      if (C.JSString_methods.startsWith$1(mimeType, "image/"))
        return new A.Image(A.ResizeImage_resizeIfNeeded(_null, _null, new A.MemoryImage(uri.get$data(uri).contentAsBytes$0(), 1)), width, height, _null);
      else if (C.JSString_methods.startsWith$1(mimeType, "text/"))
        return B.Text$(uri.get$data(uri).contentAsString$0(), _null, _null, _null, _null);
      return C.SizedBox_null_null_null_null;
    },
    kDefaultImageBuilder_closure: function kDefaultImageBuilder_closure() {
    },
    kFallbackStyle_closure: function kFallbackStyle_closure() {
    },
    _BlockElement: function _BlockElement(t0, t1) {
      this.tag = t0;
      this.children = t1;
      this.nextListIndex = 0;
    },
    _TableElement0: function _TableElement0(t0) {
      this.rows = t0;
    },
    _InlineElement: function _InlineElement(t0, t1) {
      this.style = t0;
      this.children = t1;
    },
    MarkdownBuilder: function MarkdownBuilder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.delegate = t0;
      _.selectable = t1;
      _.styleSheet = t2;
      _.imageDirectory = t3;
      _.imageBuilder = t4;
      _.checkboxBuilder = t5;
      _.bulletBuilder = t6;
      _.builders = t7;
      _.paddingBuilders = t8;
      _.fitContent = t9;
      _.listItemCrossAxisAlignment = t10;
      _.onTapText = t11;
      _.softLineBreak = t12;
      _._listIndents = t13;
      _._blocks = t14;
      _._tables = t15;
      _._inlines = t16;
      _._linkHandlers = t17;
      _._lastVisitedTag = _._currentBlockTag = null;
      _._isInBlockquote = false;
    },
    MarkdownBuilder_extractTextFromElement_closure: function MarkdownBuilder_extractTextFromElement_closure(t0) {
      this.$this = t0;
    },
    MarkdownBuilder_visitText_trimText: function MarkdownBuilder_visitText_trimText(t0) {
      this.$this = t0;
    },
    MarkdownBuilder__mergeInlineChildren_closure: function MarkdownBuilder__mergeInlineChildren_closure() {
    },
    MarkdownBody$(data, onTapLink, selectable, styleSheet) {
      var _null = null;
      return new A.MarkdownBody(data, false, styleSheet, _null, _null, onTapLink, _null, _null, _null, _null, _null, _null, _null, _null, D.Map_empty1, D.Map_empty2, true, D.MarkdownListItemCrossAxisAlignment_0, false, _null);
    },
    MarkdownStyleSheetBaseTheme: function MarkdownStyleSheetBaseTheme(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MarkdownListItemCrossAxisAlignment: function MarkdownListItemCrossAxisAlignment(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MarkdownWidget: function MarkdownWidget() {
    },
    _MarkdownWidgetState: function _MarkdownWidgetState(t0, t1) {
      var _ = this;
      _._widget$_children = null;
      _._widget$_recognizers = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _MarkdownWidgetState_createLink_closure: function _MarkdownWidgetState_createLink_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.href = t2;
      _.title = t3;
    },
    MarkdownBody: function MarkdownBody(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.data = t0;
      _.selectable = t1;
      _.styleSheet = t2;
      _.styleSheetTheme = t3;
      _.syntaxHighlighter = t4;
      _.onTapLink = t5;
      _.onTapText = t6;
      _.imageDirectory = t7;
      _.blockSyntaxes = t8;
      _.inlineSyntaxes = t9;
      _.extensionSet = t10;
      _.imageBuilder = t11;
      _.checkboxBuilder = t12;
      _.bulletBuilder = t13;
      _.builders = t14;
      _.paddingBuilders = t15;
      _.fitContent = t16;
      _.listItemCrossAxisAlignment = t17;
      _.softLineBreak = t18;
      _.key = t19;
    },
    TaskListSyntax: function TaskListSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    Element: function Element(t0, t1, t2) {
      this.tag = t0;
      this.children = t1;
      this.attributes = t2;
    },
    Element_textContent_closure: function Element_textContent_closure() {
    },
    Text0: function Text0(t0) {
      this.text = t0;
    },
    UnparsedContent: function UnparsedContent(t0) {
      this.textContent = t0;
    },
    BlockParser$(lines, $document) {
      var t1 = type$.JSArray_BlockSyntax,
        t2 = B._setArrayType([], t1);
      t1 = B._setArrayType([D.C_EmptyBlockSyntax, D.C_BlockTagBlockHtmlSyntax, new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<pre(?:\\s|>|$)", true, false), B.RegExp_RegExp("</pre>", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<script(?:\\s|>|$)", true, false), B.RegExp_RegExp("</script>", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<style(?:\\s|>|$)", true, false), B.RegExp_RegExp("</style>", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<!--", true, false), B.RegExp_RegExp("-->", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<\\?", true, false), B.RegExp_RegExp("\\?>", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<![A-Z]", true, false), B.RegExp_RegExp(">", true, false)), new A.LongBlockHtmlSyntax(B.RegExp_RegExp("^ {0,3}<!\\[CDATA\\[", true, false), B.RegExp_RegExp("\\]\\]>", true, false)), D.C_OtherTagBlockHtmlSyntax, D.C_SetextHeaderSyntax, D.C_HeaderSyntax, D.C_CodeBlockSyntax, D.C_BlockquoteSyntax, D.C_HorizontalRuleSyntax, D.C_UnorderedListSyntax, D.C_OrderedListSyntax, D.C_ParagraphSyntax], t1);
      C.JSArray_methods.addAll$1(t2, $document._blockSyntaxes);
      C.JSArray_methods.addAll$1(t2, t1);
      return new A.BlockParser(lines, $document, t2, t1);
    },
    BlockSyntax_isAtBlockEnd(parser) {
      if (parser._pos >= parser.lines.length)
        return true;
      return C.JSArray_methods.any$1(parser.blockSyntaxes, new A.BlockSyntax_isAtBlockEnd_closure(parser));
    },
    ListSyntax__expandedTabLength(input) {
      var t1, t2, $length, t3;
      for (t1 = new B.CodeUnits(input), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), $length = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        $length += (t3 == null ? t2._as(t3) : t3) === 9 ? 4 - C.JSInt_methods.$mod($length, 4) : 1;
      }
      return $length;
    },
    BlockParser: function BlockParser(t0, t1, t2, t3) {
      var _ = this;
      _.lines = t0;
      _.document = t1;
      _.blockSyntaxes = t2;
      _._pos = 0;
      _.encounteredBlankLine = false;
      _.standardBlockSyntaxes = t3;
    },
    BlockSyntax: function BlockSyntax() {
    },
    BlockSyntax_isAtBlockEnd_closure: function BlockSyntax_isAtBlockEnd_closure(t0) {
      this.parser = t0;
    },
    EmptyBlockSyntax: function EmptyBlockSyntax() {
    },
    SetextHeaderSyntax: function SetextHeaderSyntax() {
    },
    HeaderSyntax: function HeaderSyntax() {
    },
    BlockquoteSyntax: function BlockquoteSyntax() {
    },
    BlockquoteSyntax_parseChildLines_closure: function BlockquoteSyntax_parseChildLines_closure(t0) {
      this.parser = t0;
    },
    CodeBlockSyntax: function CodeBlockSyntax() {
    },
    FencedCodeBlockSyntax: function FencedCodeBlockSyntax() {
    },
    HorizontalRuleSyntax: function HorizontalRuleSyntax() {
    },
    BlockHtmlSyntax: function BlockHtmlSyntax() {
    },
    BlockTagBlockHtmlSyntax: function BlockTagBlockHtmlSyntax() {
    },
    OtherTagBlockHtmlSyntax: function OtherTagBlockHtmlSyntax() {
    },
    LongBlockHtmlSyntax: function LongBlockHtmlSyntax(t0, t1) {
      this.pattern = t0;
      this._endPattern = t1;
    },
    ListItem: function ListItem(t0) {
      this.lines = t0;
    },
    ListSyntax: function ListSyntax() {
    },
    ListSyntax_parse_endItem: function ListSyntax_parse_endItem(t0, t1) {
      this._box_0 = t0;
      this.items = t1;
    },
    ListSyntax_parse_tryMatch: function ListSyntax_parse_tryMatch(t0, t1) {
      this.match = t0;
      this.parser = t1;
    },
    UnorderedListSyntax: function UnorderedListSyntax() {
    },
    OrderedListSyntax: function OrderedListSyntax() {
    },
    TableSyntax: function TableSyntax() {
    },
    TableSyntax__parseAlignments_closure: function TableSyntax__parseAlignments_closure() {
    },
    ParagraphSyntax: function ParagraphSyntax() {
    },
    ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition: function ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition(t0) {
      this.lines = t0;
    },
    ParagraphSyntax__parseReflinkDefinition_closure: function ParagraphSyntax__parseReflinkDefinition_closure(t0, t1) {
      this._box_0 = t0;
      this.destination = t1;
    },
    Document: function Document(t0, t1, t2, t3, t4) {
      var _ = this;
      _.linkReferences = t0;
      _.encodeHtml = t1;
      _._blockSyntaxes = t2;
      _._inlineSyntaxes = t3;
      _.hasCustomInlineSyntaxes = t4;
    },
    LinkReference: function LinkReference(t0, t1) {
      this.destination = t0;
      this.title = t1;
    },
    ExtensionSet$(blockSyntaxes, inlineSyntaxes) {
      return new A.ExtensionSet(blockSyntaxes, inlineSyntaxes);
    },
    ExtensionSet: function ExtensionSet(t0, t1) {
      this.blockSyntaxes = t0;
      this.inlineSyntaxes = t1;
    },
    TextSyntax$(pattern, startCharacter, sub) {
      return new A.TextSyntax(sub, B.RegExp_RegExp(pattern, true, true), startCharacter);
    },
    InlineHtmlSyntax$() {
      return new A.InlineHtmlSyntax("", B.RegExp_RegExp("<[/!?]?[A-Za-z][A-Za-z0-9-]*(?:\\s[^>]*)?>", true, true), 60);
    },
    DelimiterRun_tryParse(parser, runStart, runEnd, allowIntraWord, node, syntax) {
      var leftFlanking, rightFlanking, t3, _s4_ = " \t\r\n",
        preceding = runStart === 0 ? "\n" : C.JSString_methods.substring$2(parser.source, runStart - 1, runStart),
        t1 = $.$get$DelimiterRun_punctuation()._nativeRegExp,
        precededByPunctuation = t1.test(preceding),
        t2 = parser.source,
        following = runEnd === t2.length ? "\n" : C.JSString_methods.substring$2(t2, runEnd, runEnd + 1),
        followedByPunctuation = t1.test(following);
      t1 = C.JSString_methods.contains$1(_s4_, following);
      if (t1)
        leftFlanking = false;
      else
        leftFlanking = !followedByPunctuation || C.JSString_methods.contains$1(_s4_, preceding) || precededByPunctuation || allowIntraWord;
      if (C.JSString_methods.contains$1(_s4_, preceding))
        rightFlanking = false;
      else
        rightFlanking = !precededByPunctuation || t1 || followedByPunctuation || allowIntraWord;
      if (!leftFlanking && !rightFlanking)
        return null;
      t1 = C.JSString_methods.codeUnitAt$1(t2, runStart);
      if (leftFlanking)
        t2 = t1 === 42 || !rightFlanking || allowIntraWord || precededByPunctuation;
      else
        t2 = false;
      if (rightFlanking)
        t3 = t1 === 42 || !leftFlanking || allowIntraWord || followedByPunctuation;
      else
        t3 = false;
      return new A.DelimiterRun(node, t1, syntax, t2, t3);
    },
    TagSyntax$(pattern, allowIntraWord, requiresDelimiterRun, startCharacter) {
      return new A.TagSyntax(requiresDelimiterRun, allowIntraWord, B.RegExp_RegExp(pattern, true, true), startCharacter);
    },
    LinkSyntax$(linkResolver, pattern, startCharacter) {
      return new A.LinkSyntax(new A.LinkSyntax_closure(), false, false, B.RegExp_RegExp(pattern, true, true), startCharacter);
    },
    ImageSyntax$(linkResolver) {
      return new A.ImageSyntax(new A.LinkSyntax_closure(), false, false, B.RegExp_RegExp("!\\[", true, true), 33);
    },
    InlineParser: function InlineParser(t0, t1, t2, t3, t4) {
      var _ = this;
      _.source = t0;
      _.document = t1;
      _.syntaxes = t2;
      _.start = _.pos = 0;
      _._delimiterStack = t3;
      _._tree = t4;
    },
    InlineParser_parse_closure: function InlineParser_parse_closure(t0) {
      this.$this = t0;
    },
    InlineParser__linkOrImage_closure: function InlineParser__linkOrImage_closure() {
    },
    InlineParser__linkOrImage_closure0: function InlineParser__linkOrImage_closure0() {
    },
    InlineParser__linkOrImage_closure1: function InlineParser__linkOrImage_closure1(t0) {
      this.delimiter = t0;
    },
    InlineParser__linkOrImage_closure2: function InlineParser__linkOrImage_closure2(t0, t1, t2) {
      this.$this = t0;
      this.index = t1;
      this.nodeIndex = t2;
    },
    InlineParser__processEmphasis_closure: function InlineParser__processEmphasis_closure(t0) {
      this.bottomIndex = t0;
    },
    InlineParser__processEmphasis_closure0: function InlineParser__processEmphasis_closure0(t0, t1) {
      this.$this = t0;
      this.closer = t1;
    },
    InlineParser__processEmphasis_closure1: function InlineParser__processEmphasis_closure1(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.openerTextNodeIndex = t2;
    },
    InlineSyntax: function InlineSyntax() {
    },
    LineBreakSyntax: function LineBreakSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    TextSyntax: function TextSyntax(t0, t1, t2) {
      this.substitute = t0;
      this.pattern = t1;
      this._startCharacter = t2;
    },
    EscapeSyntax: function EscapeSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    InlineHtmlSyntax: function InlineHtmlSyntax(t0, t1, t2) {
      this.substitute = t0;
      this.pattern = t1;
      this._startCharacter = t2;
    },
    EmailAutolinkSyntax: function EmailAutolinkSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    AutolinkSyntax: function AutolinkSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    AutolinkExtensionSyntax: function AutolinkExtensionSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    SimpleDelimiter: function SimpleDelimiter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.node = t0;
      _.char = t1;
      _.length = t2;
      _.isActive = true;
      _.canOpen = t3;
      _.canClose = t4;
      _.syntax = t5;
      _.endPos = t6;
    },
    DelimiterRun: function DelimiterRun(t0, t1, t2, t3, t4) {
      var _ = this;
      _.node = t0;
      _.char = t1;
      _.syntax = t2;
      _.canOpen = t3;
      _.canClose = t4;
    },
    TagSyntax: function TagSyntax(t0, t1, t2, t3) {
      var _ = this;
      _.requiresDelimiterRun = t0;
      _.allowIntraWord = t1;
      _.pattern = t2;
      _._startCharacter = t3;
    },
    StrikethroughSyntax: function StrikethroughSyntax(t0, t1, t2, t3) {
      var _ = this;
      _.requiresDelimiterRun = t0;
      _.allowIntraWord = t1;
      _.pattern = t2;
      _._startCharacter = t3;
    },
    LinkSyntax: function LinkSyntax(t0, t1, t2, t3, t4) {
      var _ = this;
      _.linkResolver = t0;
      _.requiresDelimiterRun = t1;
      _.allowIntraWord = t2;
      _.pattern = t3;
      _._startCharacter = t4;
    },
    LinkSyntax_closure: function LinkSyntax_closure() {
    },
    ImageSyntax: function ImageSyntax(t0, t1, t2, t3, t4) {
      var _ = this;
      _.linkResolver = t0;
      _.requiresDelimiterRun = t1;
      _.allowIntraWord = t2;
      _.pattern = t3;
      _._startCharacter = t4;
    },
    ImageSyntax__createNode_closure: function ImageSyntax__createNode_closure() {
    },
    CodeSyntax: function CodeSyntax(t0, t1) {
      this.pattern = t0;
      this._startCharacter = t1;
    },
    InlineLink: function InlineLink(t0, t1) {
      this.destination = t0;
      this.title = t1;
    },
    CupertinoTheme_of(context) {
      var inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedCupertinoTheme),
        t1 = inheritedTheme == null ? null : inheritedTheme.theme.data;
      return (t1 == null ? C.CupertinoThemeData_KQb : t1).resolveFrom$1(context);
    },
    TextSelection$collapsed(affinity, offset) {
      return new B.TextSelection(offset, offset, affinity, false, offset, offset);
    },
    TextSelection$fromPosition(position) {
      var t1 = position.offset;
      return new B.TextSelection(t1, t1, position.affinity, false, t1, t1);
    },
    Scrollable_recommendDeferredLoadingForContext(context) {
      var t1 = context.getElementForInheritedWidgetOfExactType$1$0(type$._ScrollableScope);
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._widget;
        t1.toString;
      }
      type$.nullable__ScrollableScope._as(t1);
      if (t1 == null)
        return false;
      t1 = t1.position;
      return t1.physics.recommendDeferredLoading$3(t1._activity.get$velocity() + t1._impliedVelocity, t1.copyWith$0(), context);
    },
    MarkdownStyleSheet_MarkdownStyleSheet$fromTheme(theme) {
      var t3, t4, t5, t6, t7, t8, t9, t10, _null = null,
        t1 = theme.textTheme,
        t2 = t1.bodyMedium;
      t2.toString;
      t3 = theme.cardTheme.color;
      t4 = t3 == null;
      t5 = t4 ? theme.cardColor : t3;
      t6 = t2.fontSize;
      t6.toString;
      t6 = t2.copyWith$3$backgroundColor$fontFamily$fontSize(t5, "monospace", t6 * 0.85);
      t5 = t1.bodyLarge;
      t7 = t2.copyWith$1$color(theme.primaryColor);
      t8 = theme.dividerColor;
      t9 = A.TableBorder_TableBorder$all(t8, 1);
      t10 = B.BorderRadius$circular(2);
      if (t4)
        t3 = theme.cardColor;
      return B.MarkdownStyleSheet$(D.TextStyle_yHr, 8, t2, C.WrapAlignment_0, new B.BoxDecoration(C.Color_4290502395, _null, _null, t10, _null, _null, C.BoxShape_0), C.EdgeInsets_8_8_8_8, t7, t6, C.WrapAlignment_0, new B.BoxDecoration(t3, _null, _null, B.BorderRadius$circular(2), _null, _null, C.BoxShape_0), C.EdgeInsets_8_8_8_8, D.TextStyle_9Zz, D.TextStyle_LB7, t1.headlineSmall, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t1.titleLarge, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t1.titleMedium, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t5, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t5, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t5, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, new B.BoxDecoration(_null, _null, new B.Border(new B.BorderSide(t8, 5, C.BorderStyle_1, C.StrokeAlign_0), C.BorderSide_aLd, C.BorderSide_aLd, C.BorderSide_aLd), _null, _null, _null, C.BoxShape_0), t2, t2, D.EdgeInsets_0_0_4_0, 24, C.WrapAlignment_0, t2, C.EdgeInsets_0_0_0_0, C.TextStyle_ia3, t2, t9, D.BoxDecoration_423, D.EdgeInsets_16_8_16_8, D.C_FlexColumnWidth, D.TextStyle_ia30, C.TextAlign_2, C.WrapAlignment_0, _null, C.WrapAlignment_0);
    },
    MarkdownStyleSheet_MarkdownStyleSheet$fromCupertinoTheme(theme) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _null = null,
        t1 = theme.get$textTheme().get$textStyle();
      t1 = t1.copyWith$1$color(theme.get$brightness() === C.Brightness_0 ? D.Color_4278813951 : C.Color_4278221567);
      t2 = theme.get$textTheme().get$textStyle();
      t3 = theme.get$textTheme().get$textStyle();
      t4 = theme.get$brightness() === C.Brightness_0 ? C.Color_4280032286 : D.Color_4294111991;
      t5 = theme.get$textTheme().get$textStyle().fontSize;
      t5.toString;
      t5 = t3.copyWith$3$backgroundColor$fontFamily$fontSize(t4, "monospace", t5 * 0.85);
      t4 = theme.get$textTheme().get$textStyle();
      t3 = theme.get$textTheme().get$textStyle().fontSize;
      t3.toString;
      t3 = t4.copyWith$2$fontSize$fontWeight(t3 + 10, C.FontWeight_4);
      t4 = theme.get$textTheme().get$textStyle();
      t6 = theme.get$textTheme().get$textStyle().fontSize;
      t6.toString;
      t6 = t4.copyWith$2$fontSize$fontWeight(t6 + 8, C.FontWeight_4);
      t4 = theme.get$textTheme().get$textStyle();
      t7 = theme.get$textTheme().get$textStyle().fontSize;
      t7.toString;
      t7 = t4.copyWith$2$fontSize$fontWeight(t7 + 6, C.FontWeight_4);
      t4 = theme.get$textTheme().get$textStyle();
      t8 = theme.get$textTheme().get$textStyle().fontSize;
      t8.toString;
      t8 = t4.copyWith$2$fontSize$fontWeight(t8 + 4, C.FontWeight_4);
      t4 = theme.get$textTheme().get$textStyle();
      t9 = theme.get$textTheme().get$textStyle().fontSize;
      t9.toString;
      t9 = t4.copyWith$2$fontSize$fontWeight(t9 + 2, C.FontWeight_4);
      t4 = theme.get$textTheme().get$textStyle().copyWith$1$fontWeight(C.FontWeight_4);
      t10 = theme.get$textTheme().get$textStyle().copyWith$1$fontStyle(D.FontStyle_1);
      t11 = theme.get$textTheme().get$textStyle().copyWith$1$fontWeight(C.FontWeight_6);
      t12 = theme.get$textTheme().get$textStyle().copyWith$1$decoration(C.TextDecoration_4);
      t13 = theme.get$textTheme().get$textStyle();
      t14 = theme.get$textTheme().get$textStyle();
      t15 = theme.get$textTheme().get$textStyle().copyWith$1$color(theme.get$primaryColor());
      t16 = theme.get$textTheme().get$textStyle();
      t17 = theme.get$textTheme().get$textStyle().copyWith$1$fontWeight(C.FontWeight_5);
      t18 = theme.get$textTheme().get$textStyle();
      t19 = A.TableBorder_TableBorder$all(D.CupertinoDynamicColor_SZk, 0);
      t20 = theme.get$brightness() === C.Brightness_0 ? C.Color_4280032286 : D.Color_4294111991;
      t21 = theme.get$brightness() === C.Brightness_0 ? C.Color_4280032286 : D.Color_4294111991;
      t22 = theme.get$brightness() === C.Brightness_0 ? D.Color_4282006076 : D.Color_4291940822;
      t23 = theme.get$brightness() === C.Brightness_0 ? C.Color_4280032286 : D.Color_4294111991;
      t24 = theme.get$brightness() === C.Brightness_0 ? D.Color_4282006076 : D.Color_4291940822;
      return B.MarkdownStyleSheet$(t1, 8, t13, C.WrapAlignment_0, new B.BoxDecoration(t21, _null, new B.Border(C.BorderSide_aLd, C.BorderSide_aLd, C.BorderSide_aLd, new B.BorderSide(t22, 4, C.BorderStyle_1, C.StrokeAlign_0)), _null, _null, _null, C.BoxShape_0), D.EdgeInsets_16_16_16_16, t15, t5, C.WrapAlignment_0, new B.BoxDecoration(t23, _null, _null, _null, _null, _null, C.BoxShape_0), C.EdgeInsets_8_8_8_8, t12, t10, t3, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t6, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t7, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t8, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t9, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, t4, C.WrapAlignment_0, C.EdgeInsets_0_0_0_0, new B.BoxDecoration(_null, _null, new B.Border(new B.BorderSide(t24, 1, C.BorderStyle_1, C.StrokeAlign_0), C.BorderSide_aLd, C.BorderSide_aLd, C.BorderSide_aLd), _null, _null, _null, C.BoxShape_0), t14, t16, D.EdgeInsets_0_0_4_0, 24, C.WrapAlignment_0, t2, C.EdgeInsets_0_0_0_0, t11, t18, t19, new B.BoxDecoration(t20, _null, _null, _null, _null, _null, C.BoxShape_0), D.EdgeInsets_16_8_16_8, D.C_FlexColumnWidth, t17, C.TextAlign_2, C.WrapAlignment_0, _null, C.WrapAlignment_0);
    },
    escapeAttribute(value) {
      var ch,
        t1 = value.length,
        i = 0, t2 = "";
      while (true) {
        if (!(i < t1)) {
          t1 = t2;
          break;
        }
        ch = C.JSString_methods._codeUnitAt$1(value, i);
        if (ch === 92) {
          ++i;
          if (i === t1) {
            t1 = t2 + B.Primitives_stringFromCharCode(ch);
            break;
          }
          ch = C.JSString_methods._codeUnitAt$1(value, i);
          switch (ch) {
            case 34:
              t2 += "&quot;";
              break;
            case 33:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 123:
            case 124:
            case 125:
            case 126:
              t2 += B.Primitives_stringFromCharCode(ch);
              break;
            default:
              t2 = t2 + "%5C" + B.Primitives_stringFromCharCode(ch);
          }
        } else
          t2 = ch === 34 ? t2 + "%22" : t2 + B.Primitives_stringFromCharCode(ch);
        ++i;
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join(part1, part2) {
      var _null = null;
      return $.$get$context().join$8(0, part1, part2, _null, _null, _null, _null, _null, _null);
    }
  },
  B, C, J, E, D, F, G, H;
  A = hunkHelpers.updateHolder(holdersList[12], A);
  B = holdersList[0];
  C = holdersList[2];
  J = holdersList[1];
  E = holdersList[23];
  D = holdersList[30];
  F = holdersList[18];
  G = holdersList[29];
  H = holdersList[20];
  A.LineSplitter.prototype = {
    convert$1(data) {
      var sliceStart, char, i, char0,
        lines = B._setArrayType([], type$.JSArray_String),
        end = data.length;
      for (sliceStart = 0, char = 0, i = 0; i < end; ++i, char = char0) {
        char0 = C.JSString_methods._codeUnitAt$1(data, i);
        if (char0 !== 13) {
          if (char0 !== 10)
            continue;
          if (char === 13) {
            sliceStart = i + 1;
            continue;
          }
        }
        lines.push(C.JSString_methods.substring$2(data, sliceStart, i));
        sliceStart = i + 1;
      }
      if (sliceStart < end)
        lines.push(C.JSString_methods.substring$2(data, sliceStart, end));
      return lines;
    }
  };
  A.SelectableText.prototype = {};
  A.AssetBundleImageKey.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(_this))
        return false;
      return other instanceof A.AssetBundleImageKey && other.bundle === _this.bundle && other.name === _this.name && other.scale === _this.scale;
    },
    get$hashCode(_) {
      return B.Object_hash(this.bundle, this.name, this.scale, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return "AssetBundleImageKey(bundle: " + this.bundle.toString$0(0) + ', name: "' + this.name + '", scale: ' + B.S(this.scale) + ")";
    }
  };
  A.AssetBundleImageProvider.prototype = {
    loadBuffer$2(key, decode) {
      return B.MultiFrameImageStreamCompleter$(null, this._loadAsync$3(key, decode, null), key.name, null, key.scale);
    },
    load$2(_, key, decode) {
      return B.MultiFrameImageStreamCompleter$(null, this._loadAsync$3(key, null, decode), key.name, null, key.scale);
    },
    _loadAsync$3(key, decode, decodeDepreacted) {
      return this._loadAsync$body$AssetBundleImageProvider(key, decode, decodeDepreacted);
    },
    _loadAsync$body$AssetBundleImageProvider(key, decode, decodeDepreacted) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$handler = 2, $async$currentError, buffer, data, exception, t1, $async$exception, $async$exception1;
      var $async$_loadAsync$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = decode != null ? 3 : 4;
              break;
            case 3:
              // then
              buffer = null;
              $async$handler = 6;
              $async$goto = 9;
              return B._asyncAwait(key.bundle.loadBuffer$1(key.name), $async$_loadAsync$3);
            case 9:
              // returning from await.
              buffer = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              if (B.unwrapException($async$exception) instanceof B.FlutterError) {
                t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
                t1.evict$1(key);
                throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 8:
              // after finally
              if (buffer == null) {
                t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
                t1.evict$1(key);
                throw B.wrapException(B.StateError$("Unable to read data"));
              }
              $async$returnValue = decode.call$1(buffer);
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              data = null;
              $async$handler = 11;
              $async$goto = 14;
              return B._asyncAwait(key.bundle.load$1(0, key.name), $async$_loadAsync$3);
            case 14:
              // returning from await.
              data = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception1 = $async$currentError;
              if (B.unwrapException($async$exception1) instanceof B.FlutterError) {
                t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
                t1.evict$1(key);
                throw $async$exception1;
              } else
                throw $async$exception1;
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
              if (data == null) {
                t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
                t1.evict$1(key);
                throw B.wrapException(B.StateError$("Unable to read data"));
              }
              decodeDepreacted.toString;
              $async$returnValue = decodeDepreacted.call$1(B.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_loadAsync$3, $async$completer);
    }
  };
  A.MemoryImage.prototype = {
    obtainKey$1(configuration) {
      return new B.SynchronousFuture(this, type$.SynchronousFuture_MemoryImage);
    },
    load$2(_, key, decode) {
      return B.MultiFrameImageStreamCompleter$(null, this._loadAsync$3(key, null, decode), "MemoryImage(" + ("<optimized out>#" + B.shortHash(key.bytes)) + ")", null, key.scale);
    },
    loadBuffer$2(key, decode) {
      return B.MultiFrameImageStreamCompleter$(null, this._loadAsync$3(key, decode, null), "MemoryImage(" + ("<optimized out>#" + B.shortHash(key.bytes)) + ")", null, key.scale);
    },
    _loadAsync$3(key, decode, decodeDepreacted) {
      return this._loadAsync$body$MemoryImage(key, decode, decodeDepreacted);
    },
    _loadAsync$body$MemoryImage(key, decode, decodeDepreacted) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$_loadAsync$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = decode != null ? 3 : 4;
              break;
            case 3:
              // then
              $async$temp1 = decode;
              $async$goto = 5;
              return B._asyncAwait(B.ImmutableBuffer_fromUint8List($async$self.bytes), $async$_loadAsync$3);
            case 5:
              // returning from await.
              $async$returnValue = $async$temp1.call$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$returnValue = decodeDepreacted.call$1($async$self.bytes);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_loadAsync$3, $async$completer);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(this))
        return false;
      return other instanceof A.MemoryImage && other.bytes === this.bytes && other.scale === this.scale;
    },
    get$hashCode(_) {
      return B.Object_hash(B.Primitives_objectHashCode(this.bytes), this.scale, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return "MemoryImage(" + ("<optimized out>#" + B.shortHash(this.bytes)) + ", scale: " + this.scale + ")";
    }
  };
  A.AssetImage.prototype = {
    get$keyName() {
      return this.assetName;
    },
    obtainKey$1(configuration) {
      var t2, t1 = {},
        chosenBundle = configuration.bundle;
      if (chosenBundle == null)
        chosenBundle = $.$get$rootBundle();
      t1.result = t1.completer = null;
      chosenBundle.loadStructuredData$1$2("AssetManifest.json", A.image_resolution_AssetImage__manifestParser$closure(), type$.nullable_Map_of_String_and_List_String).then$1$1(new A.AssetImage_obtainKey_closure(t1, this, configuration, chosenBundle), type$.void).catchError$1(new A.AssetImage_obtainKey_closure0(t1));
      t2 = t1.result;
      if (t2 != null)
        return t2;
      t2 = new B._Future($.Zone__current, type$._Future_AssetBundleImageKey);
      t1.completer = new B._AsyncCompleter(t2, type$._AsyncCompleter_AssetBundleImageKey);
      return t2;
    },
    _chooseVariant$3(main, config, candidates) {
      var mapping, t2, t3,
        t1 = config.devicePixelRatio;
      if (t1 == null || candidates == null || J.get$isEmpty$asx(candidates))
        return main;
      mapping = E.SplayTreeMap$(type$.double, type$.String);
      for (t2 = J.get$iterator$ax(candidates); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        mapping.$indexSet(0, this._parseScale$1(t3), t3);
      }
      t1.toString;
      return this._findBestVariant$2(mapping, t1);
    },
    _findBestVariant$2(candidates, value) {
      var t1, lower, upper;
      if (candidates._containsKey$1(value)) {
        t1 = candidates.$index(0, value);
        t1.toString;
        return t1;
      }
      lower = candidates.lastKeyBefore$1(value);
      upper = candidates.firstKeyAfter$1(value);
      if (lower == null)
        return candidates.$index(0, upper);
      if (upper == null)
        return candidates.$index(0, lower);
      if (value < 2 || value > (lower + upper) / 2)
        return candidates.$index(0, upper);
      else
        return candidates.$index(0, lower);
    },
    _parseScale$1(key) {
      var assetUri, directoryPath, match, t1;
      if (key === this.assetName)
        return 1;
      assetUri = B.Uri_parse(key, 0, null);
      directoryPath = assetUri.get$pathSegments().length > 1 ? assetUri.get$pathSegments()[assetUri.get$pathSegments().length - 2] : "";
      match = $.$get$AssetImage__extractRatioRegExp().firstMatch$1(directoryPath);
      if (match != null && match._match.length - 1 > 0) {
        t1 = match._match[1];
        t1.toString;
        return B.double_parse(t1);
      }
      return 1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(this))
        return false;
      return other instanceof A.AssetImage && other.get$keyName() === this.get$keyName() && true;
    },
    get$hashCode(_) {
      return B.Object_hash(this.get$keyName(), this.bundle, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return "AssetImage(bundle: " + B.S(this.bundle) + ', name: "' + this.get$keyName() + '")';
    }
  };
  A.TextSelectionPoint.prototype = {
    toString$0(_) {
      var _this = this;
      switch (_this.direction) {
        case C.TextDirection_1:
          return _this.point.toString$0(0) + "-ltr";
        case C.TextDirection_0:
          return _this.point.toString$0(0) + "-rtl";
        case null:
          return _this.point.toString$0(0);
      }
    }
  };
  A.RenderEditablePainter.prototype = {};
  A._FloatingCursorPainter.prototype = {
    set$floatingCursorRect(value) {
      if (J.$eq$(this._floatingCursorRect, value))
        return;
      this._floatingCursorRect = value;
      this.notifyListeners$0();
    }
  };
  A.RenderImage.prototype = {
    _image$_resolve$0() {
      var _this = this;
      if (_this._image$_resolvedAlignment != null)
        return;
      _this._image$_resolvedAlignment = _this._image$_alignment;
      _this._flipHorizontally = false;
    },
    _markNeedResolution$0() {
      this._flipHorizontally = this._image$_resolvedAlignment = null;
      this.markNeedsPaint$0();
    },
    set$image(_, value) {
      var _this = this,
        t1 = _this._image;
      if (value == t1)
        return;
      if (value != null && t1 != null && value.isCloneOf$1(t1)) {
        value.dispose$0();
        return;
      }
      t1 = _this._image;
      if (t1 != null)
        t1.dispose$0();
      _this._image = value;
      _this.markNeedsPaint$0();
      if (_this._image$_width == null || _this._image$_height == null)
        _this.markNeedsLayout$0();
    },
    set$width(_, value) {
      if (value == this._image$_width)
        return;
      this._image$_width = value;
      this.markNeedsLayout$0();
    },
    set$height(_, value) {
      if (value == this._image$_height)
        return;
      this._image$_height = value;
      this.markNeedsLayout$0();
    },
    set$scale(_, value) {
      if (value === this._scale)
        return;
      this._scale = value;
      this.markNeedsLayout$0();
    },
    _updateColorFilter$0() {
      this._colorFilter = null;
    },
    set$color(_, value) {
      return;
    },
    set$opacity(_, value) {
      return;
    },
    set$filterQuality(value) {
      if (value === this._filterQuality)
        return;
      this._filterQuality = value;
      this.markNeedsPaint$0();
    },
    set$colorBlendMode(value) {
      return;
    },
    set$fit(value) {
      return;
    },
    set$alignment(value) {
      if (value.$eq(0, this._image$_alignment))
        return;
      this._image$_alignment = value;
      this._markNeedResolution$0();
    },
    set$repeat(_, value) {
      if (value === this._repeat)
        return;
      this._repeat = value;
      this.markNeedsPaint$0();
    },
    set$centerSlice(value) {
      return;
    },
    set$invertColors(value) {
      if (value === this._invertColors)
        return;
      this._invertColors = value;
      this.markNeedsPaint$0();
    },
    set$matchTextDirection(value) {
      return;
    },
    set$textDirection(value) {
      if (this._image$_textDirection == value)
        return;
      this._image$_textDirection = value;
      this._markNeedResolution$0();
    },
    set$isAntiAlias(value) {
      return;
    },
    _sizeForConstraints$1(constraints) {
      var t2, t3, _this = this,
        t1 = _this._image$_width;
      constraints = B.BoxConstraints$tightFor(_this._image$_height, t1).enforce$1(constraints);
      t1 = _this._image;
      if (t1 == null)
        return new B.Size(B.clampDouble(0, constraints.minWidth, constraints.maxWidth), B.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      t1 = t1.get$width(t1);
      t2 = _this._scale;
      t3 = _this._image;
      return constraints.constrainSizeAndAttemptToPreserveAspectRatio$1(new B.Size(t1 / t2, t3.get$height(t3) / _this._scale));
    },
    hitTestSelf$1(position) {
      return true;
    },
    computeDryLayout$1(constraints) {
      return this._sizeForConstraints$1(constraints);
    },
    performLayout$0() {
      this._size = this._sizeForConstraints$1(type$.BoxConstraints._as(B.RenderObject.prototype.get$constraints.call(this)));
    },
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$AbstractNode$detach(0);
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _this = this;
      if (_this._image == null)
        return;
      _this._image$_resolve$0();
      t1 = context.get$canvas(context);
      t2 = _this._size;
      t3 = offset._dx;
      t4 = offset._dy;
      t5 = t2._dx;
      t2 = t2._dy;
      t6 = _this._image;
      t6.toString;
      t7 = _this.debugImageLabel;
      t8 = _this._scale;
      t9 = _this._colorFilter;
      t10 = _this._image$_fit;
      t11 = _this._image$_resolvedAlignment;
      t11.toString;
      t12 = _this._centerSlice;
      t13 = _this._repeat;
      t14 = _this._flipHorizontally;
      t14.toString;
      t15 = _this._invertColors;
      B.paintImage(t11, t1, t12, t9, t7, _this._filterQuality, t10, t14, t6, t15, false, 1, new B.Rect(t3, t4, t3 + t5, t4 + t2), t13, t8);
    },
    dispose$0() {
      var t1 = this._image;
      if (t1 != null)
        t1.dispose$0();
      this._image = null;
      this.super$RenderObject$dispose();
    }
  };
  A.FollowerLayer.prototype = {
    _transformOffset$1(localPosition) {
      var t1, vector, t2, t3, _this = this;
      if (_this._inverseDirty) {
        t1 = _this.getLastTransform$0();
        t1.toString;
        _this._invertedTransform = B.Matrix4_tryInvert(t1);
        _this._inverseDirty = false;
      }
      if (_this._invertedTransform == null)
        return null;
      vector = new B.Vector4(new Float64Array(4));
      vector.setValues$4(localPosition._dx, localPosition._dy, 0, 1);
      t1 = _this._invertedTransform.transform$1(0, vector)._v4storage;
      t2 = t1[0];
      t3 = _this.linkedOffset;
      return new B.Offset(t2 - t3._dx, t1[1] - t3._dy);
    },
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst) {
      var transformedOffset;
      if (this._layer$_link._leader == null)
        return false;
      transformedOffset = this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return this.super$ContainerLayer$findAnnotations(result, transformedOffset, true);
    },
    findAnnotations$3$onlyFirst(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    getLastTransform$0() {
      var t1, result;
      if (this._layer$_lastTransform == null)
        return null;
      t1 = this._lastOffset;
      result = B.Matrix4_Matrix4$translationValues(-t1._dx, -t1._dy, 0);
      t1 = this._layer$_lastTransform;
      t1.toString;
      result.multiply$1(0, t1);
      return result;
    },
    _establishTransform$0() {
      var leader, t1, forwardLayers, inverseLayers, forwardTransform, inverseTransform, _this = this;
      _this._layer$_lastTransform = null;
      leader = _this._layer$_link._leader;
      if (leader == null)
        return;
      t1 = type$.JSArray_ContainerLayer;
      forwardLayers = B._setArrayType([leader], t1);
      inverseLayers = B._setArrayType([_this], t1);
      A.FollowerLayer__pathsToCommonAncestor(leader, _this, forwardLayers, inverseLayers);
      forwardTransform = A.FollowerLayer__collectTransformForLayerChain(forwardLayers);
      leader.applyTransform$2(null, forwardTransform);
      t1 = _this.linkedOffset;
      forwardTransform.translate$2(0, t1._dx, t1._dy);
      inverseTransform = A.FollowerLayer__collectTransformForLayerChain(inverseLayers);
      if (inverseTransform.copyInverse$1(inverseTransform) === 0)
        return;
      inverseTransform.multiply$1(0, forwardTransform);
      _this._layer$_lastTransform = inverseTransform;
      _this._inverseDirty = true;
    },
    get$alwaysNeedsAddToScene() {
      return true;
    },
    addToScene$1(builder) {
      var t1, t2, _this = this;
      if (_this._layer$_link._leader == null && true) {
        _this._lastOffset = _this._layer$_lastTransform = null;
        _this._inverseDirty = true;
        _this.set$engineLayer(null);
        return;
      }
      _this._establishTransform$0();
      t1 = _this._layer$_lastTransform;
      t2 = type$.nullable_TransformEngineLayer;
      if (t1 != null) {
        _this._lastOffset = _this.unlinkedOffset;
        _this.set$engineLayer(builder.pushTransform$2$oldLayer(t1._m4storage, t2._as(_this._engineLayer)));
        _this.addChildrenToScene$1(builder);
        builder.pop$0();
      } else {
        _this._lastOffset = null;
        t1 = _this.unlinkedOffset;
        _this.set$engineLayer(builder.pushTransform$2$oldLayer(B.Matrix4_Matrix4$translationValues(t1._dx, t1._dy, 0)._m4storage, t2._as(_this._engineLayer)));
        _this.addChildrenToScene$1(builder);
        builder.pop$0();
      }
      _this._inverseDirty = true;
    },
    applyTransform$2(child, transform) {
      var t1 = this._layer$_lastTransform;
      if (t1 != null)
        transform.multiply$1(0, t1);
      else {
        t1 = this.unlinkedOffset;
        transform.multiply$1(0, B.Matrix4_Matrix4$translationValues(t1._dx, t1._dy, 0));
      }
    }
  };
  A.RenderFollowerLayer.prototype = {
    set$link(value) {
      if (this._proxy_box$_link === value)
        return;
      this._proxy_box$_link = value;
      this.markNeedsPaint$0();
    },
    set$showWhenUnlinked(value) {
      return;
    },
    set$offset(_, value) {
      if (this._proxy_box$_offset.$eq(0, value))
        return;
      this._proxy_box$_offset = value;
      this.markNeedsPaint$0();
    },
    set$leaderAnchor(value) {
      if (this._leaderAnchor.$eq(0, value))
        return;
      this._leaderAnchor = value;
      this.markNeedsPaint$0();
    },
    set$followerAnchor(value) {
      if (this._followerAnchor.$eq(0, value))
        return;
      this._followerAnchor = value;
      this.markNeedsPaint$0();
    },
    detach$0(_) {
      this._layerHandle.set$layer(0, null);
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    getCurrentTransform$0() {
      var t1 = type$.nullable_FollowerLayer._as(B.RenderObject.prototype.get$layer.call(this, this));
      t1 = t1 == null ? null : t1.getLastTransform$0();
      if (t1 == null) {
        t1 = new B.Matrix4(new Float64Array(16));
        t1.setIdentity$0();
      }
      return t1;
    },
    hitTest$2$position(result, position) {
      if (this._proxy_box$_link._leader == null && true)
        return false;
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position(result, position) {
      return result.addWithPaintTransform$3$hitTest$position$transform(new A.RenderFollowerLayer_hitTestChildren_closure(this), position, this.getCurrentTransform$0());
    },
    paint$2(context, offset) {
      var effectiveLinkedOffset, t1, t2, t3, _this = this,
        leaderSize = _this._proxy_box$_link.leaderSize;
      if (leaderSize == null)
        effectiveLinkedOffset = _this._proxy_box$_offset;
      else {
        t1 = _this._leaderAnchor.alongSize$1(leaderSize);
        t2 = _this._followerAnchor;
        t3 = _this._size;
        t3.toString;
        effectiveLinkedOffset = t1.$sub(0, t2.alongSize$1(t3)).$add(0, _this._proxy_box$_offset);
      }
      t1 = type$.nullable_FollowerLayer;
      if (t1._as(B.RenderObject.prototype.get$layer.call(_this, _this)) == null)
        _this._layerHandle.set$layer(0, new A.FollowerLayer(_this._proxy_box$_link, false, offset, effectiveLinkedOffset, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), B.LayerHandle$(type$.Layer)));
      else {
        t2 = t1._as(B.RenderObject.prototype.get$layer.call(_this, _this));
        if (t2 != null) {
          t2._layer$_link = _this._proxy_box$_link;
          t2.showWhenUnlinked = false;
          t2.linkedOffset = effectiveLinkedOffset;
          t2.unlinkedOffset = offset;
        }
      }
      t1 = t1._as(B.RenderObject.prototype.get$layer.call(_this, _this));
      t1.toString;
      context.pushLayer$4$childPaintBounds(t1, B.RenderProxyBoxMixin.prototype.get$paint.call(_this), C.Offset_0_0, D.Rect_Vy7);
    },
    applyPaintTransform$2(child, transform) {
      transform.multiply$1(0, this.getCurrentTransform$0());
    }
  };
  A.TableCellParentData.prototype = {
    toString$0(_) {
      var t1 = this.super$BoxParentData$toString(0);
      return t1 + "; default vertical alignment";
    }
  };
  A.TableColumnWidth.prototype = {
    toString$0(_) {
      return "TableColumnWidth";
    }
  };
  A.FlexColumnWidth.prototype = {
    toString$0(_) {
      return "FlexColumnWidth(" + B.debugFormatDouble(1) + ")";
    }
  };
  A.TableCellVerticalAlignment.prototype = {
    toString$0(_) {
      return "TableCellVerticalAlignment." + this._core$_name;
    }
  };
  A.RenderTable.prototype = {
    set$columnWidths(value) {
      var t1;
      if (this._columnWidths._collection$_length === 0 && true)
        return;
      t1 = B.HashMap_HashMap(type$.int, type$.TableColumnWidth);
      this._columnWidths = t1;
      this.markNeedsLayout$0();
    },
    set$defaultColumnWidth(value) {
      if (this._defaultColumnWidth === value)
        return;
      this._defaultColumnWidth = value;
      this.markNeedsLayout$0();
    },
    set$textDirection(value) {
      if (this._table$_textDirection === value)
        return;
      this._table$_textDirection = value;
      this.markNeedsLayout$0();
    },
    set$border(_, value) {
      if (J.$eq$(this._border, value))
        return;
      this._border = value;
      this.markNeedsPaint$0();
    },
    set$rowDecorations(value) {
      var t2, _i, painter, _this = this,
        t1 = _this._table$_rowDecorations;
      if (t1 == null ? value == null : t1 === value)
        return;
      _this._table$_rowDecorations = value;
      t1 = _this._rowDecorationPainters;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t2; ++_i) {
          painter = t1[_i];
          if (painter != null)
            painter.dispose$0();
        }
      t1 = _this._table$_rowDecorations;
      _this._rowDecorationPainters = t1 != null ? B.List_List$filled(t1.length, null, false, type$.nullable_BoxPainter) : null;
    },
    set$configuration(value) {
      if (value.$eq(0, this._table$_configuration))
        return;
      this._table$_configuration = value;
      this.markNeedsPaint$0();
    },
    set$defaultVerticalAlignment(value) {
      if (this._defaultVerticalAlignment === value)
        return;
      this._defaultVerticalAlignment = value;
      this.markNeedsLayout$0();
    },
    set$textBaseline(_, value) {
      return;
    },
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.TableCellParentData))
        child.parentData = new A.TableCellParentData(C.Offset_0_0);
    },
    setFlatChildren$2(columns, cells) {
      var t2, _i, oldChild, lostChildren, y, x, xyOld, xyNew, t3, _this = this,
        t1 = _this._table$_children;
      if (cells === t1 && columns === _this._columns)
        return;
      if (columns === 0 || cells.length === 0) {
        _this._columns = columns;
        t2 = t1.length;
        if (t2 === 0)
          return;
        for (_i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
          oldChild = t1[_i];
          if (oldChild != null)
            _this.dropChild$1(oldChild);
        }
        _this._rows = 0;
        C.JSArray_methods.clear$0(_this._table$_children);
        _this.markNeedsLayout$0();
        return;
      }
      lostChildren = B.HashSet_HashSet(type$.RenderBox);
      for (y = 0; y < _this._rows; ++y)
        for (t1 = y * columns, x = 0; t2 = _this._columns, x < t2; ++x) {
          xyOld = x + y * t2;
          xyNew = x + t1;
          t2 = _this._table$_children[xyOld];
          if (t2 != null)
            t2 = x >= columns || xyNew >= cells.length || !J.$eq$(t2, cells[xyNew]);
          else
            t2 = false;
          if (t2) {
            t2 = _this._table$_children[xyOld];
            t2.toString;
            lostChildren.add$1(0, t2);
          }
        }
      for (y = 0; t1 = y * columns, t1 < cells.length;) {
        for (x = 0; x < columns; ++x) {
          xyNew = x + t1;
          t2 = _this._columns;
          t3 = cells[xyNew];
          if (t3 != null)
            t2 = x >= t2 || y >= _this._rows || !J.$eq$(_this._table$_children[x + y * t2], t3);
          else
            t2 = false;
          if (t2)
            if (!lostChildren.remove$1(0, cells[xyNew])) {
              t2 = cells[xyNew];
              t2.toString;
              _this.setupParentData$1(t2);
              _this.markNeedsLayout$0();
              _this.markNeedsCompositingBitsUpdate$0();
              _this.markNeedsSemanticsUpdate$0();
              _this.super$AbstractNode$adoptChild(t2);
            }
        }
        ++y;
      }
      lostChildren.forEach$1(0, _this.get$dropChild());
      _this._columns = columns;
      _this._rows = C.JSInt_methods.$tdiv(cells.length, columns);
      _this._table$_children = B.List_List$of(cells, true, type$.nullable_RenderBox);
      _this.markNeedsLayout$0();
    },
    setChild$3(x, y, value) {
      var _this = this,
        xy = x + y * _this._columns,
        oldChild = _this._table$_children[xy];
      if (oldChild == value)
        return;
      if (oldChild != null)
        _this.dropChild$1(oldChild);
      C.JSArray_methods.$indexSet(_this._table$_children, xy, value);
      if (value != null)
        _this.adoptChild$1(value);
    },
    attach$1(owner) {
      var t1, t2, _i, child;
      this.super$RenderObject$attach(owner);
      for (t1 = this._table$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        if (child != null)
          child.attach$1(owner);
      }
    },
    detach$0(_) {
      var t1, t2, _i, painter, child, _this = this;
      _this.super$AbstractNode$detach(0);
      t1 = _this._rowDecorationPainters;
      if (t1 != null) {
        for (t2 = t1.length, _i = 0; _i < t2; ++_i) {
          painter = t1[_i];
          if (painter != null)
            painter.dispose$0();
        }
        _this._rowDecorationPainters = B.List_List$filled(_this._table$_rowDecorations.length, null, false, type$.nullable_BoxPainter);
      }
      for (t1 = _this._table$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        if (child != null)
          J.detach$0$z(child);
      }
    },
    visitChildren$1(visitor) {
      var t1, t2, _i, child;
      for (t1 = this._table$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        if (child != null)
          visitor.call$1(child);
      }
    },
    computeDistanceToActualBaseline$1(baseline) {
      return this._baselineDistance;
    },
    column$1(x) {
      return this.column$body$RenderTable(x);
    },
    column$body$RenderTable($async$x) {
      var $async$self = this;
      return B._makeSyncStarIterable(function() {
        var x = $async$x;
        var $async$goto = 0, $async$handler = 1, $async$currentError, y, t1, child;
        return function $async$column$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                y = 0;
              case 2:
                // for condition
                if (!(y < $async$self._rows)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t1 = $async$self._columns;
                child = $async$self._table$_children[x + y * t1];
                $async$goto = child != null ? 5 : 6;
                break;
              case 5:
                // then
                $async$goto = 7;
                return child;
              case 7:
                // after yield
              case 6:
                // join
              case 3:
                // for update
                ++y;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return B._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return B._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.RenderBox);
    },
    _computeColumnWidths$1(constraints) {
      var totalFlex, x, availableColumns, maxWidthConstraint, minWidthConstraint, targetWidth, remainingWidth, tableWidth, flexedWidth, delta, deficit, availableColumns0, newTotalFlex, t2, newWidth, t3, newAvailableColumns, availableDelta, _this = this,
        t1 = type$.double,
        widths = B.List_List$filled(_this._columns, 0, false, t1),
        minWidths = B.List_List$filled(_this._columns, 0, false, t1),
        flexes = B.List_List$filled(_this._columns, null, false, type$.nullable_double);
      for (totalFlex = 0, x = 0; availableColumns = _this._columns, x < availableColumns; ++x) {
        _this._columnWidths.$index(0, x);
        _this.column$1(x);
        widths[x] = 0;
        minWidths[x] = 0;
        flexes[x] = 1;
        ++totalFlex;
      }
      maxWidthConstraint = constraints.maxWidth;
      minWidthConstraint = constraints.minWidth;
      if (totalFlex > 0) {
        targetWidth = isFinite(maxWidthConstraint) ? maxWidthConstraint : minWidthConstraint;
        if (0 < targetWidth) {
          remainingWidth = targetWidth - 0;
          for (tableWidth = 0, x = 0; x < availableColumns; ++x) {
            t1 = flexes[x];
            if (t1 != null) {
              flexedWidth = remainingWidth * t1 / totalFlex;
              t1 = widths[x];
              if (t1 < flexedWidth) {
                tableWidth += flexedWidth - t1;
                widths[x] = flexedWidth;
              }
            }
          }
        } else
          tableWidth = 0;
      } else if (0 < minWidthConstraint) {
        delta = (minWidthConstraint - 0) / availableColumns;
        for (x = 0; x < availableColumns; ++x)
          widths[x] = widths[x] + delta;
        tableWidth = minWidthConstraint;
      } else
        tableWidth = 0;
      if (tableWidth > maxWidthConstraint) {
        deficit = tableWidth - maxWidthConstraint;
        availableColumns0 = availableColumns;
        while (true) {
          if (!(deficit > 1e-10 && totalFlex > 1e-10))
            break;
          for (newTotalFlex = 0, x = 0; x < availableColumns; ++x) {
            t1 = flexes[x];
            if (t1 != null) {
              t2 = widths[x];
              newWidth = t2 - deficit * t1 / totalFlex;
              t3 = minWidths[x];
              if (newWidth <= t3) {
                deficit -= t2 - t3;
                widths[x] = t3;
                flexes[x] = null;
                --availableColumns0;
              } else {
                deficit -= t2 - newWidth;
                widths[x] = newWidth;
                newTotalFlex += t1;
              }
            }
          }
          totalFlex = newTotalFlex;
        }
        while (true) {
          if (!(deficit > 1e-10 && availableColumns0 > 0))
            break;
          delta = deficit / availableColumns0;
          for (newAvailableColumns = 0, x = 0; x < availableColumns; ++x) {
            t1 = widths[x];
            t2 = minWidths[x];
            availableDelta = t1 - t2;
            if (availableDelta > 0)
              if (availableDelta <= delta) {
                deficit -= availableDelta;
                widths[x] = t2;
              } else {
                deficit -= delta;
                widths[x] = t1 - delta;
                ++newAvailableColumns;
              }
          }
          availableColumns0 = newAvailableColumns;
        }
      }
      return widths;
    },
    computeDryLayout$1(constraints) {
      var widths, tableWidth, t1, rowTop, y, rowHeight, x, t2, child, _this = this;
      if (_this._rows * _this._columns === 0)
        return constraints.constrain$1(C.Size_0_0);
      widths = _this._computeColumnWidths$1(constraints);
      tableWidth = C.JSArray_methods.fold$2(widths, 0, new A.RenderTable_computeDryLayout_closure());
      for (t1 = type$.TableCellParentData, rowTop = 0, y = 0; y < _this._rows; ++y) {
        for (rowHeight = 0, x = 0; t2 = _this._columns, x < t2; ++x) {
          child = _this._table$_children[x + y * t2];
          if (child != null) {
            t2 = child.parentData;
            t2.toString;
            t1._as(t2);
            t2 = _this._defaultVerticalAlignment;
            switch (t2.index) {
              case 3:
                return C.Size_0_0;
              case 0:
              case 1:
              case 2:
                rowHeight = Math.max(rowHeight, child.getDryLayout$1(B.BoxConstraints$tightFor(null, widths[x]))._dy);
                break;
              case 4:
                break;
            }
          }
        }
        rowTop += rowHeight;
      }
      return constraints.constrain$1(new B.Size(tableWidth, rowTop));
    },
    performLayout$0() {
      var widths, t1, positions, x, t2, t3, rowTop, y, baselines, t4, rowHeight, haveBaseline, beforeBaselineDistance, afterBaselineDistance, child, t5, t6, childBaseline, rowTop0, t7, _this = this,
        constraints = type$.BoxConstraints._as(B.RenderObject.prototype.get$constraints.call(_this)),
        rows = _this._rows,
        columns = _this._columns;
      if (rows * columns === 0) {
        _this.__RenderTable__tableWidth_A = 0;
        _this._size = constraints.constrain$1(C.Size_0_0);
        return;
      }
      widths = _this._computeColumnWidths$1(constraints);
      t1 = type$.double;
      positions = B.List_List$filled(columns, 0, false, t1);
      switch (_this._table$_textDirection.index) {
        case 0:
          positions[columns - 1] = 0;
          for (x = columns - 2; x >= 0; --x) {
            t2 = x + 1;
            positions[x] = positions[t2] + widths[t2];
          }
          _this._columnLefts = new B.ReversedListIterable(positions, B._arrayInstanceType(positions)._eval$1("ReversedListIterable<1>"));
          _this.__RenderTable__tableWidth_A = C.JSArray_methods.get$first(positions) + C.JSArray_methods.get$first(widths);
          break;
        case 1:
          positions[0] = 0;
          for (x = 1; x < columns; ++x) {
            t2 = x - 1;
            positions[x] = positions[t2] + widths[t2];
          }
          _this._columnLefts = positions;
          _this.__RenderTable__tableWidth_A = C.JSArray_methods.get$last(positions) + C.JSArray_methods.get$last(widths);
          break;
      }
      t2 = _this._rowTops;
      C.JSArray_methods.clear$0(t2);
      _this._baselineDistance = null;
      for (t3 = type$.TableCellParentData, rowTop = 0, y = 0; y < rows; ++y, rowTop = rowTop0) {
        t2.push(rowTop);
        baselines = B.List_List$filled(columns, 0, false, t1);
        for (t4 = y * columns, rowHeight = 0, haveBaseline = false, beforeBaselineDistance = 0, afterBaselineDistance = 0, x = 0; x < columns; ++x) {
          child = _this._table$_children[x + t4];
          if (child != null) {
            t5 = child.parentData;
            t5.toString;
            t3._as(t5);
            t6 = _this._defaultVerticalAlignment;
            switch (t6.index) {
              case 3:
                child.layout$2$parentUsesSize(B.BoxConstraints$tightFor(null, widths[x]), true);
                t6 = _this._table$_textBaseline;
                t6.toString;
                childBaseline = child.getDistanceToBaseline$2$onlyReal(t6, true);
                t6 = child._size;
                if (childBaseline != null) {
                  beforeBaselineDistance = Math.max(beforeBaselineDistance, childBaseline);
                  afterBaselineDistance = Math.max(afterBaselineDistance, t6._dy - childBaseline);
                  baselines[x] = childBaseline;
                  haveBaseline = true;
                } else {
                  rowHeight = Math.max(rowHeight, t6._dy);
                  t5.offset = new B.Offset(positions[x], rowTop);
                }
                break;
              case 0:
              case 1:
              case 2:
                child.layout$2$parentUsesSize(B.BoxConstraints$tightFor(null, widths[x]), true);
                rowHeight = Math.max(rowHeight, child._size._dy);
                break;
              case 4:
                break;
            }
          }
        }
        if (haveBaseline) {
          if (y === 0)
            _this._baselineDistance = beforeBaselineDistance;
          rowHeight = Math.max(rowHeight, beforeBaselineDistance + afterBaselineDistance);
        }
        for (rowTop0 = rowTop + rowHeight, t5 = rowTop + beforeBaselineDistance, x = 0; x < columns; ++x) {
          child = _this._table$_children[x + t4];
          if (child != null) {
            t6 = child.parentData;
            t6.toString;
            t3._as(t6);
            t7 = _this._defaultVerticalAlignment;
            switch (t7.index) {
              case 3:
                t6.offset = new B.Offset(positions[x], t5 - baselines[x]);
                break;
              case 0:
                t6.offset = new B.Offset(positions[x], rowTop);
                break;
              case 1:
                t6.offset = new B.Offset(positions[x], rowTop + (rowHeight - child._size._dy) / 2);
                break;
              case 2:
                t6.offset = new B.Offset(positions[x], rowTop0 - child._size._dy);
                break;
              case 4:
                child.layout$1(B.BoxConstraints$tightFor(rowHeight, widths[x]));
                t6.offset = new B.Offset(positions[x], rowTop);
                break;
            }
          }
        }
      }
      t2.push(rowTop);
      t1 = _this.__RenderTable__tableWidth_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      _this._size = constraints.constrain$1(new B.Size(t1, rowTop));
    },
    hitTestChildren$2$position(result, position) {
      var index, t1, child, t2;
      for (index = this._table$_children.length - 1, t1 = type$.BoxParentData; index >= 0; --index) {
        child = this._table$_children[index];
        if (child != null) {
          t2 = child.parentData;
          t2.toString;
          t1._as(t2);
          if (result.addWithPaintOffset$3$hitTest$offset$position(new A.RenderTable_hitTestChildren_closure(position, t2, child), t2.offset, position))
            return true;
        }
      }
      return false;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, canvas, y, t5, t6, index, child, t7, rows, columns, _this = this;
      if (_this._rows * _this._columns === 0) {
        t1 = _this._border;
        if (t1 != null) {
          t2 = offset._dx;
          t3 = offset._dy;
          t4 = _this.__RenderTable__tableWidth_A;
          t4 === $ && B.throwUnnamedLateFieldNI();
          t1.paint$4$columns$rows(context.get$canvas(context), new B.Rect(t2, t3, t2 + t4, t3 + 0), D.List_empty19, D.List_empty19);
        }
        return;
      }
      if (_this._table$_rowDecorations != null) {
        canvas = context.get$canvas(context);
        for (t1 = offset._dx, t2 = offset._dy, t3 = _this._rowTops, t4 = _this.get$markNeedsPaint(), y = 0; y < _this._rows; ++y) {
          t5 = _this._table$_rowDecorations;
          if (t5.length <= y)
            break;
          t5 = t5[y];
          if (t5 != null) {
            t6 = _this._rowDecorationPainters;
            if (t6[y] == null)
              t6[y] = t5.createBoxPainter$1(t4);
            t5 = _this._rowDecorationPainters[y];
            t5.toString;
            t6 = t3[y];
            t5.paint$3(canvas, new B.Offset(t1, t2 + t6), _this._table$_configuration.copyWith$1$size(new B.Size(_this._size._dx, t3[y + 1] - t6)));
          }
        }
      }
      for (t1 = type$.BoxParentData, t2 = offset._dx, t3 = offset._dy, index = 0; t4 = _this._table$_children, index < t4.length; ++index) {
        child = t4[index];
        if (child != null) {
          t4 = child.parentData;
          t4.toString;
          t4 = t1._as(t4).offset;
          context.paintChild$2(child, new B.Offset(t4._dx + t2, t4._dy + t3));
        }
      }
      if (_this._border != null) {
        t1 = _this.__RenderTable__tableWidth_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t4 = _this._rowTops;
        t5 = C.JSArray_methods.get$last(t4);
        t6 = t4.length;
        t7 = t6 - 1;
        B.RangeError_checkValidRange(1, t7, t6, null, null);
        rows = B.SubListIterable$(t4, 1, t7, B._arrayInstanceType(t4)._precomputed1);
        t4 = _this._columnLefts;
        t4.toString;
        columns = J.skip$1$ax(t4, 1);
        t4 = _this._border;
        t4.toString;
        t4.paint$4$columns$rows(context.get$canvas(context), new B.Rect(t2, t3, t2 + t1, t3 + t5), columns, rows);
      }
    },
    debugDescribeChildren$0() {
      var children, t1, y, t2, x, t3, child, $name, _this = this, _null = null;
      if (_this._table$_children.length === 0)
        return B._setArrayType([B.DiagnosticsNode_DiagnosticsNode$message("table is empty", true, C.DiagnosticsTreeStyle_8)], type$.JSArray_DiagnosticsNode);
      children = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      for (t1 = type$.DiagnosticsProperty_Object, y = 0; y < _this._rows; ++y)
        for (t2 = y, x = 0; t3 = _this._columns, x < t3; ++x) {
          child = _this._table$_children[x + y * t3];
          $name = "child (" + x + ", " + t2 + ")";
          if (child != null)
            children.push(new B.DiagnosticableTreeNode(child, $name, true, true, _null, _null));
          else
            children.push(new B.DiagnosticsProperty(_null, false, true, "is null", _null, _null, false, _null, C.C__NoDefaultValue, C.DiagnosticLevel_3, $name, false, true, _null, C.DiagnosticsTreeStyle_8, t1));
        }
      return children;
    }
  };
  A.TableBorder.prototype = {
    get$isUniform() {
      var topWidth, topStyle, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.right;
      if (!t2.color.$eq(0, topColor) || !_this.bottom.color.$eq(0, topColor) || !_this.left.color.$eq(0, topColor) || !_this.horizontalInside.color.$eq(0, topColor) || !_this.verticalInside.color.$eq(0, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.bottom.width !== topWidth || _this.left.width !== topWidth || _this.horizontalInside.width !== topWidth || _this.verticalInside.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.bottom.style !== topStyle || _this.left.style !== topStyle || _this.horizontalInside.style !== topStyle || _this.verticalInside.style !== topStyle)
        return false;
      return true;
    },
    paint$4$columns$rows(canvas, rect, columns, rows) {
      var paint, path, t2, t3, t4, t5, outer, inner, _this = this,
        t1 = J.getInterceptor$asx(columns);
      if (t1.get$isNotEmpty(columns) || J.get$isNotEmpty$asx(rows)) {
        paint = B.CkPaint$();
        path = B.Path_Path();
        if (t1.get$isNotEmpty(columns)) {
          t2 = _this.verticalInside;
          switch (t2.style.index) {
            case 1:
              paint.set$color(0, t2.color);
              paint.set$strokeWidth(t2.width);
              paint.set$style(0, C.PaintingStyle_1);
              path.reset$0(0);
              for (t1 = t1.get$iterator(columns), t2 = rect.left, t3 = rect.top, t4 = rect.bottom; t1.moveNext$0();) {
                t5 = t2 + t1.get$current(t1);
                path.moveTo$2(0, t5, t3);
                path.lineTo$2(0, t5, t4);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
        t1 = J.getInterceptor$asx(rows);
        if (t1.get$isNotEmpty(rows)) {
          t2 = _this.horizontalInside;
          switch (t2.style.index) {
            case 1:
              paint.set$color(0, t2.color);
              paint.set$strokeWidth(t2.width);
              paint.set$style(0, C.PaintingStyle_1);
              path.reset$0(0);
              for (t1 = t1.get$iterator(rows), t2 = rect.left, t3 = rect.top, t4 = rect.right; t1.moveNext$0();) {
                t5 = t3 + t1.get$current(t1);
                path.moveTo$2(0, t2, t5);
                path.lineTo$2(0, t4, t5);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
      }
      t1 = !_this.get$isUniform() || _this.borderRadius.$eq(0, C.BorderRadius_tLn);
      t2 = _this.top;
      if (t1)
        B.paintBorder(canvas, rect, _this.bottom, _this.left, _this.right, t2);
      else {
        outer = _this.borderRadius.toRRect$1(rect);
        inner = outer.inflate$1(-t2.width);
        paint = B.CkPaint$();
        paint.set$color(0, t2.color);
        canvas.drawDRRect$3(outer, inner, paint);
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(_this))
        return false;
      return other instanceof A.TableBorder && other.top.$eq(0, _this.top) && other.right.$eq(0, _this.right) && other.bottom.$eq(0, _this.bottom) && other.left.$eq(0, _this.left) && other.horizontalInside.$eq(0, _this.horizontalInside) && other.verticalInside.$eq(0, _this.verticalInside) && other.borderRadius.$eq(0, _this.borderRadius);
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.top, _this.right, _this.bottom, _this.left, _this.horizontalInside, _this.verticalInside, _this.borderRadius, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TableBorder(" + _this.top.toString$0(0) + ", " + _this.right.toString$0(0) + ", " + _this.bottom.toString$0(0) + ", " + _this.left.toString$0(0) + ", " + _this.horizontalInside.toString$0(0) + ", " + _this.verticalInside.toString$0(0) + ", " + _this.borderRadius.toString$0(0) + ")";
    }
  };
  A.AutofillConfiguration.prototype = {
    toJson$0() {
      var t1, _this = this;
      if (_this.enabled) {
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
        t1.$indexSet(0, "uniqueIdentifier", _this.uniqueIdentifier);
        t1.$indexSet(0, "hints", _this.autofillHints);
        t1.$indexSet(0, "editingValue", _this.currentEditingValue.toJSON$0());
      } else
        t1 = null;
      return t1;
    }
  };
  A._MutableTextRange.prototype = {};
  A._TextEditingValueAccumulator.prototype = {};
  A.TextInputType.prototype = {
    toJson$0() {
      return B.LinkedHashMap_LinkedHashMap$_literal(["name", "TextInputType." + D.List_GZw[this.index], "signed", this.signed, "decimal", this.decimal], type$.String, type$.dynamic);
    },
    toString$0(_) {
      return "TextInputType(name: " + ("TextInputType." + D.List_GZw[this.index]) + ", signed: " + B.S(this.signed) + ", decimal: " + B.S(this.decimal) + ")";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextInputType && other.index === this.index && other.signed == this.signed && other.decimal == this.decimal;
    },
    get$hashCode(_) {
      return B.Object_hash(this.index, this.signed, this.decimal, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    }
  };
  A.TextCapitalization0.prototype = {
    toString$0(_) {
      return "TextCapitalization." + this._core$_name;
    }
  };
  A.TextInputConfiguration.prototype = {
    toJson$0() {
      var _this = this,
        autofill = _this.autofillConfiguration.toJson$0(),
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "inputType", _this.inputType.toJson$0());
      t1.$indexSet(0, "readOnly", true);
      t1.$indexSet(0, "obscureText", false);
      t1.$indexSet(0, "autocorrect", true);
      t1.$indexSet(0, "smartDashesType", C.JSInt_methods.toString$0(_this.smartDashesType.index));
      t1.$indexSet(0, "smartQuotesType", C.JSInt_methods.toString$0(_this.smartQuotesType.index));
      t1.$indexSet(0, "enableSuggestions", true);
      t1.$indexSet(0, "enableInteractiveSelection", _this.enableInteractiveSelection);
      t1.$indexSet(0, "actionLabel", null);
      t1.$indexSet(0, "inputAction", "TextInputAction." + _this.inputAction._core$_name);
      t1.$indexSet(0, "textCapitalization", "TextCapitalization." + _this.textCapitalization._core$_name);
      t1.$indexSet(0, "keyboardAppearance", "Brightness." + _this.keyboardAppearance._core$_name);
      t1.$indexSet(0, "enableIMEPersonalizedLearning", true);
      if (autofill != null)
        t1.$indexSet(0, "autofill", autofill);
      t1.$indexSet(0, "enableDeltaModel", false);
      return t1;
    }
  };
  A.TextInputConnection.prototype = {
    setComposingRect$1(rect) {
      var validRect, t1, t2, t3;
      if (rect.$eq(0, this._text_input$_cachedRect))
        return;
      this._text_input$_cachedRect = rect;
      validRect = rect.get$isFinite(rect) ? rect : new B.Rect(0, 0, -1, -1);
      t1 = $.$get$TextInput__instance();
      t2 = validRect.left;
      t3 = validRect.top;
      t3 = B.LinkedHashMap_LinkedHashMap$_literal(["width", validRect.right - t2, "height", validRect.bottom - t3, "x", t2, "y", t3], type$.String, type$.dynamic);
      t1 = t1.__TextInput__channel_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1.invokeMethod$1$2("TextInput.setMarkedTextRect", t3, type$.void);
    },
    setCaretRect$1(rect) {
      var validRect, t1, t2, t3;
      if (rect.$eq(0, this._cachedCaretRect))
        return;
      this._cachedCaretRect = rect;
      validRect = rect.get$isFinite(rect) ? rect : new B.Rect(0, 0, -1, -1);
      t1 = $.$get$TextInput__instance();
      t2 = validRect.left;
      t3 = validRect.top;
      t3 = B.LinkedHashMap_LinkedHashMap$_literal(["width", validRect.right - t2, "height", validRect.bottom - t3, "x", t2, "y", t3], type$.String, type$.dynamic);
      t1 = t1.__TextInput__channel_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1.invokeMethod$1$2("TextInput.setCaretRect", t3, type$.void);
    },
    setStyle$5$fontFamily$fontSize$fontWeight$textAlign$textDirection(fontFamily, fontSize, fontWeight, textAlign, textDirection) {
      var t1 = $.$get$TextInput__instance(),
        t2 = fontWeight == null ? null : fontWeight.index;
      t2 = B.LinkedHashMap_LinkedHashMap$_literal(["fontFamily", fontFamily, "fontSize", fontSize, "fontWeightIndex", t2, "textAlignIndex", textAlign.index, "textDirectionIndex", textDirection.index], type$.String, type$.dynamic);
      t1 = t1.__TextInput__channel_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1.invokeMethod$1$2("TextInput.setStyle", t2, type$.void);
    }
  };
  A.CompositedTransformFollower.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderFollowerLayer(this.link, false, this.offset, D.Alignment_m1_m1, D.Alignment_m1_m1, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      renderObject.set$link(this.link);
      renderObject.set$showWhenUnlinked(false);
      renderObject.set$offset(0, this.offset);
      renderObject.set$leaderAnchor(D.Alignment_m1_m1);
      renderObject.set$followerAnchor(D.Alignment_m1_m1);
    }
  };
  A.RawImage.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = _this.image;
      t1 = t1 == null ? null : t1.clone$0(0);
      t1 = new A.RenderImage(t1, _this.debugImageLabel, _this.width, _this.height, _this.scale, _this.color, _this.opacity, _this.filterQuality, _this.colorBlendMode, _this.fit, _this.alignment, _this.repeat, _this.centerSlice, _this.invertColors, false, null, false, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._updateColorFilter$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this,
        t1 = _this.image;
      renderObject.set$image(0, t1 == null ? null : t1.clone$0(0));
      renderObject.debugImageLabel = _this.debugImageLabel;
      renderObject.set$width(0, _this.width);
      renderObject.set$height(0, _this.height);
      renderObject.set$scale(0, _this.scale);
      renderObject.set$color(0, _this.color);
      renderObject.set$opacity(0, _this.opacity);
      renderObject.set$colorBlendMode(_this.colorBlendMode);
      renderObject.set$fit(_this.fit);
      renderObject.set$alignment(_this.alignment);
      renderObject.set$repeat(0, _this.repeat);
      renderObject.set$centerSlice(_this.centerSlice);
      renderObject.set$matchTextDirection(false);
      renderObject.set$textDirection(null);
      renderObject.set$invertColors(_this.invertColors);
      renderObject.set$isAntiAlias(false);
      renderObject.set$filterQuality(_this.filterQuality);
    },
    didUnmountRenderObject$1(renderObject) {
      renderObject.set$image(0, null);
    }
  };
  A.DisposableBuildContext.prototype = {
    get$context(_) {
      var t1 = this._disposable_build_context$_state;
      if (t1 == null)
        return null;
      t1 = t1._framework$_element;
      t1.toString;
      return t1;
    }
  };
  A._KeyFrame.prototype = {};
  A._DiscreteKeyFrameSimulation.prototype = {
    dx$1(_, time) {
      return 0;
    },
    isDone$1(time) {
      return time >= this.maxDuration;
    },
    x$1(_, time) {
      var endIndex, t2, searchIndex0,
        t1 = this._keyFrames,
        searchIndex = this._lastKeyFrameIndex;
      if (t1[searchIndex].time > time) {
        endIndex = searchIndex;
        searchIndex = 0;
      } else
        endIndex = 11;
      for (t2 = endIndex - 1; searchIndex < t2; searchIndex = searchIndex0) {
        searchIndex0 = searchIndex + 1;
        if (time < t1[searchIndex0].time)
          break;
      }
      this._lastKeyFrameIndex = searchIndex;
      return t1[searchIndex].value;
    }
  };
  A.Image.prototype = {
    createState$0() {
      return new A._ImageState(C._StateLifecycle_0);
    }
  };
  A._ImageState.prototype = {
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(_this);
      _this.___ImageState__scrollAwareContext_A = new A.DisposableBuildContext(_this, type$.DisposableBuildContext_State_Image);
    },
    dispose$0() {
      var t1, _this = this;
      C.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, _this);
      _this._stopListeningToStream$0();
      t1 = _this._completerHandle;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.___ImageState__scrollAwareContext_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1._disposable_build_context$_state = null;
      _this._replaceImage$1$info(null);
      _this.super$State$dispose();
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this._updateInvertColors$0();
      _this._resolveImage$0();
      t1 = _this._framework$_element;
      t1.toString;
      if (B.TickerMode_of(t1))
        _this._listenToStream$0();
      else
        _this._stopListeningToStream$1$keepStreamAlive(true);
      _this.super$State$didChangeDependencies();
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._isListeningToStream)
        _this._widget.toString;
      if (!_this._widget.image.$eq(0, oldWidget.image))
        _this._resolveImage$0();
    },
    reassemble$0() {
      this._resolveImage$0();
      this.super$State$reassemble();
    },
    _updateInvertColors$0() {
      var t1 = this._framework$_element;
      t1.toString;
      t1 = B.MediaQuery_maybeOf(t1);
      t1 = t1 == null ? null : t1.invertColors;
      if (t1 == null) {
        t1 = $.SemanticsBinding__instance.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t1 = (t1.__engine$_index & 2) !== 0;
      }
      this.___ImageState__invertColors_A = t1;
    },
    _resolveImage$0() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.___ImageState__scrollAwareContext_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t2 = _this._widget;
      t3 = t2.image;
      t4 = _this._framework$_element;
      t4.toString;
      t5 = t2.width;
      if (t5 != null && t2.height != null) {
        t5.toString;
        t2 = t2.height;
        t2.toString;
        t2 = new B.Size(t5, t2);
      } else
        t2 = null;
      _this._updateSourceStream$1(new A.ScrollAwareImageProvider(t1, t3, type$.ScrollAwareImageProvider_Object).resolve$1(B.createLocalImageConfiguration(t4, t2)));
    },
    _getListener$1$recreateListener(recreateListener) {
      var _this = this,
        t1 = _this._imageStreamListener;
      if (t1 == null || recreateListener) {
        _this._lastStack = _this._lastException = null;
        _this._widget.toString;
        t1 = _this._imageStreamListener = new B.ImageStreamListener(_this.get$_handleImageFrame(), null, null);
      }
      t1.toString;
      return t1;
    },
    _getListener$0() {
      return this._getListener$1$recreateListener(false);
    },
    _handleImageFrame$2(imageInfo, synchronousCall) {
      this.setState$1(new A._ImageState__handleImageFrame_closure(this, imageInfo, synchronousCall));
    },
    _replaceImage$1$info(info) {
      var t1 = this._imageInfo;
      if (t1 != null)
        t1.image.dispose$0();
      this._imageInfo = info;
    },
    _updateSourceStream$1(newStream) {
      var t2, t3, _this = this,
        t1 = _this._imageStream;
      if (t1 == null)
        t2 = null;
      else {
        t2 = t1._image_stream$_completer;
        if (t2 == null)
          t2 = t1;
      }
      t3 = newStream._image_stream$_completer;
      if (t2 === (t3 == null ? newStream : t3))
        return;
      if (_this._isListeningToStream) {
        t1.toString;
        t1.removeListener$1(0, _this._getListener$0());
      }
      _this._widget.toString;
      _this.setState$1(new A._ImageState__updateSourceStream_closure(_this));
      _this.setState$1(new A._ImageState__updateSourceStream_closure0(_this));
      _this._imageStream = newStream;
      if (_this._isListeningToStream)
        newStream.addListener$1(0, _this._getListener$0());
    },
    _listenToStream$0() {
      var t1, _this = this;
      if (_this._isListeningToStream)
        return;
      t1 = _this._imageStream;
      t1.toString;
      t1.addListener$1(0, _this._getListener$0());
      t1 = _this._completerHandle;
      if (t1 != null)
        t1.dispose$0();
      _this._completerHandle = null;
      _this._isListeningToStream = true;
    },
    _stopListeningToStream$1$keepStreamAlive(keepStreamAlive) {
      var t1, t2, _this = this;
      if (!_this._isListeningToStream)
        return;
      if (keepStreamAlive)
        if (_this._completerHandle == null) {
          t1 = _this._imageStream;
          t1 = (t1 == null ? null : t1._image_stream$_completer) != null;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = _this._imageStream._image_stream$_completer;
        if (t1._image_stream$_disposed)
          B.throwExpression(B.StateError$("Stream has been disposed.\nAn ImageStream is considered disposed once at least one listener has been added and subsequently all listeners have been removed and no handles are outstanding from the keepAlive method.\nTo resolve this error, maintain at least one listener on the stream, or create an ImageStreamCompleterHandle from the keepAlive method, or create a new stream for the image."));
        t2 = new B.ImageStreamCompleterHandle(t1);
        t2.ImageStreamCompleterHandle$_$1(t1);
        _this._completerHandle = t2;
      }
      t1 = _this._imageStream;
      t1.toString;
      t1.removeListener$1(0, _this._getListener$0());
      _this._isListeningToStream = false;
    },
    _stopListeningToStream$0() {
      return this._stopListeningToStream$1$keepStreamAlive(false);
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, result, _this = this, _null = null;
      if (_this._lastException != null)
        _this._widget.toString;
      t1 = _this._imageInfo;
      t2 = t1 == null;
      t3 = t2 ? _null : t1.image;
      t4 = t2 ? _null : t1.debugLabel;
      t5 = _this._widget;
      t6 = t5.width;
      t5 = t5.height;
      t1 = t2 ? _null : t1.scale;
      if (t1 == null)
        t1 = 1;
      t2 = _this.___ImageState__invertColors_A;
      t2 === $ && B.throwUnnamedLateFieldNI();
      result = new A.RawImage(t3, t4, t6, t5, t1, _null, _null, C.FilterQuality_1, _null, _null, C.Alignment_0_0, C.ImageRepeat_3, _null, false, t2, false, _null);
      result = B.Semantics$(_null, result, false, _null, false, false, _null, _null, true, "", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return result;
    }
  };
  A.__ImageState_State_WidgetsBindingObserver.prototype = {};
  A.ScrollAwareImageProvider.prototype = {
    resolveStreamForKey$4(configuration, stream, key, handleError) {
      var t1, _this = this;
      if (stream._image_stream$_completer == null) {
        t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t1 = t1._pendingImages.$index(0, key) != null || t1._image_cache$_cache.$index(0, key) != null;
      } else
        t1 = true;
      if (t1) {
        _this.imageProvider.resolveStreamForKey$4(configuration, stream, key, handleError);
        return;
      }
      t1 = _this.context;
      if (t1.get$context(t1) == null)
        return;
      t1 = t1.get$context(t1);
      t1.toString;
      if (A.Scrollable_recommendDeferredLoadingForContext(t1)) {
        $.SchedulerBinding__instance.scheduleFrameCallback$1(new A.ScrollAwareImageProvider_resolveStreamForKey_closure(_this, configuration, stream, key, handleError));
        return;
      }
      _this.imageProvider.resolveStreamForKey$4(configuration, stream, key, handleError);
    },
    load$2(_, key, decode) {
      return this.imageProvider.load$2(0, key, decode);
    },
    loadBuffer$2(key, decode) {
      return this.imageProvider.loadBuffer$2(key, decode);
    },
    obtainKey$1(configuration) {
      return this.imageProvider.obtainKey$1(configuration);
    }
  };
  A.TableRow.prototype = {
    toString$0(_) {
      var t1 = "" + "TableRow(",
        t2 = this.decoration;
      if (t2 != null)
        t1 += t2.toString$0(0) + ", ";
      t2 = this.children;
      t1 = t2.length === 0 ? t1 + "no children" : t1 + B.S(t2);
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._TableElementRow.prototype = {};
  A.Table.prototype = {
    createElement$0(_) {
      return new A._TableElement(D.List_empty6, B.HashSet_HashSet(type$.Element), this, C._ElementLifecycle_0);
    },
    createRenderObject$1(context) {
      var t3, t4, t5, t6, _this = this,
        t1 = _this.children,
        t2 = t1.length;
      t1 = t2 !== 0 ? t1[0].children.length : 0;
      t3 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t3.toString;
      t3 = t3.textDirection;
      t4 = B.createLocalImageConfiguration(context, null);
      t5 = B._setArrayType([], type$.JSArray_double);
      t6 = B.HashMap_HashMap(type$.int, type$.TableColumnWidth);
      t1 = new A.RenderTable(D.List_empty5, t1, t2, t6, _this.defaultColumnWidth, t3, _this.border, t4, _this.defaultVerticalAlignment, null, t5, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t2 = B._setArrayType([], type$.JSArray_nullable_RenderBox);
      C.JSArray_methods.set$length(t2, t1._columns * t1._rows);
      t1._table$_children = t2;
      t1.set$rowDecorations(_this._rowDecorations);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this, _null = null;
      renderObject.set$columnWidths(_null);
      renderObject.set$defaultColumnWidth(_this.defaultColumnWidth);
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      renderObject.set$textDirection(t1.textDirection);
      renderObject.set$border(0, _this.border);
      renderObject.set$rowDecorations(_this._rowDecorations);
      renderObject.set$configuration(B.createLocalImageConfiguration(context, _null));
      renderObject.set$defaultVerticalAlignment(_this.defaultVerticalAlignment);
      renderObject.set$textBaseline(0, _null);
    }
  };
  A._TableElement.prototype = {
    get$renderObject() {
      return type$.RenderTable._as(B.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    mount$2($parent, newSlot) {
      var t2, t3, _this = this, t1 = {};
      _this._doingMountOrUpdate = true;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      t1.rowIndex = -1;
      t2 = _this._widget;
      t2.toString;
      t2 = type$.Table._as(t2).children;
      t3 = B._arrayInstanceType(t2)._eval$1("MappedListIterable<1,_TableElementRow>");
      _this._table0$_children = B.List_List$of(new B.MappedListIterable(t2, new A._TableElement_mount_closure(t1, _this), t3), false, t3._eval$1("ListIterable.E"));
      _this._updateRenderObjectChildren$0();
      _this._doingMountOrUpdate = false;
    },
    insertRenderObjectChild$2(child, slot) {
      var t1 = type$.RenderTable;
      t1._as(B.RenderObjectElement.prototype.get$renderObject.call(this));
      if (!(child.parentData instanceof A.TableCellParentData))
        child.parentData = new A.TableCellParentData(C.Offset_0_0);
      if (!this._doingMountOrUpdate)
        t1._as(B.RenderObjectElement.prototype.get$renderObject.call(this)).setChild$3(slot.column, slot.row, child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      type$.RenderTable._as(B.RenderObjectElement.prototype.get$renderObject.call(this)).setChild$3(slot.column, slot.row, null);
    },
    update$1(_, newWidget) {
      var t1, oldKeyedRows, t2, t3, _i, oldUnkeyedRows, newChildren, t4, t5, rowIndex, row, t6, oldChildren, _length, slots, columnIndex, _this = this;
      _this._doingMountOrUpdate = true;
      t1 = type$.List_Element;
      oldKeyedRows = B.LinkedHashMap_LinkedHashMap$_empty(type$.LocalKey, t1);
      for (t2 = _this._table0$_children, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t2[_i].toString;
      t3 = C.JSArray_methods.get$iterator(t2);
      oldUnkeyedRows = new B.WhereIterator(t3, new A._TableElement_update_closure(), B._arrayInstanceType(t2)._eval$1("WhereIterator<1>"));
      newChildren = B._setArrayType([], type$.JSArray__TableElementRow);
      for (t2 = newWidget.children, t4 = _this._table0$_forgottenChildren, t5 = type$.JSArray__TableSlot, rowIndex = 0; rowIndex < t2.length; ++rowIndex) {
        row = t2[rowIndex];
        t6 = oldUnkeyedRows.moveNext$0();
        oldChildren = t6 ? t3.get$current(t3).children : C.List_empty7;
        t6 = row.children;
        _length = t6.length;
        slots = B._setArrayType(new Array(_length), t5);
        for (columnIndex = 0; columnIndex < _length; ++columnIndex)
          slots[columnIndex] = new A._TableSlot(columnIndex, rowIndex);
        newChildren.push(new A._TableElementRow(null, _this.updateChildren$4$forgottenChildren$slots(oldChildren, t6, t4, slots)));
      }
      for (; oldUnkeyedRows.moveNext$0();)
        _this.updateChildren$3$forgottenChildren(t3.get$current(t3).children, C.List_empty8, t4);
      for (t2 = oldKeyedRows.get$values(oldKeyedRows), t3 = t2.get$iterator(t2), t2 = new B.WhereIterator(t3, new A._TableElement_update_closure0(B.LinkedHashSet_LinkedHashSet$_empty(t1)), B._instanceType(t2)._eval$1("WhereIterator<Iterable.E>")); t2.moveNext$0();)
        _this.updateChildren$3$forgottenChildren(t3.get$current(t3), C.List_empty8, t4);
      _this._table0$_children = newChildren;
      _this._updateRenderObjectChildren$0();
      t4.clear$0(0);
      _this.super$RenderObjectElement$update(0, newWidget);
      _this._doingMountOrUpdate = false;
    },
    _updateRenderObjectChildren$0() {
      var t3, t4,
        t1 = type$.RenderTable._as(B.RenderObjectElement.prototype.get$renderObject.call(this)),
        t2 = this._table0$_children;
      t2 = t2.length !== 0 ? J.get$length$asx(t2[0].children) : 0;
      t3 = this._table0$_children;
      t4 = B._arrayInstanceType(t3)._eval$1("ExpandIterable<1,RenderBox>");
      t1.setFlatChildren$2(t2, B.List_List$of(new B.ExpandIterable(t3, new A._TableElement__updateRenderObjectChildren_closure(), t4), true, t4._eval$1("Iterable.E")));
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, t4;
      for (t1 = this._table0$_children, t2 = B._arrayInstanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._eval$1("Element0")), t1 = new B.ExpandIterator(C.JSArray_methods.get$iterator(t1), new A._TableElement_visitChildren_closure(), C.C_EmptyIterator, t2._eval$1("ExpandIterator<1,2>")), t3 = this._table0$_forgottenChildren, t2 = t2._rest[1]; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (!t3.contains$1(0, t4))
          visitor.call$1(t4);
      }
    },
    forgetChild$1(child) {
      this._table0$_forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
      return true;
    }
  };
  A.TableCell.prototype = {
    applyParentData$1(renderObject) {
      var t1 = renderObject.parentData;
      t1.toString;
      type$.TableCellParentData._as(t1);
    }
  };
  A._TableSlot.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(this))
        return false;
      return other instanceof A._TableSlot && this.column === other.column && this.row === other.row;
    },
    get$hashCode(_) {
      return B.Object_hash(this.column, this.row, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    }
  };
  A.__TableSlot_Object_Diagnosticable.prototype = {};
  A.TextSelectionOverlay.prototype = {
    _updateTextSelectionOverlayVisibilities$0() {
      var _this = this,
        t1 = _this._handlesVisible && _this.renderObject._selectionStartInViewport._change_notifier$_value;
      _this._effectiveStartHandleVisibility.set$value(0, t1);
      t1 = _this._handlesVisible && _this.renderObject._selectionEndInViewport._change_notifier$_value;
      _this._effectiveEndHandleVisibility.set$value(0, t1);
      t1 = _this.renderObject;
      t1 = t1._selectionStartInViewport._change_notifier$_value || t1._selectionEndInViewport._change_notifier$_value;
      _this._effectiveToolbarVisibility.set$value(0, t1);
    },
    set$handlesVisible(visible) {
      if (this._handlesVisible === visible)
        return;
      this._handlesVisible = visible;
      this._updateTextSelectionOverlayVisibilities$0();
    },
    update$1(_, newValue) {
      if (this._text_selection$_value.$eq(0, newValue))
        return;
      this._text_selection$_value = newValue;
      this._updateSelectionOverlay$0();
    },
    _updateSelectionOverlay$0() {
      var t2, t3, t4, prevText, currText, t5, selectedGraphemes, t6, startHandleRect, endHandleRect, _this = this, _null = null,
        t1 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t2 = _this.renderObject;
      t3 = t2._editable$_textPainter;
      t4 = t3._text_painter$_textDirection;
      t4.toString;
      t1.set$startHandleType(_this._chooseType$3(t4, C.TextSelectionHandleType_0, C.TextSelectionHandleType_1));
      prevText = t3._text_painter$_text.toPlainText$0();
      t4 = _this.selectionDelegate;
      currText = t4._widget.controller._change_notifier$_value.text;
      if (prevText === currText)
        if (_this._text_selection$_value.selection.get$isValid()) {
          t5 = _this._text_selection$_value.selection;
          t5 = t5.start !== t5.end;
        } else
          t5 = false;
      else
        t5 = false;
      if (t5) {
        t5 = _this._text_selection$_value.selection;
        selectedGraphemes = C.JSString_methods.substring$2(currText, t5.start, t5.end);
        t5 = selectedGraphemes.length === 0 ? C.StringCharacters_ehH : new B.StringCharacters(selectedGraphemes);
        t5 = t5.get$first(t5);
        t6 = _this._text_selection$_value.selection.start;
        startHandleRect = t2.getRectForComposingRange$1(new B.TextRange(t6, t6 + t5.length));
      } else
        startHandleRect = _null;
      t5 = startHandleRect == null ? _null : startHandleRect.bottom - startHandleRect.top;
      t1.set$lineHeightAtStart(t5 == null ? t3.get$preferredLineHeight() : t5);
      t5 = t3._text_painter$_textDirection;
      t5.toString;
      t1.set$endHandleType(_this._chooseType$3(t5, C.TextSelectionHandleType_1, C.TextSelectionHandleType_0));
      prevText = t3._text_painter$_text.toPlainText$0();
      currText = t4._widget.controller._change_notifier$_value.text;
      if (prevText === currText)
        if (_this._text_selection$_value.selection.get$isValid()) {
          t4 = _this._text_selection$_value.selection;
          t4 = t4.start !== t4.end;
        } else
          t4 = false;
      else
        t4 = false;
      if (t4) {
        t4 = _this._text_selection$_value.selection;
        selectedGraphemes = C.JSString_methods.substring$2(currText, t4.start, t4.end);
        t4 = selectedGraphemes.length === 0 ? C.StringCharacters_ehH : new B.StringCharacters(selectedGraphemes);
        t4 = t4.get$last(t4);
        t5 = _this._text_selection$_value.selection.end;
        endHandleRect = t2.getRectForComposingRange$1(new B.TextRange(t5 - t4.length, t5));
      } else
        endHandleRect = _null;
      t4 = endHandleRect == null ? _null : endHandleRect.bottom - endHandleRect.top;
      t1.set$lineHeightAtEnd(t4 == null ? t3.get$preferredLineHeight() : t4);
      t3 = t2.getEndpointsForSelection$1(_this._text_selection$_value.selection);
      if (!B.listEquals(t1._selectionEndpoints, t3))
        t1._text_selection$_markNeedsBuild$0();
      t1._selectionEndpoints = t3;
      t1.set$toolbarLocation(t2._lastSecondaryTapDownPosition);
    },
    dispose$0() {
      var t2, _this = this,
        t1 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1.hide$0();
      t1 = _this.renderObject;
      t2 = _this.get$_updateTextSelectionOverlayVisibilities();
      t1._selectionStartInViewport.removeListener$1(0, t2);
      t1._selectionEndInViewport.removeListener$1(0, t2);
      t2 = _this._effectiveToolbarVisibility;
      t1 = t2.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
      t2.ChangeNotifier__count = 0;
      t2 = _this._effectiveStartHandleVisibility;
      t2.ChangeNotifier__listeners = t1;
      t2.ChangeNotifier__count = 0;
      t2 = _this._effectiveEndHandleVisibility;
      t2.ChangeNotifier__listeners = t1;
      t2.ChangeNotifier__count = 0;
    },
    _handleSelectionEndHandleDragStart$1(details) {
      var t1 = this.selectionControls;
      t1.toString;
      this.__TextSelectionOverlay__dragEndPosition_A = details.globalPosition.$add(0, new B.Offset(0, -t1.getHandleSize$1(this.renderObject._editable$_textPainter.get$preferredLineHeight())._dy));
    },
    _handleSelectionEndHandleDragUpdate$1(details) {
      var position, t2, newSelection, _this = this,
        t1 = _this.__TextSelectionOverlay__dragEndPosition_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1 = t1.$add(0, details.delta);
      _this.__TextSelectionOverlay__dragEndPosition_A = t1;
      position = _this.renderObject.getPositionForPoint$1(t1);
      t1 = _this._text_selection$_value.selection;
      t2 = t1.start;
      if (t2 === t1.end) {
        _this._handleSelectionHandleChanged$2$isEnd(A.TextSelection$fromPosition(position), true);
        return;
      }
      switch (B.defaultTargetPlatform().index) {
        case 2:
        case 4:
          t1 = position.offset;
          newSelection = B.TextSelection$(C.TextAffinity_1, t2, t1, false);
          if (t1 <= t2)
            return;
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          newSelection = B.TextSelection$(C.TextAffinity_1, t1.baseOffset, position.offset, false);
          if (newSelection.baseOffset >= newSelection.extentOffset)
            return;
          break;
        default:
          newSelection = null;
      }
      _this._handleSelectionHandleChanged$2$isEnd(newSelection, true);
    },
    _handleSelectionStartHandleDragStart$1(details) {
      var t1 = this.selectionControls;
      t1.toString;
      this.__TextSelectionOverlay__dragStartPosition_A = details.globalPosition.$add(0, new B.Offset(0, -t1.getHandleSize$1(this.renderObject._editable$_textPainter.get$preferredLineHeight())._dy));
    },
    _handleSelectionStartHandleDragUpdate$1(details) {
      var position, t2, newSelection, _this = this,
        t1 = _this.__TextSelectionOverlay__dragStartPosition_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1 = t1.$add(0, details.delta);
      _this.__TextSelectionOverlay__dragStartPosition_A = t1;
      position = _this.renderObject.getPositionForPoint$1(t1);
      t1 = _this._text_selection$_value.selection;
      t2 = t1.end;
      if (t1.start === t2) {
        _this._handleSelectionHandleChanged$2$isEnd(A.TextSelection$fromPosition(position), false);
        return;
      }
      switch (B.defaultTargetPlatform().index) {
        case 2:
        case 4:
          newSelection = B.TextSelection$(C.TextAffinity_1, t2, position.offset, false);
          if (newSelection.extentOffset >= t2)
            return;
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          newSelection = B.TextSelection$(C.TextAffinity_1, position.offset, t1.extentOffset, false);
          if (newSelection.baseOffset >= newSelection.extentOffset)
            return;
          break;
        default:
          newSelection = null;
      }
      _this._handleSelectionHandleChanged$2$isEnd(newSelection, false);
    },
    _handleSelectionHandleChanged$2$isEnd(newSelection, isEnd) {
      var textPosition = isEnd ? newSelection.get$extent() : newSelection.get$base(),
        t1 = this.selectionDelegate;
      t1.userUpdateTextEditingValue$2(this._text_selection$_value.copyWith$1$selection(newSelection), D.SelectionChangedCause_6);
      t1.bringIntoView$1(textPosition);
    },
    _chooseType$3(textDirection, ltrType, rtlType) {
      var t1 = this._text_selection$_value.selection;
      if (t1.start === t1.end)
        return D.TextSelectionHandleType_2;
      switch (textDirection.index) {
        case 1:
          return ltrType;
        case 0:
          return rtlType;
      }
    }
  };
  A.SelectionOverlay.prototype = {
    set$startHandleType(value) {
      if (this._startHandleType === value)
        return;
      this._startHandleType = value;
      this._text_selection$_markNeedsBuild$0();
    },
    set$lineHeightAtStart(value) {
      if (this._lineHeightAtStart === value)
        return;
      this._lineHeightAtStart = value;
      this._text_selection$_markNeedsBuild$0();
    },
    set$endHandleType(value) {
      if (this._endHandleType === value)
        return;
      this._endHandleType = value;
      this._text_selection$_markNeedsBuild$0();
    },
    set$lineHeightAtEnd(value) {
      if (this._lineHeightAtEnd === value)
        return;
      this._lineHeightAtEnd = value;
      this._text_selection$_markNeedsBuild$0();
    },
    set$toolbarLocation(value) {
      if (J.$eq$(this._toolbarLocation, value))
        return;
      this._toolbarLocation = value;
      this._text_selection$_markNeedsBuild$0();
    },
    showHandles$0() {
      var result, t1, _this = this;
      if (_this._text_selection$_handles != null)
        return;
      _this._text_selection$_handles = B._setArrayType([B.OverlayEntry$(_this.get$_buildStartHandle(), false), B.OverlayEntry$(_this.get$_buildEndHandle(), false)], type$.JSArray_OverlayEntry);
      result = _this.context.findRootAncestorStateOfType$1$0(type$.OverlayState);
      result.toString;
      t1 = _this._text_selection$_handles;
      t1.toString;
      result.insertAll$1(0, t1);
    },
    _text_selection$_markNeedsBuild$0() {
      var t3, _this = this,
        t1 = _this._text_selection$_handles,
        t2 = t1 == null;
      if (t2 && _this._toolbar == null)
        return;
      t3 = $.SchedulerBinding__instance;
      if (t3.SchedulerBinding__schedulerPhase === C.SchedulerPhase_3) {
        if (_this._buildScheduled)
          return;
        _this._buildScheduled = true;
        t3.SchedulerBinding__postFrameCallbacks.push(new A.SelectionOverlay__markNeedsBuild_closure(_this));
      } else {
        if (!t2) {
          t1[0].markNeedsBuild$0();
          _this._text_selection$_handles[1].markNeedsBuild$0();
        }
        t1 = _this._toolbar;
        if (t1 != null)
          t1.markNeedsBuild$0();
      }
    },
    hide$0() {
      var _this = this,
        t1 = _this._text_selection$_handles;
      if (t1 != null) {
        t1[0].remove$0(0);
        _this._text_selection$_handles[1].remove$0(0);
        _this._text_selection$_handles = null;
      }
      if (_this._toolbar != null)
        _this.hideToolbar$0();
    },
    hideToolbar$0() {
      var t1 = this._toolbar;
      if (t1 == null)
        return;
      t1.remove$0(0);
      this._toolbar = null;
    },
    _buildStartHandle$1(context) {
      var handle, t1, _this = this, _null = null,
        selectionControls = _this.selectionControls;
      if (selectionControls == null)
        handle = B.Container$(_null, _null, C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      else {
        t1 = _this._startHandleType;
        handle = A._SelectionHandleOverlay$(_this.dragStartBehavior, _this.startHandleLayerLink, _null, _this.onStartHandleDragStart, _this.onStartHandleDragUpdate, _this.onSelectionHandleTapped, _this._lineHeightAtStart, selectionControls, t1, _this.startHandlesVisible);
      }
      return new B.ExcludeSemantics(true, handle, _null);
    },
    _buildEndHandle$1(context) {
      var handle, t1, _this = this, _null = null,
        selectionControls = _this.selectionControls;
      if (selectionControls == null || _this._startHandleType === D.TextSelectionHandleType_2)
        handle = B.Container$(_null, _null, C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      else {
        t1 = _this._endHandleType;
        handle = A._SelectionHandleOverlay$(_this.dragStartBehavior, _this.endHandleLayerLink, _null, _this.onEndHandleDragStart, _this.onEndHandleDragUpdate, _this.onSelectionHandleTapped, _this._lineHeightAtEnd, selectionControls, t1, _this.endHandlesVisible);
      }
      return new B.ExcludeSemantics(true, handle, _null);
    }
  };
  A._SelectionHandleOverlay.prototype = {
    createState$0() {
      return new A._SelectionHandleOverlayState(null, null, C._StateLifecycle_0);
    }
  };
  A._SelectionHandleOverlayState.prototype = {
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this.___SelectionHandleOverlayState__controller_A = B.AnimationController$(null, C.Duration_150000, null, null, _this);
      _this._handleVisibilityChanged$0();
      _this._widget.visibility.addListener$1(0, _this.get$_handleVisibilityChanged());
    },
    _handleVisibilityChanged$0() {
      var t2,
        t1 = this._widget.visibility._change_notifier$_value;
      if (t1 == null)
        t1 = true;
      t2 = this.___SelectionHandleOverlayState__controller_A;
      if (t1) {
        t2 === $ && B.throwUnnamedLateFieldNI();
        t2.forward$0(0);
      } else {
        t2 === $ && B.throwUnnamedLateFieldNI();
        t2.reverse$0(0);
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this.get$_handleVisibilityChanged();
      oldWidget.visibility.removeListener$1(0, t1);
      _this._handleVisibilityChanged$0();
      _this._widget.visibility.addListener$1(0, t1);
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.visibility.removeListener$1(0, _this.get$_handleVisibilityChanged());
      t1 = _this.___SelectionHandleOverlayState__controller_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      t1.dispose$0();
      _this.super$__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var handleSize, t2, t3, t4, handleRect, interactiveRect, t5, t6, t7, t8, t9, t10, _this = this, _null = null,
        t1 = _this._widget,
        handleAnchor = t1.selectionControls.getHandleAnchor$2(t1.type, t1.preferredLineHeight);
      t1 = _this._widget;
      handleSize = t1.selectionControls.getHandleSize$1(t1.preferredLineHeight);
      t1 = -handleAnchor._dx;
      t2 = -handleAnchor._dy;
      t3 = t1 + handleSize._dx;
      t4 = t2 + handleSize._dy;
      handleRect = new B.Rect(t1, t2, t3, t4);
      interactiveRect = handleRect.expandToInclude$1(B.Rect$fromCircle(handleRect.get$center(), 24));
      t5 = interactiveRect.left;
      t6 = interactiveRect.right - t5;
      t1 = Math.max((t6 - (t3 - t1)) / 2, 0);
      t3 = interactiveRect.top;
      t7 = interactiveRect.bottom - t3;
      t2 = Math.max((t7 - (t4 - t2)) / 2, 0);
      t4 = _this._widget.handleLayerLink;
      t8 = _this.___SelectionHandleOverlayState__controller_A;
      t8 === $ && B.throwUnnamedLateFieldNI();
      t9 = B.LinkedHashMap_LinkedHashMap$_literal([C.Type_PanGestureRecognizer_bbH, new B.GestureRecognizerFactoryWithHandlers(new A._SelectionHandleOverlayState_build_closure(_this), new A._SelectionHandleOverlayState_build_closure0(_this), type$.GestureRecognizerFactoryWithHandlers_PanGestureRecognizer)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      t10 = _this._widget;
      return A.CompositedTransformFollower$(B.FadeTransition$(B.Container$(D.Alignment_m1_m1, new B.RawGestureDetector(new B.Padding(new B.EdgeInsets(t1, t2, t1, t2), t10.selectionControls.buildHandle$4(context, t10.type, t10.preferredLineHeight, t10.onSelectionHandleTapped), _null), t9, C.HitTestBehavior_2, false, _null, _null), C.Clip_0, _null, _null, _null, _null, t7, _null, _null, _null, _null, _null, t6), t8), t4, new B.Offset(t5, t3), false);
    }
  };
  A.__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.SingleTickerProviderStateMixin__tickerModeNotifier = null;
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A._BlockElement.prototype = {};
  A._TableElement0.prototype = {};
  A._InlineElement.prototype = {};
  A.MarkdownBuilder.prototype = {
    build$1(nodes) {
      var t1, t2, _i, _this = this;
      C.JSArray_methods.clear$0(_this._listIndents);
      t1 = _this._blocks;
      C.JSArray_methods.clear$0(t1);
      C.JSArray_methods.clear$0(_this._tables);
      C.JSArray_methods.clear$0(_this._inlines);
      C.JSArray_methods.clear$0(_this._linkHandlers);
      _this._isInBlockquote = false;
      t1.push(new A._BlockElement(null, B._setArrayType([], type$.JSArray_Widget)));
      for (t2 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t2 || (0, B.throwConcurrentModificationError)(nodes), ++_i)
        J.accept$1$z(nodes[_i], _this);
      return C.JSArray_methods.get$single(t1).children;
    },
    visitElementBefore$1(element) {
      var t1, start, $length, decoration, bElement, text, destination, title, t2, _this = this, _null = null,
        tag = element.tag;
      if (_this._currentBlockTag == null)
        _this._currentBlockTag = tag;
      _this._lastVisitedTag = tag;
      t1 = _this.builders;
      if (t1.containsKey$1(0, tag))
        t1.$index(0, tag).visitElementBefore$1(element);
      t1 = _this.paddingBuilders;
      if (t1.containsKey$1(0, tag))
        t1.$index(0, tag).visitElementBefore$1(element);
      if (C.JSArray_methods.contains$1(D.List_atK, tag)) {
        _this._addAnonymousBlockIfNeeded$0();
        if (C.JSArray_methods.contains$1(D.List_ul_ol, tag)) {
          _this._listIndents.push(tag);
          t1 = element.attributes;
          if (t1.$index(0, "start") != null) {
            t1 = t1.$index(0, "start");
            t1.toString;
            start = B.int_parse(t1, _null) - 1;
          } else
            start = _null;
        } else {
          if (tag === "blockquote")
            _this._isInBlockquote = true;
          else if (tag === "table")
            _this._tables.push(new A._TableElement0(B._setArrayType([], type$.JSArray_TableRow)));
          else if (tag === "tr") {
            t1 = _this._tables;
            $length = C.JSArray_methods.get$single(t1).rows.length;
            decoration = _this.styleSheet.tableCellsDecoration;
            if ($length === 0 || ($length & 1) === 1)
              decoration = _null;
            C.JSArray_methods.get$single(t1).rows.push(new A.TableRow(decoration, B._setArrayType([], type$.JSArray_Widget)));
          }
          start = _null;
        }
        bElement = new A._BlockElement(tag, B._setArrayType([], type$.JSArray_Widget));
        if (start != null)
          bElement.nextListIndex = start;
        _this._blocks.push(bElement);
      } else {
        if (tag === "a") {
          text = _this.extractTextFromElement$1(element);
          if (text == null)
            return false;
          t1 = element.attributes;
          destination = t1.$index(0, "href");
          title = t1.$index(0, "title");
          if (title == null)
            title = "";
          _this._linkHandlers.push(_this.delegate.createLink$3(text, destination, title));
        }
        _this._addParentInlineIfNeeded$1(C.JSArray_methods.get$last(_this._blocks).tag);
        if (tag === "td") {
          t1 = element.children;
          t1 = t1 != null && J.get$isEmpty$asx(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = element.children;
          t1.toString;
          J.add$1$ax(t1, new A.Text0(""));
        }
        t1 = _this._inlines;
        t2 = C.JSArray_methods.get$last(t1).style;
        t2.toString;
        t1.push(new A._InlineElement(t2.merge$1(J.$index$asx(_this.styleSheet._styles, tag)), B._setArrayType([], type$.JSArray_Widget)));
      }
      return true;
    },
    extractTextFromElement$1(element) {
      var t2,
        t1 = element instanceof A.Element;
      if (t1) {
        t2 = element.children;
        t2 = t2 == null ? null : J.get$isNotEmpty$asx(t2);
        t2 = t2 === true;
      } else
        t2 = false;
      if (t2) {
        t1 = element.children;
        t1.toString;
        t1 = J.map$1$1$ax(t1, new A.MarkdownBuilder_extractTextFromElement_closure(this), type$.nullable_String).join$1(0, "");
      } else
        t1 = t1 && element.attributes._length !== 0 ? element.attributes.$index(0, "alt") : "";
      return t1;
    },
    visitText$1(text) {
      var t2, child, t3, _this = this, _null = null,
        t1 = _this._blocks;
      if (C.JSArray_methods.get$last(t1).tag == null)
        return;
      _this._addParentInlineIfNeeded$1(C.JSArray_methods.get$last(t1).tag);
      if (t1.length !== 0 && _this.builders.containsKey$1(0, C.JSArray_methods.get$last(t1).tag)) {
        t2 = C.JSArray_methods.get$last(t1).tag;
        t2.toString;
        t2 = _this.builders.$index(0, t2);
        t2.toString;
        t1 = C.JSArray_methods.get$last(t1).tag;
        t1.toString;
        child = t2.visitText$2(text, J.$index$asx(_this.styleSheet._styles, t1));
      } else if (C.JSArray_methods.get$last(t1).tag === "pre") {
        t1 = _this.styleSheet;
        child = B.Scrollbar$(E.SingleChildScrollView$(_this._buildRichText$1(_this.delegate.formatText$2(t1, text.text)), t1.codeblockPadding, _null, C.Axis_0), _null);
      } else {
        t1 = _this._inlines;
        if (_this._isInBlockquote) {
          t2 = _this.styleSheet.blockquote;
          t2.toString;
          t1 = t2.merge$1(C.JSArray_methods.get$last(t1).style);
        } else
          t1 = C.JSArray_methods.get$last(t1).style;
        t2 = text.text;
        t2 = _this._isInBlockquote ? t2 : new A.MarkdownBuilder_visitText_trimText(_this).call$1(t2);
        t3 = _this._linkHandlers;
        child = _this._buildRichText$2$textAlign(B.TextSpan$(_null, t3.length !== 0 ? C.JSArray_methods.get$last(t3) : _null, _null, t1, t2), _this._textAlignForBlockTag$1(_this._currentBlockTag));
      }
      C.JSArray_methods.get$last(_this._inlines).children.push(child);
      _this._lastVisitedTag = null;
    },
    _buildImage$3(src, title, alt) {
      var path, dimensions, width, height, uri, child, t1, _null = null,
        parts = src.split("#");
      if (parts.length === 0)
        return C.SizedBox_null_null_null_null;
      path = C.JSArray_methods.get$first(parts);
      if (parts.length === 2) {
        dimensions = J.split$1$s(C.JSArray_methods.get$last(parts), "x");
        if (dimensions.length === 2) {
          width = B.double_parse(dimensions[0]);
          height = B.double_parse(dimensions[1]);
        } else {
          height = _null;
          width = height;
        }
      } else {
        height = _null;
        width = height;
      }
      uri = B.Uri_parse(path, 0, _null);
      child = $.$get$kDefaultImageBuilder().call$4(uri, this.imageDirectory, width, height);
      t1 = this._linkHandlers;
      if (t1.length !== 0)
        return B.GestureDetector$(_null, child, C.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.JSArray_methods.get$last(t1).onTap, _null, _null, _null, _null, _null, _null);
      else
        return child;
    },
    _buildCheckbox$1(checked) {
      var t3, t4,
        t1 = this.styleSheet,
        t2 = t1.listBulletPadding;
      t2.toString;
      t3 = checked ? D.IconData_57687_false : D.IconData_57688_false;
      t1 = t1.checkbox;
      t4 = t1.fontSize;
      return new B.Padding(t2, B.Icon$(t3, t1.color, t4), null);
    },
    _buildBullet$1(listTag) {
      var t1, t2, _null = null,
        index = C.JSArray_methods.get$last(this._blocks).nextListIndex;
      if (listTag === "ul") {
        t1 = this.styleSheet;
        t2 = t1.listBulletPadding;
        t2.toString;
        return new B.Padding(t2, B.Text$("\u2022", _null, t1.listBullet, C.TextAlign_2, _null), _null);
      }
      t1 = this.styleSheet;
      t2 = t1.listBulletPadding;
      t2.toString;
      return new B.Padding(t2, B.Text$("" + (index + 1) + ".", _null, t1.listBullet, C.TextAlign_1, _null), _null);
    },
    _buildPadding$2(padding, child) {
      if (padding.$eq(0, C.EdgeInsets_0_0_0_0))
        return child;
      return new B.Padding(padding, child, null);
    },
    _addParentInlineIfNeeded$1(tag) {
      var t1 = this._inlines;
      if (t1.length === 0) {
        tag.toString;
        t1.push(new A._InlineElement(J.$index$asx(this.styleSheet._styles, tag), B._setArrayType([], type$.JSArray_Widget)));
      }
    },
    _addBlockChild$1(child) {
      var $parent = C.JSArray_methods.get$last(this._blocks),
        t1 = $parent.children;
      if (t1.length !== 0)
        t1.push(new B.SizedBox(null, this.styleSheet.blockSpacing, null, null));
      t1.push(child);
      ++$parent.nextListIndex;
    },
    _addAnonymousBlockIfNeeded$0() {
      var blockAlignment, textAlign, textPadding, t2, wrap, _this = this,
        t1 = _this._inlines;
      if (t1.length === 0)
        return;
      if (C.JSArray_methods.contains$1(D.List_atK, _this._currentBlockTag)) {
        blockAlignment = _this._wrapAlignmentForBlockTag$1(_this._currentBlockTag);
        textAlign = _this._textAlignForBlockTag$1(_this._currentBlockTag);
        textPadding = _this._textPaddingForBlockTag$1(_this._currentBlockTag);
        t2 = _this.paddingBuilders;
        if (t2.containsKey$1(0, _this._currentBlockTag))
          textPadding = t2.$index(0, _this._currentBlockTag).getPadding$0();
      } else {
        blockAlignment = C.WrapAlignment_0;
        textAlign = C.TextAlign_4;
        textPadding = C.EdgeInsets_0_0_0_0;
      }
      t2 = C.JSArray_methods.get$single(t1).children;
      if (t2.length !== 0) {
        wrap = F.Wrap$(blockAlignment, _this._mergeInlineChildren$2(t2, textAlign), G.WrapCrossAlignment_2, C.Axis_0, 0, 0);
        if (textPadding.$eq(0, C.EdgeInsets_0_0_0_0))
          _this._addBlockChild$1(wrap);
        else
          _this._addBlockChild$1(new B.Padding(textPadding, wrap, null));
        C.JSArray_methods.clear$0(t1);
      }
    },
    _mergeInlineChildren$2(children, textAlign) {
      var t1, t2, t3, t4, t5, _i, child, previousTextSpan, t6, t7, children0, _this = this,
        mergedTexts = B._setArrayType([], type$.JSArray_Widget);
      for (t1 = children.length, t2 = type$.JSArray_TextSpan, t3 = type$.SelectableText, t4 = type$.TextSpan, t5 = type$.RichText, _i = 0; _i < children.length; children.length === t1 || (0, B.throwConcurrentModificationError)(children), ++_i) {
        child = children[_i];
        if (mergedTexts.length !== 0 && C.JSArray_methods.get$last(mergedTexts) instanceof B.RichText && child instanceof B.RichText) {
          previousTextSpan = t5._as(mergedTexts.pop()).text;
          t6 = previousTextSpan.children;
          if (t6 != null) {
            t7 = B._arrayInstanceType(t6)._eval$1("MappedListIterable<1,TextSpan>");
            children0 = B.List_List$of(new B.MappedListIterable(t6, new A.MarkdownBuilder__mergeInlineChildren_closure(), t7), true, t7._eval$1("ListIterable.E"));
          } else
            children0 = B._setArrayType([previousTextSpan], t2);
          C.JSArray_methods.add$1(children0, child.text);
          mergedTexts.push(_this._buildRichText$2$textAlign(_this._mergeSimilarTextSpans$1(children0), textAlign));
        } else if (mergedTexts.length !== 0 && C.JSArray_methods.get$last(mergedTexts) instanceof A.SelectableText && child instanceof A.SelectableText) {
          previousTextSpan = t3._as(mergedTexts.pop()).textSpan;
          t6 = previousTextSpan.children;
          children0 = t6 != null ? B.List_List$from(t6, true, t4) : B._setArrayType([previousTextSpan], t2);
          children0.push(child.textSpan);
          mergedTexts.push(_this._buildRichText$2$textAlign(_this._mergeSimilarTextSpans$1(children0), textAlign));
        } else
          mergedTexts.push(child);
      }
      return mergedTexts;
    },
    _textAlignForBlockTag$1(blockTag) {
      switch (this._wrapAlignmentForBlockTag$1(blockTag).index) {
        case 0:
          return C.TextAlign_4;
        case 2:
          return C.TextAlign_2;
        case 1:
          return C.TextAlign_5;
        case 4:
          return C.TextAlign_3;
        case 3:
          return C.TextAlign_3;
        case 5:
          return C.TextAlign_3;
      }
    },
    _wrapAlignmentForBlockTag$1(blockTag) {
      var _this = this;
      switch (blockTag) {
        case "p":
          return _this.styleSheet.textAlign;
        case "h1":
          return _this.styleSheet.h1Align;
        case "h2":
          return _this.styleSheet.h2Align;
        case "h3":
          return _this.styleSheet.h3Align;
        case "h4":
          return _this.styleSheet.h4Align;
        case "h5":
          return _this.styleSheet.h5Align;
        case "h6":
          return _this.styleSheet.h6Align;
        case "ul":
          return _this.styleSheet.unorderedListAlign;
        case "ol":
          return _this.styleSheet.orderedListAlign;
        case "blockquote":
          return _this.styleSheet.blockquoteAlign;
        case "pre":
          return _this.styleSheet.codeblockAlign;
        case "hr":
          B.print("Markdown did not handle hr for alignment");
          break;
        case "li":
          B.print("Markdown did not handle li for alignment");
          break;
      }
      return C.WrapAlignment_0;
    },
    _textPaddingForBlockTag$1(blockTag) {
      var t1, _this = this;
      switch (blockTag) {
        case "p":
          t1 = _this.styleSheet.pPadding;
          t1.toString;
          return t1;
        case "h1":
          t1 = _this.styleSheet.h1Padding;
          t1.toString;
          return t1;
        case "h2":
          t1 = _this.styleSheet.h2Padding;
          t1.toString;
          return t1;
        case "h3":
          t1 = _this.styleSheet.h3Padding;
          t1.toString;
          return t1;
        case "h4":
          t1 = _this.styleSheet.h4Padding;
          t1.toString;
          return t1;
        case "h5":
          t1 = _this.styleSheet.h5Padding;
          t1.toString;
          return t1;
        case "h6":
          t1 = _this.styleSheet.h6Padding;
          t1.toString;
          return t1;
      }
      return C.EdgeInsets_0_0_0_0;
    },
    _mergeSimilarTextSpans$1(textSpans) {
      var mergedSpans, index, nextChild, previous, buffer, t2, _null = null,
        t1 = textSpans.length;
      if (t1 < 2)
        return B.TextSpan$(textSpans, _null, _null, _null, _null);
      mergedSpans = B._setArrayType([C.JSArray_methods.get$first(textSpans)], type$.JSArray_TextSpan);
      for (index = 1; index < textSpans.length; ++index) {
        nextChild = textSpans[index];
        if (nextChild.recognizer == C.JSArray_methods.get$last(mergedSpans).recognizer) {
          C.JSArray_methods.get$last(mergedSpans);
          t1 = J.$eq$(nextChild.style, C.JSArray_methods.get$last(mergedSpans).style);
        } else
          t1 = false;
        if (t1) {
          previous = mergedSpans.pop();
          buffer = new B.StringBuffer("");
          previous.computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, true);
          t1 = buffer._contents;
          buffer = new B.StringBuffer("");
          nextChild.computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, true);
          t2 = buffer._contents;
          mergedSpans.push(B.TextSpan$(_null, previous.recognizer, previous.semanticsLabel, previous.style, (t1.charCodeAt(0) == 0 ? t1 : t1) + (t2.charCodeAt(0) == 0 ? t2 : t2)));
        } else
          mergedSpans.push(nextChild);
      }
      return mergedSpans.length === 1 ? C.JSArray_methods.get$first(mergedSpans) : B.TextSpan$(mergedSpans, _null, _null, _null, _null);
    },
    _buildRichText$2$textAlign(text, textAlign) {
      var t2, _null = null,
        t1 = this.styleSheet.textScaleFactor;
      t1.toString;
      t2 = textAlign == null ? C.TextAlign_4 : textAlign;
      return B.RichText$(new B.UniqueKey(), _null, _null, C.TextOverflow_0, _null, _null, true, _null, text, t2, _null, _null, t1, C.TextWidthBasis_0);
    },
    _buildRichText$1(text) {
      return this._buildRichText$2$textAlign(text, null);
    }
  };
  A.MarkdownStyleSheetBaseTheme.prototype = {
    toString$0(_) {
      return "MarkdownStyleSheetBaseTheme." + this._core$_name;
    }
  };
  A.MarkdownListItemCrossAxisAlignment.prototype = {
    toString$0(_) {
      return "MarkdownListItemCrossAxisAlignment." + this._core$_name;
    }
  };
  A.MarkdownWidget.prototype = {
    createState$0() {
      return new A._MarkdownWidgetState(B._setArrayType([], type$.JSArray_GestureRecognizer), C._StateLifecycle_0);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A._MarkdownWidgetState.prototype = {
    didChangeDependencies$0() {
      this._parseMarkdown$0();
      this.super$State$didChangeDependencies();
    },
    didUpdateWidget$1(oldWidget) {
      var t1;
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget;
      if (t1.data !== oldWidget.data || !t1.styleSheet.$eq(0, oldWidget.styleSheet))
        this._parseMarkdown$0();
    },
    dispose$0() {
      this._disposeRecognizers$0();
      this.super$State$dispose();
    },
    _parseMarkdown$0() {
      var styleSheet, t3, t4, t5, $document, nodes, _this = this,
        t1 = $.$get$kFallbackStyle(),
        t2 = _this._framework$_element;
      t2.toString;
      styleSheet = t1.call$2(t2, _this._widget.styleSheetTheme).merge$1(_this._widget.styleSheet);
      _this._disposeRecognizers$0();
      _this._widget.toString;
      t1 = B._setArrayType([], type$.JSArray_InlineSyntax);
      t1.push(new A.TaskListSyntax(B.RegExp_RegExp("^ *\\[([ xX])\\] +", true, true), null));
      _this._widget.toString;
      t2 = $.$get$ExtensionSet_gitHubFlavored();
      t3 = B.LinkedHashSet_LinkedHashSet$_empty(type$.BlockSyntax);
      t4 = B.LinkedHashSet_LinkedHashSet$_empty(type$.InlineSyntax);
      t5 = t1.length;
      if (t5 === 0) {
        t5 = t2 == null ? null : t2.inlineSyntaxes.length !== 0;
        t5 = t5 === true;
      } else
        t5 = true;
      $document = new A.Document(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.LinkReference), false, t3, t4, t5);
      t5 = B._setArrayType([], type$.JSArray_BlockSyntax);
      t3.addAll$1(0, t5);
      t4.addAll$1(0, t1);
      if (t2 == null) {
        t1 = $.$get$ExtensionSet_commonMark();
        t3.addAll$1(0, t1.blockSyntaxes);
        t4.addAll$1(0, t1.inlineSyntaxes);
      } else {
        t3.addAll$1(0, t2.blockSyntaxes);
        t4.addAll$1(0, t2.inlineSyntaxes);
      }
      nodes = A.BlockParser$(D.C_LineSplitter.convert$1(_this._widget.data), $document).parseLines$0();
      $document._parseInlineContent$1(nodes);
      t1 = _this._widget;
      _this._widget$_children = new A.MarkdownBuilder(_this, false, styleSheet, t1.imageDirectory, t1.imageBuilder, t1.checkboxBuilder, t1.bulletBuilder, t1.builders, t1.paddingBuilders, true, t1.listItemCrossAxisAlignment, t1.onTapText, false, B._setArrayType([], type$.JSArray_String), B._setArrayType([], type$.JSArray__BlockElement), B._setArrayType([], type$.JSArray__TableElement), B._setArrayType([], type$.JSArray__InlineElement), B._setArrayType([], type$.JSArray_GestureRecognizer)).build$1(nodes);
    },
    _disposeRecognizers$0() {
      var localRecognizers, _i,
        t1 = this._widget$_recognizers;
      if (t1.length === 0)
        return;
      localRecognizers = B.List_List$from(t1, true, type$.GestureRecognizer);
      C.JSArray_methods.clear$0(t1);
      for (t1 = localRecognizers.length, _i = 0; _i < t1; ++_i)
        localRecognizers[_i].dispose$0();
    },
    createLink$3(text, href, title) {
      var recognizer = B.TapGestureRecognizer$(null);
      recognizer.onTap = new A._MarkdownWidgetState_createLink_closure(this, text, href, title);
      this._widget$_recognizers.push(recognizer);
      return recognizer;
    },
    formatText$2(styleSheet, code) {
      var t1 = B.RegExp_RegExp("\\n$", true, false);
      code = B.stringReplaceAllUnchecked(code, t1, "");
      this._widget.toString;
      return B.TextSpan$(null, null, null, styleSheet.code, code);
    },
    build$1(context) {
      return this._widget.build$2(context, this._widget$_children);
    }
  };
  A.MarkdownBody.prototype = {
    build$2(context, children) {
      if (children.length === 1)
        return C.JSArray_methods.get$single(children);
      return B.Column$(children, C.CrossAxisAlignment_0, C.MainAxisAlignment_0, C.MainAxisSize_0);
    }
  };
  A.TaskListSyntax.prototype = {
    onMatch$2(parser, match) {
      var t3,
        t1 = B._setArrayType([], type$.JSArray_Node),
        t2 = type$.String;
      t2 = B.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      t2.$indexSet(0, "type", "checkbox");
      t2.$indexSet(0, "disabled", "true");
      t3 = match._match[1];
      t3.toString;
      t2.$indexSet(0, "checked", "" + (C.JSString_methods.trim$0(t3).length !== 0));
      parser._tree.push(new A.Element("input", t1, t2));
      return true;
    }
  };
  A.Element.prototype = {
    accept$1(_, visitor) {
      var t1, t2, tag, child, t3, el, bullet, t4, current, $parent, padding, style, align, _this = this, _null = null;
      if (visitor.visitElementBefore$1(_this)) {
        t1 = _this.children;
        if (t1 != null)
          for (t2 = J.get$iterator$ax(t1); t2.moveNext$0();)
            t2.get$current(t2).accept$1(0, visitor);
        tag = _this.tag;
        if (C.JSArray_methods.contains$1(D.List_atK, tag)) {
          visitor._addAnonymousBlockIfNeeded$0();
          t2 = visitor._blocks.pop().children;
          if (t2.length !== 0)
            child = B.Column$(t2, C.CrossAxisAlignment_0, C.MainAxisAlignment_0, C.MainAxisSize_1);
          else
            child = C.SizedBox_null_null_null_null;
          if (C.JSArray_methods.contains$1(D.List_ul_ol, tag))
            visitor._listIndents.pop();
          else if (tag === "li") {
            t2 = visitor._listIndents;
            if (t2.length !== 0) {
              t1.toString;
              t3 = J.getInterceptor$asx(t1);
              if (t3.get$isEmpty(t1))
                t3.add$1(t1, new A.Text0(""));
              el = t3.$index(t1, 0);
              bullet = el instanceof A.Element && el.attributes.$index(0, "type") === "checkbox" ? visitor._buildCheckbox$1(el.attributes.$index(0, "checked") !== "false") : visitor._buildBullet$1(C.JSArray_methods.get$last(t2));
              t1 = visitor.listItemCrossAxisAlignment === D.MarkdownListItemCrossAxisAlignment_1;
              t2 = t1 ? _null : C.TextBaseline_0;
              t1 = t1 ? C.CrossAxisAlignment_0 : C.CrossAxisAlignment_4;
              t3 = visitor.styleSheet;
              t4 = t3.listIndent;
              t4.toString;
              t3 = t3.listBulletPadding;
              child = B.Row$(B._setArrayType([new B.SizedBox(t4 + t3.left + t3.right, _null, bullet, _null), B.Expanded$(child, 1)], type$.JSArray_Widget), t1, C.MainAxisAlignment_0, C.MainAxisSize_1, t2);
            }
          } else if (tag === "table") {
            t1 = visitor.styleSheet;
            t2 = t1.tableColumnWidth;
            t2.toString;
            child = A.Table$(t1.tableBorder, visitor._tables.pop().rows, t2, D.TableCellVerticalAlignment_1);
          } else if (tag === "blockquote") {
            visitor._isInBlockquote = false;
            t1 = visitor.styleSheet;
            t2 = t1.blockquoteDecoration;
            t2.toString;
            t1 = t1.blockquotePadding;
            t1.toString;
            child = B.DecoratedBox$(new B.Padding(t1, child, _null), t2, C.DecorationPosition_0);
          } else if (tag === "pre")
            child = B.DecoratedBox$(child, visitor.styleSheet.codeblockDecoration, C.DecorationPosition_0);
          else if (tag === "hr")
            child = B.Container$(_null, _null, C.Clip_0, _null, _null, visitor.styleSheet.horizontalRuleDecoration, _null, _null, _null, _null, _null, _null, _null, _null);
          visitor._addBlockChild$1(child);
        } else {
          t1 = visitor._inlines;
          current = t1.pop();
          $parent = C.JSArray_methods.get$last(t1);
          t1 = visitor.paddingBuilders;
          padding = t1.containsKey$1(0, tag) ? t1.$index(0, tag).getPadding$0() : C.EdgeInsets_0_0_0_0;
          t1 = visitor.builders;
          if (t1.containsKey$1(0, tag)) {
            t1 = t1.$index(0, tag);
            t1.toString;
            current.children[0] = t1.visitElementAfter$2(_this, J.$index$asx(visitor.styleSheet._styles, tag));
          } else if (tag === "img") {
            t1 = _this.attributes;
            t2 = t1.$index(0, "src");
            t2.toString;
            current.children.push(visitor._buildPadding$2(padding, visitor._buildImage$3(t2, t1.$index(0, "title"), t1.$index(0, "alt"))));
          } else if (tag === "br")
            current.children.push(visitor._buildRichText$1(D.TextSpan_mpm));
          else {
            t1 = tag === "th";
            if (t1 || tag === "td") {
              style = _this.attributes.$index(0, "style");
              if (style == null)
                align = t1 ? visitor.styleSheet.tableHeadAlign : C.TextAlign_0;
              else
                switch (B.RegExp_RegExp("text-align: (left|center|right)", true, false).matchAsPrefix$1(0, style)._match[1]) {
                  case "left":
                    align = C.TextAlign_0;
                    break;
                  case "center":
                    align = C.TextAlign_2;
                    break;
                  case "right":
                    align = C.TextAlign_1;
                    break;
                  default:
                    align = _null;
                }
              t1 = visitor._mergeInlineChildren$2(current.children, align);
              t2 = visitor.styleSheet;
              t3 = t2.tableCellsPadding;
              t3.toString;
              t2 = t2.tableBody;
              t2.toString;
              t2 = B.DefaultTextStyle$(F.Wrap$(C.WrapAlignment_0, type$.List_Widget._as(t1), G.WrapCrossAlignment_0, C.Axis_0, 0, 0), _null, C.TextOverflow_0, true, t2, align, _null, C.TextWidthBasis_0);
              C.JSArray_methods.get$last(C.JSArray_methods.get$single(visitor._tables).rows).children.push(new A.TableCell(new B.Padding(t3, t2, _null), _null));
            } else if (tag === "a")
              visitor._linkHandlers.pop();
          }
          t1 = current.children;
          if (t1.length !== 0)
            C.JSArray_methods.addAll$1($parent.children, t1);
        }
        if (visitor._currentBlockTag === tag)
          visitor._currentBlockTag = null;
        visitor._lastVisitedTag = tag;
      }
    },
    get$textContent() {
      var t1 = this.children;
      if (t1 == null)
        t1 = B._setArrayType([], type$.JSArray_Node);
      return J.map$1$1$ax(t1, new A.Element_textContent_closure(), type$.String).join$1(0, "");
    },
    $isNode0: 1
  };
  A.Text0.prototype = {
    accept$1(_, visitor) {
      return visitor.visitText$1(this);
    },
    get$textContent() {
      return this.text;
    },
    $isNode0: 1
  };
  A.UnparsedContent.prototype = {
    accept$1(_, visitor) {
    },
    $isNode0: 1,
    get$textContent() {
      return this.textContent;
    }
  };
  A.BlockParser.prototype = {
    get$next(_) {
      var t1 = this._pos,
        t2 = this.lines;
      if (t1 >= t2.length - 1)
        return null;
      return t2[t1 + 1];
    },
    peek$1(linesAhead) {
      var t1 = this._pos,
        t2 = this.lines;
      if (t1 >= t2.length - linesAhead)
        return null;
      return t2[t1 + linesAhead];
    },
    matches$1(_, regex) {
      var t1 = this._pos,
        t2 = this.lines;
      if (t1 >= t2.length)
        return false;
      t1 = t2[t1];
      t2 = regex._nativeRegExp;
      return t2.test(t1);
    },
    matchesNext$1(regex) {
      var t1, t2, _this = this;
      if (_this.get$next(_this) == null)
        return false;
      t1 = _this.get$next(_this);
      t1.toString;
      t2 = regex._nativeRegExp;
      return t2.test(t1);
    },
    parseLines$0() {
      var t1, t2, t3, _i, syntax, block, _this = this,
        blocks = B._setArrayType([], type$.JSArray_Node);
      for (t1 = _this.lines, t2 = _this.blockSyntaxes; _this._pos < t1.length;)
        for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, B.throwConcurrentModificationError)(t2), ++_i) {
          syntax = t2[_i];
          if (syntax.canParse$1(_this)) {
            block = J.parse$1$z(syntax, _this);
            if (block != null)
              blocks.push(block);
            break;
          }
        }
      return blocks;
    }
  };
  A.BlockSyntax.prototype = {
    canEndBlock$1(parser) {
      return true;
    },
    canParse$1(parser) {
      var t1 = this.get$pattern(this),
        t2 = parser.lines[parser._pos];
      t1 = t1._nativeRegExp;
      return t1.test(t2);
    }
  };
  A.EmptyBlockSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_emptyPattern();
    },
    parse$1(_, parser) {
      parser.encounteredBlankLine = true;
      ++parser._pos;
      return null;
    }
  };
  A.SetextHeaderSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_dummyPattern();
    },
    canParse$1(parser) {
      var i, nextLine, t1;
      if (!this._interperableAsParagraph$1(parser.lines[parser._pos]))
        return false;
      for (i = 1; true;) {
        nextLine = parser.peek$1(i);
        if (nextLine == null)
          return false;
        t1 = $.$get$_setextPattern()._nativeRegExp;
        if (t1.test(nextLine))
          return true;
        if (!this._interperableAsParagraph$1(nextLine))
          return false;
        ++i;
      }
    },
    parse$1(_, parser) {
      var tag, t2, match,
        lines = B._setArrayType([], type$.JSArray_String),
        t1 = parser.lines;
      while (true) {
        t2 = parser._pos;
        if (!(t2 < t1.length)) {
          tag = null;
          break;
        }
        c$0: {
          match = $.$get$_setextPattern().firstMatch$1(t1[t2]);
          if (match == null) {
            lines.push(t1[parser._pos]);
            ++parser._pos;
            break c$0;
          } else {
            tag = match._match[1][0] === "=" ? "h1" : "h2";
            ++parser._pos;
            break;
          }
        }
      }
      t1 = C.JSString_methods.trimRight$0(C.JSArray_methods.join$1(lines, "\n"));
      tag.toString;
      t2 = type$.String;
      return new A.Element(tag, B._setArrayType([new A.UnparsedContent(t1)], type$.JSArray_Node), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    },
    _interperableAsParagraph$1(line) {
      var t1 = $.$get$_indentPattern()._nativeRegExp;
      if (!t1.test(line)) {
        t1 = $.$get$_codeFencePattern()._nativeRegExp;
        if (!t1.test(line)) {
          t1 = $.$get$_headerPattern()._nativeRegExp;
          if (!t1.test(line)) {
            t1 = $.$get$_blockquotePattern()._nativeRegExp;
            if (!t1.test(line)) {
              t1 = $.$get$_hrPattern()._nativeRegExp;
              if (!t1.test(line)) {
                t1 = $.$get$_ulPattern()._nativeRegExp;
                if (!t1.test(line)) {
                  t1 = $.$get$_olPattern()._nativeRegExp;
                  if (!t1.test(line)) {
                    t1 = $.$get$_emptyPattern()._nativeRegExp;
                    t1 = t1.test(line);
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
          } else
            t1 = true;
        } else
          t1 = true;
      } else
        t1 = true;
      return !t1;
    }
  };
  A.HeaderSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_headerPattern();
    },
    parse$1(_, parser) {
      var level, t2,
        t1 = $.$get$_headerPattern().firstMatch$1(parser.lines[parser._pos]);
      t1.toString;
      ++parser._pos;
      t1 = t1._match;
      level = t1[1].length;
      t1 = t1[2];
      t1.toString;
      t2 = type$.String;
      return new A.Element("h" + level, B._setArrayType([new A.UnparsedContent(C.JSString_methods.trim$0(t1))], type$.JSArray_Node), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    }
  };
  A.BlockquoteSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_blockquotePattern();
    },
    parseChildLines$1(parser) {
      var t1, t2, encounteredCodeBlock, t3, match, t4, otherMatched,
        childLines = B._setArrayType([], type$.JSArray_String);
      for (t1 = parser.lines, t2 = parser.blockSyntaxes, encounteredCodeBlock = false; t3 = parser._pos, t3 < t1.length;) {
        match = $.$get$_blockquotePattern().firstMatch$1(t1[t3]);
        if (match != null) {
          t3 = match._match[1];
          t3.toString;
          childLines.push(t3);
          t4 = $.$get$_indentPattern()._nativeRegExp;
          encounteredCodeBlock = t4.test(t3);
          ++parser._pos;
          continue;
        }
        otherMatched = C.JSArray_methods.firstWhere$1(t2, new A.BlockquoteSyntax_parseChildLines_closure(parser));
        if (!(otherMatched instanceof A.ParagraphSyntax))
          t3 = !encounteredCodeBlock && otherMatched instanceof A.CodeBlockSyntax;
        else
          t3 = true;
        if (t3) {
          childLines.push(t1[parser._pos]);
          ++parser._pos;
        } else
          break;
      }
      return childLines;
    },
    parse$1(_, parser) {
      var t1 = type$.String;
      return new A.Element("blockquote", A.BlockParser$(this.parseChildLines$1(parser), parser.document).parseLines$0(), B.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    }
  };
  A.CodeBlockSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_indentPattern();
    },
    canEndBlock$1(parser) {
      return false;
    },
    parseChildLines$1(parser) {
      var t1, t2, t3, match, nextMatch,
        childLines = B._setArrayType([], type$.JSArray_nullable_String);
      for (t1 = parser.lines; t2 = parser._pos, t2 < t1.length;) {
        t3 = $.$get$_indentPattern();
        match = t3.firstMatch$1(t1[t2]);
        if (match != null) {
          childLines.push(match._match[1]);
          ++parser._pos;
        } else {
          if (parser.get$next(parser) != null) {
            t2 = parser.get$next(parser);
            t2.toString;
            nextMatch = t3.firstMatch$1(t2);
          } else
            nextMatch = null;
          if (C.JSString_methods.trim$0(t1[parser._pos]) === "" && nextMatch != null) {
            childLines.push("");
            childLines.push(nextMatch._match[1]);
            parser._pos = ++parser._pos + 1;
          } else
            break;
        }
      }
      return childLines;
    },
    parse$1(_, parser) {
      var $content, t1, t2,
        childLines = this.parseChildLines$1(parser);
      childLines.push("");
      $content = C.JSArray_methods.join$1(childLines, "\n");
      t1 = type$.JSArray_Node;
      t2 = type$.String;
      return new A.Element("pre", B._setArrayType([new A.Element("code", B._setArrayType([new A.Text0($content)], t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2))], t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    }
  };
  A.FencedCodeBlockSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_codeFencePattern();
    },
    canParse$1(parser) {
      var t1, t2, infoString,
        match = $.$get$_codeFencePattern().firstMatch$1(parser.lines[parser._pos]);
      if (match == null)
        return false;
      t1 = match._match;
      t2 = t1[1];
      t2.toString;
      infoString = t1[2];
      if (C.JSString_methods._codeUnitAt$1(t2, 0) === 96) {
        infoString.toString;
        t1 = new B.CodeUnits(infoString);
        t1 = !t1.contains$1(t1, 96);
      } else
        t1 = true;
      return t1;
    },
    parseChildLines$2(parser, endBlock) {
      var childLines, t1, t2, match, t3;
      if (endBlock == null)
        endBlock = "";
      childLines = B._setArrayType([], type$.JSArray_String);
      t1 = ++parser._pos;
      for (t2 = parser.lines; t1 < t2.length;) {
        match = $.$get$_codeFencePattern().firstMatch$1(t2[t1]);
        if (match != null) {
          t1 = match._match[1];
          t1.toString;
          t1 = !C.JSString_methods.startsWith$1(t1, endBlock);
        } else
          t1 = true;
        t3 = parser._pos;
        if (t1) {
          childLines.push(t2[t3]);
          t1 = ++parser._pos;
        } else {
          parser._pos = t3 + 1;
          break;
        }
      }
      return childLines;
    },
    parse$1(_, parser) {
      var childLines, text, t3, t4, t5, infoString, firstSpace,
        t1 = $.$get$_codeFencePattern().firstMatch$1(parser.lines[parser._pos])._match,
        t2 = t1[1];
      t1 = t1[2];
      t1.toString;
      childLines = this.parseChildLines$2(parser, t2);
      childLines.push("");
      text = C.JSArray_methods.join$1(childLines, "\n");
      t2 = type$.JSArray_Node;
      t3 = B._setArrayType([new A.Text0(text)], t2);
      t4 = type$.String;
      t5 = B.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
      infoString = C.JSString_methods.trim$0(t1);
      if (infoString.length !== 0) {
        firstSpace = C.JSString_methods.indexOf$1(infoString, " ");
        if (firstSpace >= 0)
          infoString = C.JSString_methods.substring$2(infoString, 0, firstSpace);
        t5.$indexSet(0, "class", "language-" + infoString);
      }
      return new A.Element("pre", B._setArrayType([new A.Element("code", t3, t5)], t2), B.LinkedHashMap_LinkedHashMap$_empty(t4, t4));
    }
  };
  A.HorizontalRuleSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_hrPattern();
    },
    parse$1(_, parser) {
      var t1;
      ++parser._pos;
      t1 = type$.String;
      return new A.Element("hr", null, B.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    }
  };
  A.BlockHtmlSyntax.prototype = {
    canEndBlock$1(parser) {
      return true;
    }
  };
  A.BlockTagBlockHtmlSyntax.prototype = {
    get$pattern(_) {
      return $.$get$BlockTagBlockHtmlSyntax__pattern();
    },
    canParse$1(parser) {
      var t1 = $.$get$BlockTagBlockHtmlSyntax__openBracketPattern(),
        t2 = parser.lines[parser._pos];
      t1 = t1._nativeRegExp;
      if (!t1.test(t2))
        return false;
      return this.super$BlockSyntax$canParse(parser);
    },
    parse$1(_, parser) {
      var childLines = B._setArrayType([], type$.JSArray_String),
        t1 = parser.lines;
      while (true) {
        if (!(parser._pos < t1.length && !parser.matches$1(0, $.$get$_emptyPattern())))
          break;
        childLines.push(t1[parser._pos]);
        ++parser._pos;
      }
      return new A.Text0(C.JSString_methods.trimRight$0(C.JSArray_methods.join$1(childLines, "\n")));
    }
  };
  A.OtherTagBlockHtmlSyntax.prototype = {
    canEndBlock$1(parser) {
      return false;
    },
    get$pattern(_) {
      return B.RegExp_RegExp("^ {0,3}</?\\w+(?:>|\\s+[^>]*>)\\s*$", true, false);
    }
  };
  A.LongBlockHtmlSyntax.prototype = {
    parse$1(_, parser) {
      var t1, t2, t3,
        childLines = B._setArrayType([], type$.JSArray_String);
      for (t1 = parser.lines, t2 = this._endPattern; t3 = parser._pos, t3 < t1.length;) {
        childLines.push(t1[t3]);
        if (parser.matches$1(0, t2))
          break;
        ++parser._pos;
      }
      ++parser._pos;
      return new A.Text0(C.JSString_methods.trimRight$0(C.JSArray_methods.join$1(childLines, "\n")));
    },
    get$pattern(receiver) {
      return this.pattern;
    }
  };
  A.ListItem.prototype = {};
  A.ListSyntax.prototype = {
    canEndBlock$1(parser) {
      var t1 = this.get$pattern(this).firstMatch$1(parser.lines[parser._pos])._match[7];
      t1 = t1 == null ? null : t1.length !== 0;
      return t1 === true;
    },
    parse$1(_, parser) {
      var endItem, match, tryMatch, t1, t2, startNumber, indent, listMarker, t3, t4, leadingExpandedTabLength, t5, line, digits, firstWhitespace, restWhitespace, $content, markerAsSpaces, itemNodes, anyEmptyLines, anyEmptyLinesBetweenBlocks, _i, itemParser, children, i, child, _this = this, _null = null, _box_0 = {},
        items = B._setArrayType([], type$.JSArray_ListItem);
      _box_0.childLines = B._setArrayType([], type$.JSArray_String);
      endItem = new A.ListSyntax_parse_endItem(_box_0, items);
      match = B._Cell$named("match");
      tryMatch = new A.ListSyntax_parse_tryMatch(match, parser);
      for (t1 = parser.lines, t2 = match.__late_helper$_name, startNumber = _null, indent = startNumber, listMarker = indent; t3 = parser._pos, t3 < t1.length;) {
        t4 = $.$get$ListSyntax__whitespaceRe();
        t3 = t1[t3];
        t3 = t4._execAnchored$2(t3, 0)._match[0];
        t3.toString;
        leadingExpandedTabLength = A.ListSyntax__expandedTabLength(t3);
        t4 = $.$get$_emptyPattern();
        if (tryMatch.call$1(t4)) {
          t3 = parser.get$next(parser);
          if (t3 == null)
            t3 = "";
          t4 = t4._nativeRegExp;
          if (t4.test(t3))
            break;
          _box_0.childLines.push("");
        } else if (indent != null && indent.length <= leadingExpandedTabLength) {
          t4 = t1[parser._pos];
          t5 = C.JSString_methods.$mul(" ", leadingExpandedTabLength);
          t3 = B.stringReplaceFirstUnchecked(t4, t3, t5, 0);
          line = B.stringReplaceFirstUnchecked(t3, indent, "", 0);
          _box_0.childLines.push(line);
        } else if (tryMatch.call$1($.$get$_hrPattern()))
          break;
        else if (tryMatch.call$1($.$get$_ulPattern()) || tryMatch.call$1($.$get$_olPattern())) {
          t3 = match.__late_helper$_value;
          if (t3 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t3.toString;
          t3 = J.$index$asx(t3, 1);
          t3.toString;
          t4 = match.__late_helper$_value;
          if (t4 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t4.toString;
          digits = J.$index$asx(t4, 2);
          if (digits == null)
            digits = "";
          if (startNumber == null && digits.length !== 0)
            startNumber = B.int_parse(digits, _null);
          t4 = match.__late_helper$_value;
          if (t4 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t4.toString;
          t4 = J.$index$asx(t4, 3);
          t4.toString;
          t5 = match.__late_helper$_value;
          if (t5 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t5.toString;
          firstWhitespace = J.$index$asx(t5, 5);
          if (firstWhitespace == null)
            firstWhitespace = "";
          t5 = match.__late_helper$_value;
          if (t5 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t5.toString;
          restWhitespace = J.$index$asx(t5, 6);
          if (restWhitespace == null)
            restWhitespace = "";
          t5 = match.__late_helper$_value;
          if (t5 === match)
            B.throwExpression(B.LateError$localNI(t2));
          t5.toString;
          $content = J.$index$asx(t5, 7);
          if ($content == null)
            $content = "";
          if (listMarker != null && listMarker !== t4)
            break;
          markerAsSpaces = C.JSString_methods.$mul(" ", digits.length + t4.length);
          if ($content.length === 0)
            indent = t3 + markerAsSpaces + " ";
          else {
            indent = t3 + markerAsSpaces + firstWhitespace;
            indent = restWhitespace.length >= 4 ? indent : indent + restWhitespace;
          }
          endItem.call$0();
          _box_0.childLines.push(restWhitespace + $content);
          listMarker = t4;
        } else if (A.BlockSyntax_isAtBlockEnd(parser))
          break;
        else {
          t3 = _box_0.childLines;
          if (t3.length !== 0 && C.JSArray_methods.get$last(t3) === "") {
            parser.encounteredBlankLine = true;
            break;
          }
          _box_0.childLines.push(t1[parser._pos]);
        }
        ++parser._pos;
      }
      endItem.call$0();
      itemNodes = B._setArrayType([], type$.JSArray_Element);
      C.JSArray_methods.forEach$1(items, _this.get$_removeLeadingEmptyLine());
      anyEmptyLines = _this._removeTrailingEmptyLines$1(items);
      for (t1 = items.length, t2 = parser.document, t3 = type$.String, anyEmptyLinesBetweenBlocks = false, _i = 0; _i < items.length; items.length === t1 || (0, B.throwConcurrentModificationError)(items), ++_i) {
        itemParser = A.BlockParser$(items[_i].lines, t2);
        itemNodes.push(new A.Element("li", itemParser.parseLines$0(), B.LinkedHashMap_LinkedHashMap$_empty(t3, t3)));
        anyEmptyLinesBetweenBlocks = anyEmptyLinesBetweenBlocks || itemParser.encounteredBlankLine;
      }
      if (!anyEmptyLines && !anyEmptyLinesBetweenBlocks)
        for (t1 = itemNodes.length, _i = 0; _i < itemNodes.length; itemNodes.length === t1 || (0, B.throwConcurrentModificationError)(itemNodes), ++_i) {
          children = itemNodes[_i].children;
          if (children != null)
            for (t2 = J.getInterceptor$asx(children), i = 0; i < t2.get$length(children); ++i) {
              child = t2.$index(children, i);
              if (child instanceof A.Element && child.tag === "p") {
                t2.removeAt$1(children, i);
                t4 = child.children;
                t4.toString;
                t2.insertAll$2(children, i, t4);
              }
            }
        }
      if (_this.get$listTag() === "ol" && startNumber !== 1) {
        t1 = _this.get$listTag();
        t3 = B.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
        t3.$indexSet(0, "start", B.S(startNumber));
        return new A.Element(t1, itemNodes, t3);
      } else
        return new A.Element(_this.get$listTag(), itemNodes, B.LinkedHashMap_LinkedHashMap$_empty(t3, t3));
    },
    _removeLeadingEmptyLine$1(item) {
      var t2, t3,
        t1 = item.lines;
      if (t1.length !== 0) {
        t2 = $.$get$_emptyPattern();
        t3 = C.JSArray_methods.get$first(t1);
        t2 = t2._nativeRegExp;
        t2 = t2.test(t3);
      } else
        t2 = false;
      if (t2)
        C.JSArray_methods.removeAt$1(t1, 0);
    },
    _removeTrailingEmptyLines$1(items) {
      var anyEmpty, i, t1, t2;
      for (anyEmpty = false, i = 0; i < items.length; ++i) {
        if (items[i].lines.length === 1)
          continue;
        while (true) {
          t1 = items[i].lines;
          if (t1.length !== 0) {
            t2 = $.$get$_emptyPattern();
            t1 = C.JSArray_methods.get$last(t1);
            t2 = t2._nativeRegExp;
            t1 = t2.test(t1);
          } else
            t1 = false;
          if (!t1)
            break;
          if (i < items.length - 1)
            anyEmpty = true;
          items[i].lines.pop();
        }
      }
      return anyEmpty;
    }
  };
  A.UnorderedListSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_ulPattern();
    },
    get$listTag() {
      return "ul";
    }
  };
  A.OrderedListSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_olPattern();
    },
    get$listTag() {
      return "ol";
    }
  };
  A.TableSyntax.prototype = {
    canEndBlock$1(parser) {
      return false;
    },
    get$pattern(_) {
      return $.$get$_dummyPattern();
    },
    canParse$1(parser) {
      return parser.matchesNext$1($.$get$_tablePattern());
    },
    parse$1(_, parser) {
      var alignments, columnCount, headRow, t2, head, rows, t3, row, children, t4,
        t1 = parser.get$next(parser);
      t1.toString;
      alignments = this._parseAlignments$1(t1);
      columnCount = alignments.length;
      headRow = this._parseRow$3(parser, alignments, "th");
      t1 = headRow.children;
      t1.toString;
      if (J.get$length$asx(t1) !== columnCount)
        return null;
      t1 = type$.JSArray_Node;
      t2 = type$.String;
      head = new A.Element("thead", B._setArrayType([headRow], t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
      ++parser._pos;
      rows = B._setArrayType([], type$.JSArray_Element);
      t3 = parser.lines;
      while (true) {
        if (!(parser._pos < t3.length && !A.BlockSyntax_isAtBlockEnd(parser)))
          break;
        row = this._parseRow$3(parser, alignments, "td");
        children = row.children;
        if (children != null) {
          for (t4 = J.getInterceptor$asx(children); t4.get$length(children) < columnCount;)
            t4.add$1(children, new A.Element("td", null, B.LinkedHashMap_LinkedHashMap$_empty(t2, t2)));
          for (; t4.get$length(children) > columnCount;)
            t4.removeLast$0(children);
        }
        children.toString;
        t4 = J.getInterceptor$asx(children);
        for (; t4.get$length(children) > columnCount;)
          t4.removeLast$0(children);
        rows.push(row);
      }
      if (rows.length === 0)
        return new A.Element("table", B._setArrayType([head], t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
      else
        return new A.Element("table", B._setArrayType([head, new A.Element("tbody", rows, B.LinkedHashMap_LinkedHashMap$_empty(t2, t2))], t1), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    },
    _parseAlignments$1(line) {
      var ch, t1,
        startIndex = this._walkPastOpeningPipe$1(line),
        endIndex = line.length - 1;
      for (; endIndex > 0;) {
        ch = C.JSString_methods.codeUnitAt$1(line, endIndex);
        if (ch === 124) {
          --endIndex;
          break;
        }
        if (ch !== 32 && ch !== 9)
          break;
        --endIndex;
      }
      t1 = type$.MappedListIterable_of_String_and_nullable_String;
      return B.List_List$of(new B.MappedListIterable(B._setArrayType(C.JSString_methods.substring$2(line, startIndex, endIndex + 1).split("|"), type$.JSArray_String), new A.TableSyntax__parseAlignments_closure(), t1), true, t1._eval$1("ListIterable.E"));
    },
    _parseRow$3(parser, alignments, cellType) {
      var t1, t2, t3, ch, escaped, t4, _i, i,
        line = parser.lines[parser._pos],
        cells = B._setArrayType([], type$.JSArray_String),
        index = this._walkPastOpeningPipe$1(line);
      for (t1 = line.length, t2 = t1 - 1, t3 = ""; true;) {
        if (index >= t1) {
          cells.push(C.JSString_methods.trimRight$0(t3.charCodeAt(0) == 0 ? t3 : t3));
          break;
        }
        ch = C.JSString_methods._codeUnitAt$1(line, index);
        if (ch === 92) {
          if (index === t2) {
            t1 = t3 + B.Primitives_stringFromCharCode(ch);
            cells.push(C.JSString_methods.trimRight$0(t1.charCodeAt(0) == 0 ? t1 : t1));
            break;
          }
          escaped = C.JSString_methods._codeUnitAt$1(line, index + 1);
          t3 = escaped === 124 ? t3 + B.Primitives_stringFromCharCode(escaped) : t3 + B.Primitives_stringFromCharCode(ch) + B.Primitives_stringFromCharCode(escaped);
          index += 2;
        } else {
          ++index;
          if (ch === 124) {
            cells.push(C.JSString_methods.trimRight$0(t3.charCodeAt(0) == 0 ? t3 : t3));
            index = this._walkPastWhitespace$2(line, index);
            if (index >= t1)
              break;
            t3 = "";
          } else
            t3 += B.Primitives_stringFromCharCode(ch);
        }
      }
      ++parser._pos;
      t1 = B._setArrayType([], type$.JSArray_Element);
      for (t2 = cells.length, t3 = type$.JSArray_Node, t4 = type$.String, _i = 0; _i < cells.length; cells.length === t2 || (0, B.throwConcurrentModificationError)(cells), ++_i)
        t1.push(new A.Element(cellType, B._setArrayType([new A.UnparsedContent(cells[_i])], t3), B.LinkedHashMap_LinkedHashMap$_empty(t4, t4)));
      i = 0;
      while (true) {
        if (!(i < t1.length && i < alignments.length))
          break;
        c$1: {
          t2 = alignments[i];
          if (t2 == null)
            break c$1;
          t1[i].attributes.$indexSet(0, "style", "text-align: " + B.S(t2) + ";");
        }
        ++i;
      }
      return new A.Element("tr", t1, B.LinkedHashMap_LinkedHashMap$_empty(t4, t4));
    },
    _walkPastWhitespace$2(line, index) {
      var t1, ch;
      for (t1 = line.length; index < t1;) {
        ch = C.JSString_methods._codeUnitAt$1(line, index);
        if (ch !== 32 && ch !== 9)
          break;
        ++index;
      }
      return index;
    },
    _walkPastOpeningPipe$1(line) {
      var t1, index, ch;
      for (t1 = line.length, index = 0; index < t1;) {
        ch = C.JSString_methods._codeUnitAt$1(line, index);
        if (ch === 124)
          index = this._walkPastWhitespace$2(line, index + 1);
        if (ch !== 32 && ch !== 9)
          break;
        ++index;
      }
      return index;
    }
  };
  A.ParagraphSyntax.prototype = {
    get$pattern(_) {
      return $.$get$_dummyPattern();
    },
    canEndBlock$1(parser) {
      return false;
    },
    canParse$1(parser) {
      return true;
    },
    parse$1(_, parser) {
      var t1, paragraphLines,
        childLines = B._setArrayType([], type$.JSArray_String);
      for (t1 = parser.lines; !A.BlockSyntax_isAtBlockEnd(parser);) {
        childLines.push(t1[parser._pos]);
        ++parser._pos;
      }
      paragraphLines = this._extractReflinkDefinitions$2(parser, childLines);
      if (paragraphLines == null)
        return new A.Text0("");
      else {
        t1 = type$.String;
        return new A.Element("p", B._setArrayType([new A.UnparsedContent(C.JSString_methods.trimRight$0(C.JSArray_methods.join$1(paragraphLines, "\n")))], type$.JSArray_Node), B.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      }
    },
    _extractReflinkDefinitions$2(parser, lines) {
      var i, contents, j, t1, t2, t3,
        lineStartsReflinkDefinition = new A.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition(lines);
      $label0$0:
        for (i = 0; true; i = j) {
          if (!lineStartsReflinkDefinition.call$1(i))
            break $label0$0;
          contents = lines[i];
          j = i + 1;
          for (; j < lines.length;)
            if (lineStartsReflinkDefinition.call$1(j))
              if (this._parseReflinkDefinition$2(parser, contents))
                continue $label0$0;
              else
                break;
            else {
              contents = contents + "\n" + lines[j];
              ++j;
            }
          if (this._parseReflinkDefinition$2(parser, contents)) {
            i = j;
            break $label0$0;
          }
          for (t1 = B._arrayInstanceType(lines), t2 = t1._precomputed1, t1 = t1._eval$1("SubListIterable<1>"); j >= i;) {
            B.RangeError_checkValidRange(i, j, lines.length, null, null);
            t3 = new B.SubListIterable(lines, i, j, t1);
            t3.SubListIterable$3(lines, i, j, t2);
            if (this._parseReflinkDefinition$2(parser, t3.join$1(0, "\n"))) {
              i = j;
              break;
            }
            --j;
          }
          break $label0$0;
        }
      if (i === lines.length)
        return null;
      else
        return C.JSArray_methods.sublist$1(lines, i);
    },
    _parseReflinkDefinition$2(parser, contents) {
      var t2, t3, destination, t4, title, label, t1 = {},
        match = B.RegExp_RegExp("^[ ]{0,3}\\[((?:\\\\\\]|[^\\]])+)\\]:\\s*(?:<(\\S+)>|(\\S+))\\s*(\"[^\"]+\"|'[^']+'|\\([^)]+\\)|)\\s*$", true, true).firstMatch$1(contents);
      if (match == null)
        return false;
      t2 = match._match;
      if (t2[0].length < contents.length)
        return false;
      t3 = t2[1];
      t3.toString;
      t1.label = t3;
      destination = t2[2];
      if (destination == null) {
        t4 = t2[3];
        t4.toString;
        destination = t4;
      }
      title = t1.title = t2[4];
      t2 = $.$get$ParagraphSyntax__whitespacePattern()._nativeRegExp;
      if (t2.test(t3))
        return false;
      if (title === "")
        t1.title = null;
      else
        t1.title = C.JSString_methods.substring$2(title, 1, title.length - 1);
      t2 = C.JSString_methods.trim$0(t3);
      t3 = $.$get$_oneOrMoreWhitespacePattern();
      label = B.stringReplaceAllUnchecked(t2, t3, " ").toLowerCase();
      t1.label = label;
      parser.document.linkReferences.putIfAbsent$2(0, label, new A.ParagraphSyntax__parseReflinkDefinition_closure(t1, destination));
      return true;
    }
  };
  A.Document.prototype = {
    _parseInlineContent$1(nodes) {
      var t1, t2, t3, t4, i, node, t5, t6, t7, t8, inlineNodes, _this = this, _null = null;
      for (t1 = J.getInterceptor$asx(nodes), t2 = type$.JSArray_InlineSyntax, t3 = type$.JSArray_Delimiter, t4 = type$.JSArray_Node, i = 0; i < t1.get$length(nodes); ++i) {
        node = t1.$index(nodes, i);
        if (node instanceof A.UnparsedContent) {
          t5 = node.textContent;
          t6 = B._setArrayType([], t2);
          t7 = B._setArrayType([], t3);
          t8 = B._setArrayType([], t4);
          C.JSArray_methods.addAll$1(t6, _this._inlineSyntaxes);
          if (_this.hasCustomInlineSyntaxes)
            t6.push(new A.TextSyntax("", B.RegExp_RegExp("[A-Za-z0-9]+(?=\\s)", true, true), _null));
          else
            t6.push(new A.TextSyntax("", B.RegExp_RegExp("[ \\tA-Za-z0-9]*[A-Za-z0-9](?=\\s)", true, true), _null));
          C.JSArray_methods.addAll$1(t6, B._setArrayType([A.LinkSyntax$(_null, "\\[", 91), A.ImageSyntax$(_null)], t2));
          C.JSArray_methods.addAll$1(t6, $.$get$InlineParser__defaultSyntaxes());
          inlineNodes = new A.InlineParser(t5, _this, t6, t7, t8).parse$0(0);
          t1.removeAt$1(nodes, i);
          t1.insertAll$2(nodes, i, inlineNodes);
          i += inlineNodes.length - 1;
        } else if (node instanceof A.Element && node.children != null) {
          t5 = node.children;
          t5.toString;
          _this._parseInlineContent$1(t5);
        }
      }
    }
  };
  A.LinkReference.prototype = {};
  A.ExtensionSet.prototype = {};
  A.InlineParser.prototype = {
    parse$0(_) {
      var t1, t2, t3, t4, _this = this;
      for (t1 = _this.source, t2 = t1.length, t3 = _this.syntaxes; t4 = _this.pos, t4 !== t2;) {
        if (C.JSString_methods.codeUnitAt$1(t1, t4) === 93) {
          _this.writeText$0(0);
          _this._linkOrImage$0();
          continue;
        }
        if (C.JSArray_methods.any$1(t3, new A.InlineParser_parse_closure(_this)))
          continue;
        ++_this.pos;
      }
      _this.writeText$0(0);
      _this._processEmphasis$1(-1);
      t1 = _this._tree;
      _this._combineAdjacentText$1(t1);
      return t1;
    },
    _linkOrImage$0() {
      var delimiter, syntax, t2, nodeIndex, linkNode, t3, _i, d, _this = this,
        t1 = _this._delimiterStack,
        index = C.JSArray_methods.lastIndexWhere$1(t1, new A.InlineParser__linkOrImage_closure());
      if (index === -1) {
        _this._tree.push(new A.Text0("]"));
        _this.start = ++_this.pos;
        return;
      }
      delimiter = type$.SimpleDelimiter._as(t1[index]);
      if (!delimiter.isActive) {
        C.JSArray_methods.removeAt$1(t1, index);
        _this._tree.push(new A.Text0("]"));
        _this.start = ++_this.pos;
        return;
      }
      syntax = delimiter.syntax;
      if (syntax instanceof A.LinkSyntax && C.JSArray_methods.any$1(_this.syntaxes, new A.InlineParser__linkOrImage_closure0())) {
        t2 = _this._tree;
        nodeIndex = C.JSArray_methods.lastIndexWhere$1(t2, new A.InlineParser__linkOrImage_closure1(delimiter));
        linkNode = syntax.close$4$getChildren(0, _this, delimiter, null, new A.InlineParser__linkOrImage_closure2(_this, index, nodeIndex));
        if (linkNode != null) {
          C.JSArray_methods.removeAt$1(t1, index);
          if (delimiter.char === 91)
            for (t1 = C.JSArray_methods.sublist$2(t1, 0, index), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
              d = t1[_i];
              if (d.get$char() === 91)
                d.set$isActive(false);
            }
          t2[nodeIndex] = linkNode;
          _this.start = ++_this.pos;
        } else {
          C.JSArray_methods.removeAt$1(t1, index);
          t1 = _this.start;
          _this.pos = t1;
          _this.pos = t1 + 1;
        }
      } else
        throw B.wrapException(B.StateError$('Non-link syntax delimiter found with character "' + delimiter.char + '"'));
    },
    _canFormEmphasis$2($opener, closer) {
      var t1;
      if (!($opener.get$canOpen() && $opener.get$canClose()))
        t1 = closer.get$canOpen() && closer.get$canClose();
      else
        t1 = true;
      if (t1) {
        if (C.JSInt_methods.$mod($opener.get$length($opener) + closer.get$length(closer), 3) === 0)
          t1 = C.JSInt_methods.$mod($opener.get$length($opener), 3) === 0 && C.JSInt_methods.$mod(closer.get$length(closer), 3) === 0;
        else
          t1 = true;
        return t1;
      } else
        return true;
    },
    _processEmphasis$1(bottomIndex) {
      var t1, t2, t3, currentIndex0, t4, _box_0, closer, t5, openerBottom, t6, openerIndex, $opener, strong, openerTextNode, openerTextNodeIndex, closerTextNode, node, currentIndex1, newOpenerTextNode, newCloserTextNode, _this = this,
        currentIndex = bottomIndex + 1,
        openersBottom = B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.List_int);
      for (t1 = _this._delimiterStack, t2 = _this._tree, t3 = type$.JSArray_Node, currentIndex0 = currentIndex; t4 = t1.length, currentIndex0 < t4;) {
        _box_0 = {};
        closer = t1[currentIndex0];
        if (!closer.get$canClose()) {
          ++currentIndex0;
          continue;
        }
        if (closer.get$char() === 91 || closer.get$char() === 33) {
          ++currentIndex0;
          continue;
        }
        openersBottom.putIfAbsent$2(0, closer.get$char(), new A.InlineParser__processEmphasis_closure(bottomIndex));
        t4 = openersBottom.$index(0, closer.get$char());
        t4.toString;
        t5 = J.getInterceptor$asx(t4);
        openerBottom = t5.$index(t4, C.JSInt_methods.$mod(closer.get$length(closer), 3));
        t6 = currentIndex0 - 1;
        openerIndex = C.JSArray_methods.lastIndexWhere$2(t1, new A.InlineParser__processEmphasis_closure0(_this, closer), t6);
        if (openerIndex > bottomIndex && openerIndex > openerBottom) {
          $opener = t1[openerIndex];
          strong = $opener.get$length($opener) >= 2 && closer.get$length(closer) >= 2;
          openerTextNode = $opener.get$node();
          openerTextNodeIndex = C.JSArray_methods.indexOf$1(t2, openerTextNode);
          closerTextNode = closer.get$node();
          _box_0.closerTextNodeIndex = C.JSArray_methods.indexOf$1(t2, closerTextNode);
          node = $opener.get$syntax().close$4$getChildren(0, _this, $opener, closer, new A.InlineParser__processEmphasis_closure1(_box_0, _this, openerTextNodeIndex));
          t4 = _box_0.closerTextNodeIndex;
          node.toString;
          C.JSArray_methods.replaceRange$3(t2, openerTextNodeIndex + 1, t4, B._setArrayType([node], t3));
          _box_0.closerTextNodeIndex = openerTextNodeIndex + 2;
          currentIndex1 = openerIndex + 1;
          if (!!t1.fixed$length)
            B.throwExpression(B.UnsupportedError$("removeRange"));
          B.RangeError_checkValidRange(currentIndex1, currentIndex0, t1.length, null, null);
          t1.splice(currentIndex1, currentIndex0 - currentIndex1);
          if (!(strong && openerTextNode.text.length === 2))
            t4 = !strong && openerTextNode.text.length === 1;
          else
            t4 = true;
          if (t4) {
            C.JSArray_methods.removeAt$1(t2, openerTextNodeIndex);
            C.JSArray_methods.removeAt$1(t1, openerIndex);
            currentIndex0 = currentIndex1 - 1;
            --_box_0.closerTextNodeIndex;
          } else {
            t4 = strong ? 2 : 1;
            newOpenerTextNode = new A.Text0(C.JSString_methods.substring$1(openerTextNode.text, t4));
            t2[openerTextNodeIndex] = newOpenerTextNode;
            $opener.set$node(newOpenerTextNode);
            currentIndex0 = currentIndex1;
          }
          if (!(strong && closerTextNode.text.length === 2))
            t4 = !strong && closerTextNode.text.length === 1;
          else
            t4 = true;
          if (t4) {
            C.JSArray_methods.removeAt$1(t2, _box_0.closerTextNodeIndex);
            C.JSArray_methods.removeAt$1(t1, currentIndex0);
          } else {
            t4 = strong ? 2 : 1;
            newCloserTextNode = new A.Text0(C.JSString_methods.substring$1(closerTextNode.text, t4));
            t2[_box_0.closerTextNodeIndex] = newCloserTextNode;
            closer.set$node(newCloserTextNode);
          }
        } else {
          t5.$indexSet(t4, C.JSInt_methods.$mod(closer.get$length(closer), 3), t6);
          if (!closer.get$canOpen())
            C.JSArray_methods.removeAt$1(t1, currentIndex0);
          else
            ++currentIndex0;
        }
      }
      C.JSArray_methods.removeRange$2(t1, currentIndex, t4);
    },
    _combineAdjacentText$1(nodes) {
      var t1, i, node, t2, t3, j;
      for (t1 = J.getInterceptor$asx(nodes), i = 0; i < t1.get$length(nodes) - 1; ++i) {
        node = t1.$index(nodes, i);
        if (node instanceof A.Element && node.children != null) {
          t2 = node.children;
          t2.toString;
          this._combineAdjacentText$1(t2);
          continue;
        }
        if (node instanceof A.Text0 && t1.$index(nodes, i + 1) instanceof A.Text0) {
          t2 = i + 1;
          t3 = node.text + t1.$index(nodes, t2).get$textContent();
          j = i + 2;
          while (true) {
            if (!(j < t1.get$length(nodes) && t1.$index(nodes, j) instanceof A.Text0))
              break;
            t3 += t1.$index(nodes, j).get$textContent();
            ++j;
          }
          t1.$indexSet(nodes, i, new A.Text0(t3.charCodeAt(0) == 0 ? t3 : t3));
          t1.removeRange$2(nodes, t2, j);
        }
      }
    },
    writeText$0(_) {
      var _this = this,
        t1 = _this.pos,
        t2 = _this.start;
      if (t1 === t2)
        return;
      _this._tree.push(new A.Text0(C.JSString_methods.substring$2(_this.source, t2, t1)));
      _this.start = _this.pos;
    },
    consume$1($length) {
      var t1 = this.pos += $length;
      this.start = t1;
    }
  };
  A.InlineSyntax.prototype = {
    tryMatch$2(parser, startMatchPos) {
      var t1, startMatch;
      if (startMatchPos == null)
        startMatchPos = parser.pos;
      t1 = this._startCharacter;
      if (t1 != null && C.JSString_methods.codeUnitAt$1(parser.source, startMatchPos) !== t1)
        return false;
      startMatch = this.pattern.matchAsPrefix$2(0, parser.source, startMatchPos);
      if (startMatch == null)
        return false;
      parser.writeText$0(0);
      if (this.onMatch$2(parser, startMatch))
        parser.consume$1(startMatch._match[0].length);
      return true;
    },
    tryMatch$1(parser) {
      return this.tryMatch$2(parser, null);
    }
  };
  A.LineBreakSyntax.prototype = {
    onMatch$2(parser, match) {
      var t1 = type$.String;
      parser._tree.push(new A.Element("br", null, B.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
      return true;
    }
  };
  A.TextSyntax.prototype = {
    onMatch$2(parser, match) {
      var t2, t3,
        t1 = this.substitute;
      if (t1.length !== 0) {
        t2 = match._match;
        t3 = t2.index;
        t2 = t3 > 0 && C.JSString_methods.substring$2(t2.input, t3 - 1, t3) === "/";
      } else
        t2 = true;
      if (t2) {
        parser.pos += match._match[0].length;
        return false;
      }
      parser._tree.push(new A.Text0(t1));
      return true;
    }
  };
  A.EscapeSyntax.prototype = {
    onMatch$2(parser, match) {
      var t1 = match._match[0];
      t1.toString;
      C.JSString_methods._codeUnitAt$1(t1, 1);
      parser._tree.push(new A.Text0(t1[1]));
      return true;
    }
  };
  A.InlineHtmlSyntax.prototype = {};
  A.EmailAutolinkSyntax.prototype = {
    onMatch$2(parser, match) {
      var t2, t3,
        t1 = match._match[1];
      t1.toString;
      t2 = B._setArrayType([new A.Text0(t1)], type$.JSArray_Node);
      t3 = type$.String;
      t3 = B.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
      t3.$indexSet(0, "href", B._Uri__uriEncode(C.List_gnE, "mailto:" + t1, C.C_Utf8Codec, false));
      parser._tree.push(new A.Element("a", t2, t3));
      return true;
    }
  };
  A.AutolinkSyntax.prototype = {
    onMatch$2(parser, match) {
      var t2, t3,
        t1 = match._match[1];
      t1.toString;
      t2 = B._setArrayType([new A.Text0(t1)], type$.JSArray_Node);
      t3 = type$.String;
      t3 = B.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
      t3.$indexSet(0, "href", B._Uri__uriEncode(C.List_gnE, t1, C.C_Utf8Codec, false));
      parser._tree.push(new A.Element("a", t2, t3));
      return true;
    }
  };
  A.AutolinkExtensionSyntax.prototype = {
    tryMatch$1(parser) {
      var t1 = parser.pos;
      return this.super$InlineSyntax$tryMatch(parser, t1 > 0 ? t1 - 1 : 0);
    },
    onMatch$2(parser, match) {
      var href, opening, trailingPunc, trailingLength, entityRef, entityRefLength, t1, t2,
        url = match._match[1],
        matchLength = url.length;
      if (url[0] === ">" || C.JSString_methods.startsWith$1(url, $.$get$AutolinkExtensionSyntax_regExpWhiteSpace())) {
        --matchLength;
        url = C.JSString_methods.substring$2(url, 1, matchLength);
        ++parser.pos;
        href = url;
      } else
        href = url;
      if (C.JSString_methods.endsWith$1(url, ">") && parser.source[parser.pos - 1] === "<")
        return false;
      if (C.JSString_methods.endsWith$1(url, ")")) {
        opening = this._countChars$2(url, "(");
        if (this._countChars$2(url, ")") > opening) {
          url = C.JSString_methods.substring$2(url, 0, url.length - 1);
          href = C.JSString_methods.substring$2(href, 0, href.length - 1);
          --matchLength;
        }
      }
      trailingPunc = $.$get$AutolinkExtensionSyntax_regExpTrailingPunc().firstMatch$1(url);
      if (trailingPunc != null) {
        trailingLength = trailingPunc._match[0].length;
        url = C.JSString_methods.substring$2(url, 0, url.length - trailingLength);
        href = C.JSString_methods.substring$2(href, 0, href.length - trailingLength);
        matchLength -= trailingLength;
      }
      if (C.JSString_methods.endsWith$1(url, ";")) {
        entityRef = $.$get$AutolinkExtensionSyntax_regExpEndsWithColon().firstMatch$1(url);
        if (entityRef != null) {
          entityRefLength = entityRef._match[0].length;
          url = C.JSString_methods.substring$2(url, 0, url.length - entityRefLength);
          href = C.JSString_methods.substring$2(href, 0, href.length - entityRefLength);
          matchLength -= entityRefLength;
        }
      }
      if (!C.JSString_methods.startsWith$1(href, "http://") && !C.JSString_methods.startsWith$1(href, "https://") && !C.JSString_methods.startsWith$1(href, "ftp://"))
        href = "http://" + href;
      t1 = B._setArrayType([new A.Text0(url)], type$.JSArray_Node);
      t2 = type$.String;
      t2 = B.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      t2.$indexSet(0, "href", B._Uri__uriEncode(C.List_gnE, href, C.C_Utf8Codec, false));
      parser._tree.push(new A.Element("a", t1, t2));
      parser.consume$1(matchLength);
      return false;
    },
    _countChars$2(input, char) {
      var t1, count, i;
      for (t1 = input.length, count = 0, i = 0; i < t1; ++i)
        if (input[i] === char)
          ++count;
      return count;
    }
  };
  A.SimpleDelimiter.prototype = {$isDelimiter: 1,
    get$node() {
      return this.node;
    },
    get$char() {
      return this.char;
    },
    get$length(receiver) {
      return this.length;
    },
    get$canOpen() {
      return this.canOpen;
    },
    get$canClose() {
      return this.canClose;
    },
    get$syntax() {
      return this.syntax;
    },
    set$node(val) {
      return this.node = val;
    },
    set$isActive(val) {
      return this.isActive = val;
    }
  };
  A.DelimiterRun.prototype = {
    get$length(_) {
      return this.node.text.length;
    },
    toString$0(_) {
      var _this = this;
      return "<char: " + _this.char + ", length: " + _this.node.text.length + ", canOpen: " + _this.canOpen + ", canClose: " + _this.canClose + ">";
    },
    $isDelimiter: 1,
    get$node() {
      return this.node;
    },
    get$char() {
      return this.char;
    },
    get$syntax() {
      return this.syntax;
    },
    get$canOpen() {
      return this.canOpen;
    },
    get$canClose() {
      return this.canClose;
    },
    set$node(val) {
      return this.node = val;
    },
    set$isActive() {
    }
  };
  A.TagSyntax.prototype = {
    onMatch$2(parser, match) {
      var delimiterRun, _this = this,
        runLength = match._match[0].length,
        matchStart = parser.pos,
        matchEnd = matchStart + runLength,
        t1 = parser.source,
        text = new A.Text0(C.JSString_methods.substring$2(t1, matchStart, matchEnd));
      if (!_this.requiresDelimiterRun) {
        parser._delimiterStack.push(new A.SimpleDelimiter(text, C.JSString_methods.codeUnitAt$1(t1, matchStart), runLength, true, false, _this, matchEnd));
        parser._tree.push(text);
        return true;
      }
      delimiterRun = A.DelimiterRun_tryParse(parser, matchStart, matchEnd, _this.allowIntraWord, text, _this);
      if (delimiterRun != null) {
        parser._delimiterStack.push(delimiterRun);
        parser._tree.push(text);
        return true;
      } else {
        parser.pos += runLength;
        return false;
      }
    },
    close$4$getChildren(_, parser, $opener, closer, getChildren) {
      var t1 = $opener.get$length($opener) >= 2 && closer.get$length(closer) >= 2 ? "strong" : "em",
        t2 = type$.String;
      return new A.Element(t1, getChildren.call$0(), B.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    }
  };
  A.StrikethroughSyntax.prototype = {
    close$4$getChildren(_, parser, $opener, closer, getChildren) {
      var t1 = type$.String;
      return new A.Element("del", getChildren.call$0(), B.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    }
  };
  A.LinkSyntax.prototype = {
    close$4$getChildren(_, parser, $opener, closer, getChildren) {
      var t3, char, inlineLink, label, _this = this,
        t1 = parser.source,
        t2 = parser.pos,
        text = C.JSString_methods.substring$2(t1, $opener.endPos, t2);
      ++t2;
      t3 = t1.length;
      if (t2 >= t3)
        return _this._resolveReferenceLink$3$getChildren(text, parser.document.linkReferences, getChildren);
      char = C.JSString_methods.codeUnitAt$1(t1, t2);
      if (char === 40) {
        parser.pos = t2;
        inlineLink = _this._parseInlineLink$1(parser);
        if (inlineLink != null)
          return _this._createNode$3$getChildren(inlineLink.destination, inlineLink.title, getChildren);
        parser.pos = t2;
        parser.pos = t2 + -1;
        return _this._resolveReferenceLink$3$getChildren(text, parser.document.linkReferences, getChildren);
      }
      if (char === 91) {
        parser.pos = t2;
        ++t2;
        if (t2 < t3 && C.JSString_methods.codeUnitAt$1(t1, t2) === 93) {
          parser.pos = t2;
          return _this._resolveReferenceLink$3$getChildren(text, parser.document.linkReferences, getChildren);
        }
        label = _this._parseReferenceLinkLabel$1(parser);
        if (label != null)
          return _this._resolveReferenceLink$3$getChildren(label, parser.document.linkReferences, getChildren);
        return null;
      }
      return _this._resolveReferenceLink$3$getChildren(text, parser.document.linkReferences, getChildren);
    },
    _resolveReferenceLink$3$getChildren(label, linkReferences, getChildren) {
      var resolved,
        t1 = C.JSString_methods.trim$0(label),
        t2 = $.$get$_oneOrMoreWhitespacePattern(),
        linkReference = linkReferences.$index(0, B.stringReplaceAllUnchecked(t1, t2, " ").toLowerCase());
      if (linkReference != null)
        return this._createNode$3$getChildren(linkReference.destination, linkReference.title, getChildren);
      else {
        t1 = B.stringReplaceAllUnchecked(label, "\\\\", "\\");
        t1 = B.stringReplaceAllUnchecked(t1, "\\[", "[");
        resolved = this.linkResolver.call$1(B.stringReplaceAllUnchecked(t1, "\\]", "]"));
        if (resolved != null)
          getChildren.call$0();
        return resolved;
      }
    },
    _createNode$3$getChildren(destination, title, getChildren) {
      var children = getChildren.call$0(),
        t1 = type$.String;
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t1.$indexSet(0, "href", A.escapeAttribute(destination));
      if (title != null && title.length !== 0)
        t1.$indexSet(0, "title", A.escapeAttribute(title));
      return new A.Element("a", children, t1);
    },
    _parseReferenceLinkLabel$1(parser) {
      var t4, char, next, label, _null = null,
        t1 = ++parser.pos,
        t2 = parser.source,
        t3 = t2.length;
      if (t1 === t3)
        return _null;
      for (t4 = ""; true;) {
        char = C.JSString_methods.codeUnitAt$1(t2, t1);
        if (char === 92) {
          t1 = parser.pos = t1 + 1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          if (next !== 92 && next !== 93)
            t4 += B.Primitives_stringFromCharCode(char);
          t4 += B.Primitives_stringFromCharCode(next);
        } else if (char === 91)
          return _null;
        else if (char === 93)
          break;
        else
          t4 += B.Primitives_stringFromCharCode(char);
        t1 = parser.pos = t1 + 1;
        if (t1 === t3)
          return _null;
      }
      label = t4.charCodeAt(0) == 0 ? t4 : t4;
      t1 = $.$get$LinkSyntax__entirelyWhitespacePattern()._nativeRegExp;
      if (t1.test(label))
        return _null;
      return label;
    },
    _parseInlineLink$1(parser) {
      var t1, t2;
      ++parser.pos;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      t2 = parser.source;
      if (t1 === t2.length)
        return null;
      if (C.JSString_methods.codeUnitAt$1(t2, t1) === 60)
        return this._parseInlineBracketedLink$1(parser);
      else
        return this._parseInlineBareDestinationLink$1(parser);
    },
    _parseInlineBracketedLink$1(parser) {
      var t2, t3, t4, char, next, destination, title, _null = null,
        t1 = ++parser.pos;
      for (t2 = parser.source, t3 = t2.length, t4 = ""; true;) {
        char = C.JSString_methods.codeUnitAt$1(t2, t1);
        if (char === 92) {
          t1 = parser.pos = t1 + 1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          if (next !== 92 && next !== 62)
            t4 += B.Primitives_stringFromCharCode(char);
          t4 += B.Primitives_stringFromCharCode(next);
        } else if (char === 10 || char === 13 || char === 12)
          return _null;
        else if (char === 32)
          t4 += "%20";
        else if (char === 62)
          break;
        else
          t4 += B.Primitives_stringFromCharCode(char);
        t1 = parser.pos = t1 + 1;
        if (t1 === t3)
          return _null;
      }
      destination = t4.charCodeAt(0) == 0 ? t4 : t4;
      ++t1;
      parser.pos = t1;
      char = C.JSString_methods.codeUnitAt$1(t2, t1);
      if (char === 32 || char === 10 || char === 13 || char === 12) {
        title = this._parseTitle$1(parser);
        if (title == null && C.JSString_methods.codeUnitAt$1(t2, parser.pos) !== 41)
          return _null;
        return new A.InlineLink(destination, title);
      } else if (char === 41)
        return new A.InlineLink(destination, _null);
      else
        return _null;
    },
    _parseInlineBareDestinationLink$1(parser) {
      var t1, t2, parenCount, t3, t4, char, next, destination, title, _null = null;
      for (t1 = parser.source, t2 = t1.length, parenCount = 1, t3 = ""; true;) {
        t4 = parser.pos;
        char = C.JSString_methods.codeUnitAt$1(t1, t4);
        switch (char) {
          case 92:
            t4 = parser.pos = t4 + 1;
            if (t4 === t2)
              return _null;
            next = C.JSString_methods.codeUnitAt$1(t1, t4);
            if (next !== 92 && next !== 40 && next !== 41)
              t3 += B.Primitives_stringFromCharCode(char);
            t3 += B.Primitives_stringFromCharCode(next);
            break;
          case 32:
          case 10:
          case 13:
          case 12:
            destination = t3.charCodeAt(0) == 0 ? t3 : t3;
            title = this._parseTitle$1(parser);
            if (title == null) {
              t4 = parser.pos;
              t4 = t4 === t2 || C.JSString_methods.codeUnitAt$1(t1, t4) !== 41;
            } else
              t4 = false;
            if (t4)
              return _null;
            --parenCount;
            if (parenCount === 0)
              return new A.InlineLink(destination, title);
            break;
          case 40:
            ++parenCount;
            t3 += B.Primitives_stringFromCharCode(char);
            break;
          case 41:
            --parenCount;
            if (parenCount === 0)
              return new A.InlineLink(t3.charCodeAt(0) == 0 ? t3 : t3, _null);
            t3 += B.Primitives_stringFromCharCode(char);
            break;
          default:
            t3 += B.Primitives_stringFromCharCode(char);
        }
        if (++parser.pos === t2)
          return _null;
      }
    },
    _moveThroughWhitespace$1(parser) {
      var t1, t2, t3, char;
      for (t1 = parser.source, t2 = t1.length; t3 = parser.pos, t3 !== t2;) {
        char = C.JSString_methods.codeUnitAt$1(t1, t3);
        if (char !== 32 && char !== 9 && char !== 10 && char !== 11 && char !== 13 && char !== 12)
          return;
        parser.pos = t3 + 1;
      }
    },
    _parseTitle$1(parser) {
      var t1, t2, t3, delimiter, closeDelimiter, t4, char, next, _null = null;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      t2 = parser.source;
      t3 = t2.length;
      if (t1 === t3)
        return _null;
      delimiter = C.JSString_methods.codeUnitAt$1(t2, t1);
      if (delimiter !== 39 && delimiter !== 34 && delimiter !== 40)
        return _null;
      closeDelimiter = delimiter === 40 ? 41 : delimiter;
      ++t1;
      parser.pos = t1;
      for (t4 = ""; true;) {
        char = C.JSString_methods.codeUnitAt$1(t2, t1);
        if (char === 92) {
          t1 = parser.pos = t1 + 1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          if (next !== 92 && next !== closeDelimiter)
            t4 += B.Primitives_stringFromCharCode(char);
          t4 += B.Primitives_stringFromCharCode(next);
        } else if (char === closeDelimiter)
          break;
        else
          t4 += B.Primitives_stringFromCharCode(char);
        t1 = parser.pos = t1 + 1;
        if (t1 === t3)
          return _null;
      }
      ++t1;
      parser.pos = t1;
      if (t1 === t3)
        return _null;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      if (t1 === t3)
        return _null;
      if (C.JSString_methods.codeUnitAt$1(t2, t1) !== 41)
        return _null;
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    }
  };
  A.ImageSyntax.prototype = {
    _createNode$3$getChildren(destination, title, getChildren) {
      var t1 = type$.String,
        t2 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        children = getChildren.call$0();
      t2.$indexSet(0, "src", destination);
      t2.$indexSet(0, "alt", J.map$1$1$ax(children, new A.ImageSyntax__createNode_closure(), t1).join$0(0));
      if (title != null && title.length !== 0)
        t2.$indexSet(0, "title", A.escapeAttribute(B.stringReplaceAllUnchecked(title, "&", "&amp;")));
      return new A.Element("img", null, t2);
    }
  };
  A.CodeSyntax.prototype = {
    tryMatch$1(parser) {
      var match,
        t1 = parser.pos;
      if (t1 > 0 && C.JSString_methods.codeUnitAt$1(parser.source, t1 - 1) === 96)
        return false;
      match = this.pattern.matchAsPrefix$2(0, parser.source, t1);
      if (match == null)
        return false;
      parser.writeText$0(0);
      this.onMatch$2(parser, match);
      parser.consume$1(match._match[0].length);
      return true;
    },
    onMatch$2(parser, match) {
      var code,
        t1 = match._match[2];
      t1.toString;
      t1 = C.JSString_methods.trim$0(t1);
      code = B.stringReplaceAllUnchecked(t1, "\n", " ");
      t1 = type$.String;
      parser._tree.push(new A.Element("code", B._setArrayType([new A.Text0(code)], type$.JSArray_Node), B.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
      return true;
    }
  };
  A.InlineLink.prototype = {};
  var typesOffset = hunkHelpers.updateTypes(["~()", "~(DragStartDetails)", "~(DragUpdateDetails)", "Widget(BuildContext)", "String(Node0)", "bool(BlockSyntax)", "bool(InlineSyntax)", "bool(Delimiter)", "List<Node0>()", "TextEditingValue(TextEditingValue,TextInputFormatter)", "~(ImageInfo,bool)", "bool(TableRow)", "Decoration?(TableRow)", "_TableElementRow(TableRow)", "bool(_TableElementRow)", "Iterable<RenderBox>(_TableElementRow)", "List<Element0>(_TableElementRow)", "MarkdownStyleSheet(BuildContext,MarkdownStyleSheetBaseTheme?)", "String?(Node0)", "~(ListItem)", "LinkReference()", "bool(Node0)", "Future<Map<String,List<String>>?>(String?)"]);
  A.AssetImage_obtainKey_closure.prototype = {
    call$1(manifest) {
      var key, _this = this,
        t1 = _this.$this,
        t2 = t1.get$keyName(),
        t3 = manifest == null ? null : J.$index$asx(manifest, t1.get$keyName());
      t3 = t1._chooseVariant$3(t2, _this.configuration, t3);
      t3.toString;
      key = new A.AssetBundleImageKey(_this.chosenBundle, t3, t1._parseScale$1(t3));
      t1 = _this._box_0;
      t2 = t1.completer;
      if (t2 != null)
        t2.complete$1(0, key);
      else
        t1.result = new B.SynchronousFuture(key, type$.SynchronousFuture_AssetBundleImageKey);
    },
    $signature: 388
  };
  A.AssetImage_obtainKey_closure0.prototype = {
    call$2(error, stack) {
      this._box_0.completer.completeError$2(error, stack);
    },
    $signature: 28
  };
  A.RenderEditable_getRectForComposingRange_closure.prototype = {
    call$2(accum, incoming) {
      var t1 = accum == null ? null : accum.expandToInclude$1(new B.Rect(incoming.left, incoming.top, incoming.right, incoming.bottom));
      return t1 == null ? new B.Rect(incoming.left, incoming.top, incoming.right, incoming.bottom) : t1;
    },
    $signature: 389
  };
  A.RenderFollowerLayer_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 10
  };
  A.RenderTable_computeDryLayout_closure.prototype = {
    call$2(a, b) {
      return a + b;
    },
    $signature: 390
  };
  A.RenderTable_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.child.hitTest$2$position(result, transformed);
    },
    $signature: 10
  };
  A.FilteringTextInputFormatter__processRegion_adjustIndex.prototype = {
    call$1(originalIndex) {
      var _this = this,
        t1 = _this.regionStart,
        replacedLength = originalIndex <= t1 && originalIndex < _this.regionEnd ? 0 : _this.replacementString.length;
      return replacedLength - (C.JSInt_methods.clamp$2(originalIndex, t1, _this.regionEnd) - t1);
    },
    $signature: 56
  };
  A.EditableTextState__scheduleShowCaretOnScreen_closure.prototype = {
    call$1(_) {
      var t2, t3, t4, lineHeight, handleHeight, interactiveHandleHeight, bottomSpacing, caretPadding, targetOffset, t5,
        t1 = this.$this;
      t1._showCaretOnScreenScheduled = false;
      if (t1._currentCaretRect == null || t1.get$_scrollController()._positions.length === 0)
        return;
      t2 = t1._editableKey;
      t3 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2).get$renderObject();
      t3.toString;
      t4 = type$.RenderEditable;
      lineHeight = t4._as(t3)._editable$_textPainter.get$preferredLineHeight();
      t1._widget.toString;
      t3 = t1._selectionOverlay;
      if ((t3 == null ? null : t3.selectionControls) != null) {
        handleHeight = t3.selectionControls.getHandleSize$1(lineHeight)._dy;
        interactiveHandleHeight = Math.max(handleHeight, 48);
        bottomSpacing = Math.max(handleHeight / 2 - t1._selectionOverlay.selectionControls.getHandleAnchor$2(D.TextSelectionHandleType_2, lineHeight)._dy + interactiveHandleHeight / 2, 20);
      } else
        bottomSpacing = 20;
      t1._widget.toString;
      caretPadding = D.EdgeInsets_20_20_20_20.copyWith$1$bottom(bottomSpacing);
      t3 = t1._currentCaretRect;
      t3.toString;
      targetOffset = t1._getOffsetToRevealCaret$1(t3);
      t3 = targetOffset.offset;
      t5 = targetOffset.rect;
      if (this.withAnimation) {
        t1.get$_scrollController().animateTo$3$curve$duration(t3, C.Cubic_ifx, C.Duration_100000);
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2).get$renderObject();
        t1.toString;
        t4._as(t1).showOnScreen$3$curve$duration$rect(C.Cubic_ifx, C.Duration_100000, caretPadding.inflateRect$1(t5));
      } else {
        t1.get$_scrollController().jumpTo$1(t3);
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2).get$renderObject();
        t1.toString;
        t4._as(t1).showOnScreen$1$rect(caretPadding.inflateRect$1(t5));
      }
    },
    $signature: 2
  };
  A.EditableTextState__formatAndSetValue_closure.prototype = {
    call$2(newValue, formatter) {
      return formatter.formatEditUpdate$2(this.$this._widget.controller._change_notifier$_value, newValue);
    },
    $signature: typesOffset + 9
  };
  A.EditableTextState__startCursorBlink_closure.prototype = {
    call$1(timer) {
      this.$this._onCursorTick$0();
    },
    $signature: 64
  };
  A.EditableTextState__onCursorTick_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.EditableTextState__onCursorTick_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.get$_cursorBlinkOpacityController().animateWith$1(t1.get$_iosBlinkCursorSimulation())._primaryCompleter.future.whenComplete$1(t1.get$_onCursorTick());
    },
    $signature: 0
  };
  A.EditableTextState__onCursorTick_closure1.prototype = {
    call$1(timer) {
      this.$this._onCursorTick$0();
    },
    $signature: 64
  };
  A.EditableTextState__updateSizeAndTransform_closure.prototype = {
    call$1(_) {
      return this.$this._updateSizeAndTransform$0();
    },
    $signature: 2
  };
  A.EditableTextState__updateComposingRectIfNeeded_closure.prototype = {
    call$1(_) {
      return this.$this._updateComposingRectIfNeeded$0();
    },
    $signature: 2
  };
  A.EditableTextState__updateCaretRectIfNeeded_closure.prototype = {
    call$1(_) {
      return this.$this._updateCaretRectIfNeeded$0();
    },
    $signature: 2
  };
  A.EditableTextState_insertTextPlaceholder_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget.controller._change_notifier$_value;
      t1._placeholderLocation = t2.text.length - t2.selection.end;
    },
    $signature: 0
  };
  A.EditableTextState_removeTextPlaceholder_closure.prototype = {
    call$0() {
      this.$this._placeholderLocation = -1;
    },
    $signature: 0
  };
  A.EditableTextState_showAutocorrectionPromptRect_closure.prototype = {
    call$0() {
      this.$this._currentPromptRectRange = new B.TextRange(this.start, this.end);
    },
    $signature: 0
  };
  A._ScribbleFocusableState_isInScribbleRect_closure.prototype = {
    call$1(entry) {
      return entry.target.$eq(0, this.$this.get$renderEditable());
    },
    $signature: 391
  };
  A._ImageState__handleImageFrame_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._replaceImage$1$info(this.imageInfo);
      t1._lastStack = t1._lastException = t1._loadingProgress = null;
      t2 = t1._frameNumber;
      t1._frameNumber = t2 == null ? 0 : t2 + 1;
      t1._wasSynchronouslyLoaded = C.JSBool_methods.$or(t1._wasSynchronouslyLoaded, this.synchronousCall);
    },
    $signature: 0
  };
  A._ImageState__updateSourceStream_closure.prototype = {
    call$0() {
      this.$this._replaceImage$1$info(null);
    },
    $signature: 0
  };
  A._ImageState__updateSourceStream_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._frameNumber = t1._loadingProgress = null;
      t1._wasSynchronouslyLoaded = false;
    },
    $signature: 0
  };
  A.ScrollAwareImageProvider_resolveStreamForKey_closure.prototype = {
    call$1(_) {
      var _this = this;
      B.scheduleMicrotask(new A.ScrollAwareImageProvider_resolveStreamForKey__closure(_this.$this, _this.configuration, _this.stream, _this.key, _this.handleError));
    },
    $signature: 2
  };
  A.ScrollAwareImageProvider_resolveStreamForKey__closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.resolveStreamForKey$4(_this.configuration, _this.stream, _this.key, _this.handleError);
    },
    $signature: 0
  };
  A.Table_closure.prototype = {
    call$1(row) {
      return row.decoration != null;
    },
    $signature: typesOffset + 11
  };
  A.Table_closure0.prototype = {
    call$1(row) {
      return row.decoration;
    },
    $signature: typesOffset + 12
  };
  A._TableElement_mount_closure.prototype = {
    call$1(row) {
      var t2, t3, t4, t1 = {};
      t1.columnIndex = 0;
      t2 = this._box_1;
      ++t2.rowIndex;
      t3 = row.children;
      t4 = B._arrayInstanceType(t3)._eval$1("MappedListIterable<1,Element0>");
      return new A._TableElementRow(null, B.List_List$of(new B.MappedListIterable(t3, new A._TableElement_mount__closure(t1, t2, this.$this), t4), false, t4._eval$1("ListIterable.E")));
    },
    $signature: typesOffset + 13
  };
  A._TableElement_mount__closure.prototype = {
    call$1(child) {
      return this.$this.inflateWidget$2(child, new A._TableSlot(this._box_0.columnIndex++, this._box_1.rowIndex));
    },
    $signature: 392
  };
  A._TableElement_update_closure.prototype = {
    call$1(row) {
      return true;
    },
    $signature: typesOffset + 14
  };
  A._TableElement_update_closure0.prototype = {
    call$1(list) {
      return !this.taken.contains$1(0, list);
    },
    $signature: 393
  };
  A._TableElement__updateRenderObjectChildren_closure.prototype = {
    call$1(row) {
      return J.map$1$1$ax(row.children, new A._TableElement__updateRenderObjectChildren__closure(), type$.RenderBox);
    },
    $signature: typesOffset + 15
  };
  A._TableElement__updateRenderObjectChildren__closure.prototype = {
    call$1(child) {
      var t1 = child.get$renderObject();
      t1.toString;
      return type$.RenderBox._as(t1);
    },
    $signature: 394
  };
  A._TableElement_visitChildren_closure.prototype = {
    call$1(row) {
      return row.children;
    },
    $signature: typesOffset + 16
  };
  A.SelectionOverlay__markNeedsBuild_closure.prototype = {
    call$1(duration) {
      var t2,
        t1 = this.$this;
      t1._buildScheduled = false;
      t2 = t1._text_selection$_handles;
      if (t2 != null) {
        t2[0].markNeedsBuild$0();
        t1._text_selection$_handles[1].markNeedsBuild$0();
      }
      t1 = t1._toolbar;
      if (t1 != null)
        t1.markNeedsBuild$0();
    },
    $signature: 2
  };
  A._SelectionHandleOverlayState_build_closure.prototype = {
    call$0() {
      return B.PanGestureRecognizer$(this.$this, B.LinkedHashSet_LinkedHashSet$_literal([C.PointerDeviceKind_0, C.PointerDeviceKind_2, C.PointerDeviceKind_5], type$.PointerDeviceKind));
    },
    $signature: 119
  };
  A._SelectionHandleOverlayState_build_closure0.prototype = {
    call$1(instance) {
      var t1 = this.$this._widget;
      instance.dragStartBehavior = t1.dragStartBehavior;
      instance.onStart = t1.onSelectionHandleDragStart;
      instance.onUpdate = t1.onSelectionHandleDragUpdate;
      instance.onEnd = t1.onSelectionHandleDragEnd;
    },
    $signature: 120
  };
  A.kDefaultImageBuilder_closure.prototype = {
    call$4(uri, imageDirectory, width, height) {
      var t1, _null = null;
      if (uri.get$scheme() === "http" || uri.get$scheme() === "https")
        return A.Image$network(uri.toString$0(0), height, width);
      else if (uri.get$scheme() === "data")
        return A._handleDataSchemeUri(uri, width, height);
      else if (uri.get$scheme() === "resource") {
        t1 = uri.get$path(uri);
        return new A.Image(A.ResizeImage_resizeIfNeeded(_null, _null, new A.AssetImage(t1, _null, _null)), width, height, _null);
      } else if (uri.get$scheme() === "http" || uri.get$scheme() === "https")
        return A.Image$network(uri.toString$0(0), height, width);
      else
        return A.Image$network(A.join(H.current(), uri.toString$0(0)), height, width);
    },
    $signature: 395
  };
  A.kFallbackStyle_closure.prototype = {
    call$2(context, baseTheme) {
      var result;
      switch (baseTheme) {
        case D.MarkdownStyleSheetBaseTheme_2:
          result = C.JSString_methods.contains$1(window.navigator.userAgent, "Mac OS X") ? A.MarkdownStyleSheet_MarkdownStyleSheet$fromCupertinoTheme(A.CupertinoTheme_of(context)) : A.MarkdownStyleSheet_MarkdownStyleSheet$fromTheme(B.Theme_of(context));
          break;
        case D.MarkdownStyleSheetBaseTheme_1:
          result = A.MarkdownStyleSheet_MarkdownStyleSheet$fromCupertinoTheme(A.CupertinoTheme_of(context));
          break;
        case D.MarkdownStyleSheetBaseTheme_0:
        default:
          result = A.MarkdownStyleSheet_MarkdownStyleSheet$fromTheme(B.Theme_of(context));
      }
      return result.copyWith$1$textScaleFactor(B.MediaQuery_textScaleFactorOf(context));
    },
    $signature: typesOffset + 17
  };
  A.MarkdownBuilder_extractTextFromElement_closure.prototype = {
    call$1(e) {
      return e instanceof A.Text0 ? e.text : this.$this.extractTextFromElement$1(e);
    },
    $signature: typesOffset + 18
  };
  A.MarkdownBuilder_visitText_trimText.prototype = {
    call$1(text) {
      var _leadingSpacesPattern = B.RegExp_RegExp("^ *", true, false),
        _softLineBreak = B.RegExp_RegExp(" ?\\n *", true, false);
      if (C.JSArray_methods.contains$1(D.List_ul_ol_p_br, this.$this._lastVisitedTag))
        text = B.stringReplaceAllUnchecked(text, _leadingSpacesPattern, "");
      return B.stringReplaceAllUnchecked(text, _softLineBreak, " ");
    },
    $signature: 54
  };
  A.MarkdownBuilder__mergeInlineChildren_closure.prototype = {
    call$1(span) {
      var _null = null;
      return !(span instanceof B.TextSpan) ? B.TextSpan$(B._setArrayType([span], type$.JSArray_InlineSpan), _null, _null, _null, _null) : span;
    },
    $signature: 396
  };
  A._MarkdownWidgetState_createLink_closure.prototype = {
    call$0() {
      var _this = this;
      _this.$this._widget.onTapLink.call$3(_this.text, _this.href, _this.title);
    },
    $signature: 0
  };
  A.Element_textContent_closure.prototype = {
    call$1(child) {
      return child.get$textContent();
    },
    $signature: typesOffset + 4
  };
  A.BlockSyntax_isAtBlockEnd_closure.prototype = {
    call$1(s) {
      var t1 = this.parser;
      return s.canParse$1(t1) && s.canEndBlock$1(t1);
    },
    $signature: typesOffset + 5
  };
  A.BlockquoteSyntax_parseChildLines_closure.prototype = {
    call$1(s) {
      return s.canParse$1(this.parser);
    },
    $signature: typesOffset + 5
  };
  A.ListSyntax_parse_endItem.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.childLines;
      if (t2.length !== 0) {
        this.items.push(new A.ListItem(t2));
        t1.childLines = B._setArrayType([], type$.JSArray_String);
      }
    },
    $signature: 0
  };
  A.ListSyntax_parse_tryMatch.prototype = {
    call$1(pattern) {
      var t1 = this.match,
        t2 = this.parser;
      t1.__late_helper$_value = pattern.firstMatch$1(t2.lines[t2._pos]);
      return t1._readLocal$0() != null;
    },
    $signature: 397
  };
  A.TableSyntax__parseAlignments_closure.prototype = {
    call$1(column) {
      var t1;
      column = C.JSString_methods.trim$0(column);
      t1 = C.JSString_methods.startsWith$1(column, ":");
      if (t1 && C.JSString_methods.endsWith$1(column, ":"))
        return "center";
      if (t1)
        return "left";
      if (C.JSString_methods.endsWith$1(column, ":"))
        return "right";
      return null;
    },
    $signature: 88
  };
  A.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition.prototype = {
    call$1(i) {
      return C.JSString_methods.startsWith$1(this.lines[i], $.$get$ParagraphSyntax__reflinkDefinitionStart());
    },
    $signature: 29
  };
  A.ParagraphSyntax__parseReflinkDefinition_closure.prototype = {
    call$0() {
      return new A.LinkReference(this.destination, this._box_0.title);
    },
    $signature: typesOffset + 20
  };
  A.InlineParser_parse_closure.prototype = {
    call$1(syntax) {
      return syntax.tryMatch$1(this.$this);
    },
    $signature: typesOffset + 6
  };
  A.InlineParser__linkOrImage_closure.prototype = {
    call$1(d) {
      return d.get$char() === 91 || d.get$char() === 33;
    },
    $signature: typesOffset + 7
  };
  A.InlineParser__linkOrImage_closure0.prototype = {
    call$1(e) {
      return e instanceof A.LinkSyntax;
    },
    $signature: typesOffset + 6
  };
  A.InlineParser__linkOrImage_closure1.prototype = {
    call$1(n) {
      return n === this.delimiter.node;
    },
    $signature: typesOffset + 21
  };
  A.InlineParser__linkOrImage_closure2.prototype = {
    call$0() {
      var t2, children,
        t1 = this.$this;
      t1._processEmphasis$1(this.index);
      t1 = t1._tree;
      t2 = this.nodeIndex + 1;
      children = C.JSArray_methods.sublist$2(t1, t2, t1.length);
      C.JSArray_methods.removeRange$2(t1, t2, t1.length);
      return children;
    },
    $signature: typesOffset + 8
  };
  A.InlineParser__processEmphasis_closure.prototype = {
    call$0() {
      return B.List_List$filled(3, this.bottomIndex, false, type$.int);
    },
    $signature: 398
  };
  A.InlineParser__processEmphasis_closure0.prototype = {
    call$1(d) {
      var t1 = this.closer;
      return d.get$char() === t1.get$char() && d.get$canOpen() && this.$this._canFormEmphasis$2(d, t1);
    },
    $signature: typesOffset + 7
  };
  A.InlineParser__processEmphasis_closure1.prototype = {
    call$0() {
      return C.JSArray_methods.sublist$2(this.$this._tree, this.openerTextNodeIndex + 1, this._box_0.closerTextNodeIndex);
    },
    $signature: typesOffset + 8
  };
  A.LinkSyntax_closure.prototype = {
    call$2(_, __) {
      return null;
    },
    call$1(_) {
      return this.call$2(_, null);
    },
    "call*": "call$2",
    $requiredArgCount: 1,
    $defaultValues() {
      return [null];
    },
    $signature: 399
  };
  A.ImageSyntax__createNode_closure.prototype = {
    call$1(node) {
      return node.get$textContent();
    },
    $signature: typesOffset + 4
  };
  (function aliases() {
    var _ = A.__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.BlockSyntax.prototype;
    _.super$BlockSyntax$canParse = _.canParse$1;
    _ = A.InlineSyntax.prototype;
    _.super$InlineSyntax$tryMatch = _.tryMatch$2;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_1(A, "image_resolution_AssetImage__manifestParser$closure", "AssetImage__manifestParser", 22);
    _instance_2_u(A._ImageState.prototype, "get$_handleImageFrame", "_handleImageFrame$2", 10);
    var _;
    _instance_0_u(_ = A.TextSelectionOverlay.prototype, "get$_updateTextSelectionOverlayVisibilities", "_updateTextSelectionOverlayVisibilities$0", 0);
    _instance_1_u(_, "get$_handleSelectionEndHandleDragStart", "_handleSelectionEndHandleDragStart$1", 1);
    _instance_1_u(_, "get$_handleSelectionEndHandleDragUpdate", "_handleSelectionEndHandleDragUpdate$1", 2);
    _instance_1_u(_, "get$_handleSelectionStartHandleDragStart", "_handleSelectionStartHandleDragStart$1", 1);
    _instance_1_u(_, "get$_handleSelectionStartHandleDragUpdate", "_handleSelectionStartHandleDragUpdate$1", 2);
    _instance_1_u(_ = A.SelectionOverlay.prototype, "get$_buildStartHandle", "_buildStartHandle$1", 3);
    _instance_1_u(_, "get$_buildEndHandle", "_buildEndHandle$1", 3);
    _instance_0_u(A._SelectionHandleOverlayState.prototype, "get$_handleVisibilityChanged", "_handleVisibilityChanged$0", 0);
    _instance_1_u(A.ListSyntax.prototype, "get$_removeLeadingEmptyLine", "_removeLeadingEmptyLine$1", 19);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.LineSplitter, B.StreamTransformerBase);
    _inheritMany(B.StatefulWidget, [A.SelectableText, A.Image, A._SelectionHandleOverlay, A.MarkdownWidget]);
    _inheritMany(B.Object, [A.AssetBundleImageKey, A.TextSelectionPoint, A.TableColumnWidth, A.TableBorder, A.AutofillConfiguration, A._MutableTextRange, A._TextEditingValueAccumulator, A.TextInputType, A.TextInputConfiguration, A.TextInputConnection, A.DisposableBuildContext, A._KeyFrame, A.TableRow, A._TableElementRow, A.__TableSlot_Object_Diagnosticable, A.TextSelectionOverlay, A.SelectionOverlay, A._BlockElement, A._TableElement0, A._InlineElement, A.MarkdownBuilder, A.InlineSyntax, A.Element, A.Text0, A.UnparsedContent, A.BlockParser, A.BlockSyntax, A.ListItem, A.Document, A.LinkReference, A.ExtensionSet, A.InlineParser, A.SimpleDelimiter, A.DelimiterRun, A.InlineLink]);
    _inheritMany(B.ImageProvider, [A.AssetBundleImageProvider, A.MemoryImage, A.ScrollAwareImageProvider]);
    _inherit(A.AssetImage, A.AssetBundleImageProvider);
    _inheritMany(B.Closure, [A.AssetImage_obtainKey_closure, A.FilteringTextInputFormatter__processRegion_adjustIndex, A.EditableTextState__scheduleShowCaretOnScreen_closure, A.EditableTextState__startCursorBlink_closure, A.EditableTextState__onCursorTick_closure1, A.EditableTextState__updateSizeAndTransform_closure, A.EditableTextState__updateComposingRectIfNeeded_closure, A.EditableTextState__updateCaretRectIfNeeded_closure, A._ScribbleFocusableState_isInScribbleRect_closure, A.ScrollAwareImageProvider_resolveStreamForKey_closure, A.Table_closure, A.Table_closure0, A._TableElement_mount_closure, A._TableElement_mount__closure, A._TableElement_update_closure, A._TableElement_update_closure0, A._TableElement__updateRenderObjectChildren_closure, A._TableElement__updateRenderObjectChildren__closure, A._TableElement_visitChildren_closure, A.SelectionOverlay__markNeedsBuild_closure, A._SelectionHandleOverlayState_build_closure0, A.kDefaultImageBuilder_closure, A.MarkdownBuilder_extractTextFromElement_closure, A.MarkdownBuilder_visitText_trimText, A.MarkdownBuilder__mergeInlineChildren_closure, A.Element_textContent_closure, A.BlockSyntax_isAtBlockEnd_closure, A.BlockquoteSyntax_parseChildLines_closure, A.ListSyntax_parse_tryMatch, A.TableSyntax__parseAlignments_closure, A.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition, A.InlineParser_parse_closure, A.InlineParser__linkOrImage_closure, A.InlineParser__linkOrImage_closure0, A.InlineParser__linkOrImage_closure1, A.InlineParser__processEmphasis_closure0, A.LinkSyntax_closure, A.ImageSyntax__createNode_closure]);
    _inheritMany(B.Closure2Args, [A.AssetImage_obtainKey_closure0, A.RenderEditable_getRectForComposingRange_closure, A.RenderFollowerLayer_hitTestChildren_closure, A.RenderTable_computeDryLayout_closure, A.RenderTable_hitTestChildren_closure, A.EditableTextState__formatAndSetValue_closure, A.kFallbackStyle_closure]);
    _inherit(A.RenderEditablePainter, B.ChangeNotifier);
    _inherit(A._FloatingCursorPainter, A.RenderEditablePainter);
    _inheritMany(B.RenderBox, [A.RenderImage, A.RenderTable]);
    _inherit(A.FollowerLayer, B.ContainerLayer0);
    _inherit(A.RenderFollowerLayer, B.RenderProxyBox);
    _inherit(A.TableCellParentData, B.BoxParentData);
    _inherit(A.FlexColumnWidth, A.TableColumnWidth);
    _inheritMany(B._Enum, [A.TableCellVerticalAlignment, A.TextCapitalization0, A.MarkdownStyleSheetBaseTheme, A.MarkdownListItemCrossAxisAlignment]);
    _inherit(A.CompositedTransformFollower, B.SingleChildRenderObjectWidget);
    _inherit(A.RawImage, B.LeafRenderObjectWidget);
    _inherit(A._DiscreteKeyFrameSimulation, B.Simulation);
    _inheritMany(B.Closure0Args, [A.EditableTextState__onCursorTick_closure, A.EditableTextState__onCursorTick_closure0, A.EditableTextState_insertTextPlaceholder_closure, A.EditableTextState_removeTextPlaceholder_closure, A.EditableTextState_showAutocorrectionPromptRect_closure, A._ImageState__handleImageFrame_closure, A._ImageState__updateSourceStream_closure, A._ImageState__updateSourceStream_closure0, A.ScrollAwareImageProvider_resolveStreamForKey__closure, A._SelectionHandleOverlayState_build_closure, A._MarkdownWidgetState_createLink_closure, A.ListSyntax_parse_endItem, A.ParagraphSyntax__parseReflinkDefinition_closure, A.InlineParser__linkOrImage_closure2, A.InlineParser__processEmphasis_closure, A.InlineParser__processEmphasis_closure1]);
    _inheritMany(B.State, [A.__ImageState_State_WidgetsBindingObserver, A.__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin, A._MarkdownWidgetState]);
    _inherit(A._ImageState, A.__ImageState_State_WidgetsBindingObserver);
    _inherit(A.Table, B.RenderObjectWidget);
    _inherit(A._TableElement, B.RenderObjectElement);
    _inherit(A.TableCell, B.ParentDataWidget);
    _inherit(A._TableSlot, A.__TableSlot_Object_Diagnosticable);
    _inherit(A._SelectionHandleOverlayState, A.__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin);
    _inherit(A.MarkdownBody, A.MarkdownWidget);
    _inheritMany(A.InlineSyntax, [A.TaskListSyntax, A.LineBreakSyntax, A.TextSyntax, A.EscapeSyntax, A.EmailAutolinkSyntax, A.AutolinkSyntax, A.AutolinkExtensionSyntax, A.TagSyntax, A.CodeSyntax]);
    _inheritMany(A.BlockSyntax, [A.EmptyBlockSyntax, A.SetextHeaderSyntax, A.HeaderSyntax, A.BlockquoteSyntax, A.CodeBlockSyntax, A.FencedCodeBlockSyntax, A.HorizontalRuleSyntax, A.BlockHtmlSyntax, A.ListSyntax, A.TableSyntax, A.ParagraphSyntax]);
    _inheritMany(A.BlockHtmlSyntax, [A.BlockTagBlockHtmlSyntax, A.LongBlockHtmlSyntax]);
    _inherit(A.OtherTagBlockHtmlSyntax, A.BlockTagBlockHtmlSyntax);
    _inheritMany(A.ListSyntax, [A.UnorderedListSyntax, A.OrderedListSyntax]);
    _inherit(A.InlineHtmlSyntax, A.TextSyntax);
    _inheritMany(A.TagSyntax, [A.StrikethroughSyntax, A.LinkSyntax]);
    _inherit(A.ImageSyntax, A.LinkSyntax);
    _mixin(A.__ImageState_State_WidgetsBindingObserver, B.WidgetsBindingObserver);
    _mixin(A.__TableSlot_Object_Diagnosticable, B.Diagnosticable);
    _mixinHard(A.__SelectionHandleOverlayState_State_SingleTickerProviderStateMixin, B.SingleTickerProviderStateMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"MemoryImage":{"ImageProvider":["MemoryImage"],"ImageProvider.T":"MemoryImage"},"AssetBundleImageProvider":{"ImageProvider":["AssetBundleImageKey"]},"AssetImage":{"ImageProvider":["AssetBundleImageKey"],"ImageProvider.T":"AssetBundleImageKey"},"RenderEditablePainter":{"Listenable":[]},"_FloatingCursorPainter":{"Listenable":[]},"RenderImage":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"FollowerLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderFollowerLayer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"TableCellParentData":{"BoxParentData":[],"ParentData":[]},"FlexColumnWidth":{"TableColumnWidth":[]},"TableCellVerticalAlignment":{"Enum":[]},"RenderTable":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"TextCapitalization0":{"Enum":[]},"CompositedTransformFollower":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawImage":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Image":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ImageState":{"State":["Image"],"WidgetsBindingObserver":[]},"ScrollAwareImageProvider":{"ImageProvider":["1"],"ImageProvider.T":"1"},"Table":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TableElement":{"RenderObjectElement":[],"Element0":[],"DiagnosticableTree":[],"BuildContext":[]},"TableCell":{"ParentDataWidget":["TableCellParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"TableCellParentData"},"_SelectionHandleOverlay":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SelectionHandleOverlayState":{"State":["_SelectionHandleOverlay"]},"MarkdownStyleSheetBaseTheme":{"Enum":[]},"MarkdownWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"MarkdownListItemCrossAxisAlignment":{"Enum":[]},"_MarkdownWidgetState":{"State":["MarkdownWidget"]},"MarkdownBody":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"TaskListSyntax":{"InlineSyntax":[]},"Element":{"Node0":[]},"Text0":{"Node0":[]},"UnparsedContent":{"Node0":[]},"EmptyBlockSyntax":{"BlockSyntax":[]},"SetextHeaderSyntax":{"BlockSyntax":[]},"HeaderSyntax":{"BlockSyntax":[]},"BlockquoteSyntax":{"BlockSyntax":[]},"CodeBlockSyntax":{"BlockSyntax":[]},"FencedCodeBlockSyntax":{"BlockSyntax":[]},"HorizontalRuleSyntax":{"BlockSyntax":[]},"BlockHtmlSyntax":{"BlockSyntax":[]},"BlockTagBlockHtmlSyntax":{"BlockSyntax":[]},"OtherTagBlockHtmlSyntax":{"BlockSyntax":[]},"LongBlockHtmlSyntax":{"BlockSyntax":[]},"ListSyntax":{"BlockSyntax":[]},"UnorderedListSyntax":{"BlockSyntax":[]},"OrderedListSyntax":{"BlockSyntax":[]},"TableSyntax":{"BlockSyntax":[]},"ParagraphSyntax":{"BlockSyntax":[]},"LineBreakSyntax":{"InlineSyntax":[]},"TextSyntax":{"InlineSyntax":[]},"EscapeSyntax":{"InlineSyntax":[]},"InlineHtmlSyntax":{"InlineSyntax":[]},"EmailAutolinkSyntax":{"InlineSyntax":[]},"AutolinkSyntax":{"InlineSyntax":[]},"AutolinkExtensionSyntax":{"InlineSyntax":[]},"SimpleDelimiter":{"Delimiter":[]},"DelimiterRun":{"Delimiter":[]},"TagSyntax":{"InlineSyntax":[]},"StrikethroughSyntax":{"InlineSyntax":[]},"LinkSyntax":{"InlineSyntax":[]},"ImageSyntax":{"InlineSyntax":[]},"CodeSyntax":{"InlineSyntax":[]}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      BlockSyntax: findType("BlockSyntax"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      CodeUnits: findType("CodeUnits"),
      Codec: findType("Codec"),
      ContainerLayer: findType("ContainerLayer0"),
      DiagnosticsProperty_Object: findType("DiagnosticsProperty<Object>"),
      Directionality: findType("Directionality"),
      DisposableBuildContext_State_Image: findType("DisposableBuildContext<State<Image>>"),
      Element: findType("Element0"),
      GestureRecognizer: findType("GestureRecognizer"),
      GestureRecognizerFactoryWithHandlers_PanGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<PanGestureRecognizer>"),
      GestureRecognizerFactory_GestureRecognizer: findType("GestureRecognizerFactory<GestureRecognizer>"),
      InlineSyntax: findType("InlineSyntax"),
      JSArray_BlockSyntax: findType("JSArray<BlockSyntax>"),
      JSArray_ContainerLayer: findType("JSArray<ContainerLayer0>"),
      JSArray_Delimiter: findType("JSArray<Delimiter>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_GestureRecognizer: findType("JSArray<GestureRecognizer>"),
      JSArray_InlineSpan: findType("JSArray<InlineSpan>"),
      JSArray_InlineSyntax: findType("JSArray<InlineSyntax>"),
      JSArray_ListItem: findType("JSArray<ListItem>"),
      JSArray_Node: findType("JSArray<Node0>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_SelectionRect: findType("JSArray<SelectionRect>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TableRow: findType("JSArray<TableRow>"),
      JSArray_TextSpan: findType("JSArray<TextSpan>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__BlockElement: findType("JSArray<_BlockElement>"),
      JSArray__InlineElement: findType("JSArray<_InlineElement>"),
      JSArray__TableElement: findType("JSArray<_TableElement0>"),
      JSArray__TableElementRow: findType("JSArray<_TableElementRow>"),
      JSArray__TableSlot: findType("JSArray<_TableSlot>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_nullable_RenderBox: findType("JSArray<RenderBox?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      Layer: findType("Layer0"),
      LinkReference: findType("LinkReference"),
      List_Element: findType("List<Element0>"),
      List_String: findType("List<String>"),
      List_Widget: findType("List<Widget>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      LocalKey: findType("LocalKey"),
      Map_String_dynamic: findType("Map<String,@>"),
      MappedListIterable_of_String_and_nullable_String: findType("MappedListIterable<String,String?>"),
      Object: findType("Object"),
      OverlayState: findType("OverlayState"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      RenderBox: findType("RenderBox"),
      RenderEditable: findType("RenderEditable"),
      RenderTable: findType("RenderTable"),
      RichText: findType("RichText"),
      ScrollAwareImageProvider_Object: findType("ScrollAwareImageProvider<Object>"),
      SelectableText: findType("SelectableText"),
      SimpleDelimiter: findType("SimpleDelimiter"),
      String: findType("String"),
      SynchronousFuture_AssetBundleImageKey: findType("SynchronousFuture<AssetBundleImageKey>"),
      SynchronousFuture_MemoryImage: findType("SynchronousFuture<MemoryImage>"),
      SynchronousFuture_nullable_Map_of_String_and_List_String: findType("SynchronousFuture<Map<String,List<String>>?>"),
      Table: findType("Table"),
      TableCellParentData: findType("TableCellParentData"),
      TableColumnWidth: findType("TableColumnWidth"),
      TextSpan: findType("TextSpan"),
      Type: findType("Type"),
      _AsyncCompleter_AssetBundleImageKey: findType("_AsyncCompleter<AssetBundleImageKey>"),
      _Future_AssetBundleImageKey: findType("_Future<AssetBundleImageKey>"),
      _InheritedCupertinoTheme: findType("_InheritedCupertinoTheme"),
      _ScrollableScope: findType("_ScrollableScope"),
      double: findType("double"),
      dynamic: findType("@"),
      int: findType("int"),
      nullable_BoxPainter: findType("BoxPainter?"),
      nullable_ContainerLayer: findType("ContainerLayer0?"),
      nullable_FollowerLayer: findType("FollowerLayer?"),
      nullable_Map_of_String_and_List_String: findType("Map<String,List<String>>?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_String: findType("String?"),
      nullable_TransformEngineLayer: findType("TransformEngineLayer0?"),
      nullable__ScrollableScope: findType("_ScrollableScope?"),
      nullable_double: findType("double?"),
      void: findType("~"),
      void_Function: findType("~()")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.Alignment_m1_m1 = new B.Alignment(-1, -1);
    D.TextEditingValue_li8 = new B.TextEditingValue("", C.TextSelection_ke5, C.TextRange_m1_m1);
    D.AutofillConfiguration_lYx = new A.AutofillConfiguration(false, "", C.List_empty1, D.TextEditingValue_li8, null);
    D.BoxDecoration_423 = new B.BoxDecoration(null, null, null, null, null, null, C.BoxShape_0);
    D.C_BlockTagBlockHtmlSyntax = new A.BlockTagBlockHtmlSyntax();
    D.C_BlockquoteSyntax = new A.BlockquoteSyntax();
    D.C_CodeBlockSyntax = new A.CodeBlockSyntax();
    D.C_EmptyBlockSyntax = new A.EmptyBlockSyntax();
    D.C_FencedCodeBlockSyntax = new A.FencedCodeBlockSyntax();
    D.C_FlexColumnWidth = new A.FlexColumnWidth();
    D.C_HeaderSyntax = new A.HeaderSyntax();
    D.C_HorizontalRuleSyntax = new A.HorizontalRuleSyntax();
    D.C_LineSplitter = new A.LineSplitter();
    D.C_OrderedListSyntax = new A.OrderedListSyntax();
    D.C_OtherTagBlockHtmlSyntax = new A.OtherTagBlockHtmlSyntax();
    D.C_ParagraphSyntax = new A.ParagraphSyntax();
    D.C_SetextHeaderSyntax = new A.SetextHeaderSyntax();
    D.C_TableSyntax = new A.TableSyntax();
    D.C_UnorderedListSyntax = new A.UnorderedListSyntax();
    D.Color_4278813951 = new B.Color(4278813951);
    D.Color_4282006076 = new B.Color(4282006076);
    D.Color_4291940822 = new B.Color(4291940822);
    D.Color_4294111991 = new B.Color(4294111991);
    D.Color_1228684355 = new B.Color(1228684355);
    D.Color_2572440664 = new B.Color(2572440664);
    D.Color_1581005891 = new B.Color(1581005891);
    D.Color_2907984984 = new B.Color(2907984984);
    D.CupertinoDynamicColor_SZk = new B.CupertinoDynamicColor(D.Color_1228684355, "separator", null, D.Color_1228684355, D.Color_2572440664, D.Color_1581005891, D.Color_2907984984, D.Color_1228684355, D.Color_2572440664, D.Color_1581005891, D.Color_2907984984, 0);
    D.Duration_125000 = new B.Duration(125000);
    D.EdgeInsets_0_0_4_0 = new B.EdgeInsets(0, 0, 4, 0);
    D.EdgeInsets_16_16_16_16 = new B.EdgeInsets(16, 16, 16, 16);
    D.EdgeInsets_16_8_16_8 = new B.EdgeInsets(16, 8, 16, 8);
    D.EdgeInsets_20_20_20_20 = new B.EdgeInsets(20, 20, 20, 20);
    D.EdgeInsets_Otk = new B.EdgeInsets(0.5, 1, 0.5, 1);
    D.FontStyle_1 = new B.FontStyle(1, "italic");
    D.IconData_57687_false = new B.IconData(57687, false);
    D.IconData_57688_false = new B.IconData(57688, false);
    D.List_GZw = B._setArrayType(makeConstList(["text", "multiline", "number", "phone", "datetime", "emailAddress", "url", "visiblePassword", "name", "address", "none"]), type$.JSArray_String);
    D._KeyFrame_0_1 = new A._KeyFrame(0, 1);
    D._KeyFrame_WUF = new A._KeyFrame(0.5, 1);
    D._KeyFrame_ckA = new A._KeyFrame(0.5375, 0.75);
    D._KeyFrame_EKj = new A._KeyFrame(0.575, 0.5);
    D._KeyFrame_kqe = new A._KeyFrame(0.6125, 0.25);
    D._KeyFrame_wLM = new A._KeyFrame(0.65, 0);
    D._KeyFrame_j0s = new A._KeyFrame(0.85, 0);
    D._KeyFrame_DbH = new A._KeyFrame(0.8875, 0.25);
    D._KeyFrame_7BT = new A._KeyFrame(0.925, 0.5);
    D._KeyFrame_AKu = new A._KeyFrame(0.9625, 0.75);
    D._KeyFrame_1_1 = new A._KeyFrame(1, 1);
    D.List_WUp = B._setArrayType(makeConstList([D._KeyFrame_0_1, D._KeyFrame_WUF, D._KeyFrame_ckA, D._KeyFrame_EKj, D._KeyFrame_kqe, D._KeyFrame_wLM, D._KeyFrame_j0s, D._KeyFrame_DbH, D._KeyFrame_7BT, D._KeyFrame_AKu, D._KeyFrame_1_1]), B.findType("JSArray<_KeyFrame>"));
    D.List_atK = B._setArrayType(makeConstList(["p", "h1", "h2", "h3", "h4", "h5", "h6", "li", "blockquote", "pre", "ol", "ul", "hr", "table", "thead", "tbody", "tr"]), type$.JSArray_String);
    D.List_empty25 = B._setArrayType(makeConstList([]), type$.JSArray_TableRow);
    D.List_empty20 = B._setArrayType(makeConstList([]), B.findType("JSArray<TextSelectionPoint>"));
    D.List_empty6 = B._setArrayType(makeConstList([]), type$.JSArray__TableElementRow);
    D.List_empty19 = B._setArrayType(makeConstList([]), type$.JSArray_double);
    D.List_empty5 = B._setArrayType(makeConstList([]), type$.JSArray_nullable_RenderBox);
    D.List_ul_ol = B._setArrayType(makeConstList(["ul", "ol"]), type$.JSArray_String);
    D.List_ul_ol_p_br = B._setArrayType(makeConstList(["ul", "ol", "p", "br"]), type$.JSArray_String);
    D.Map_empty1 = new B.ConstantStringMap(0, {}, C.List_empty1, B.findType("ConstantStringMap<String,MarkdownElementBuilder>"));
    D.Map_empty2 = new B.ConstantStringMap(0, {}, C.List_empty1, B.findType("ConstantStringMap<String,MarkdownPaddingBuilder>"));
    D.MarkdownListItemCrossAxisAlignment_0 = new A.MarkdownListItemCrossAxisAlignment(0, "baseline");
    D.MarkdownListItemCrossAxisAlignment_1 = new A.MarkdownListItemCrossAxisAlignment(1, "start");
    D.MarkdownStyleSheetBaseTheme_0 = new A.MarkdownStyleSheetBaseTheme(0, "material");
    D.MarkdownStyleSheetBaseTheme_1 = new A.MarkdownStyleSheetBaseTheme(1, "cupertino");
    D.MarkdownStyleSheetBaseTheme_2 = new A.MarkdownStyleSheetBaseTheme(2, "platform");
    D.Rect_Vy7 = new B.Rect(-1 / 0, -1 / 0, 1 / 0, 1 / 0);
    D.SelectionChangedCause_0 = new B.SelectionChangedCause(0, "tap");
    D.SelectionChangedCause_1 = new B.SelectionChangedCause(1, "doubleTap");
    D.SelectionChangedCause_2 = new B.SelectionChangedCause(2, "longPress");
    D.SelectionChangedCause_3 = new B.SelectionChangedCause(3, "forcePress");
    D.SelectionChangedCause_5 = new B.SelectionChangedCause(5, "toolbar");
    D.SelectionChangedCause_6 = new B.SelectionChangedCause(6, "drag");
    D.SelectionChangedCause_7 = new B.SelectionChangedCause(7, "scribble");
    D.TableCellVerticalAlignment_0 = new A.TableCellVerticalAlignment(0, "top");
    D.TableCellVerticalAlignment_1 = new A.TableCellVerticalAlignment(1, "middle");
    D.TextCapitalization_30 = new A.TextCapitalization0(3, "none");
    D.TextInputType_1_null_null = new A.TextInputType(1, null, null);
    D.TextSelectionHandleType_2 = new B.TextSelectionHandleType(2, "collapsed");
    D.TextSpan_mpm = new B.TextSpan("\n", null, null, C.C__DeferringMouseCursor, null, null);
    D.TextStyle_9Zz = new B.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_4, null, null, null, null, null, null, null, null);
    D.TextStyle_LB7 = new B.TextStyle(true, null, null, null, null, null, null, null, D.FontStyle_1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_ia30 = new B.TextStyle(true, null, null, null, null, null, null, C.FontWeight_5, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_yHr = new B.TextStyle(true, C.MaterialColor_Map_JNwaj_4280391411, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  })();
  (function staticFields() {
    $.TextInputConnection__nextId = 1;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "AssetImage__extractRatioRegExp", "$get$AssetImage__extractRatioRegExp", () => B.RegExp_RegExp("/?(\\d+(\\.\\d*)?)x$", true, false));
    _lazyFinal($, "kDefaultImageBuilder", "$get$kDefaultImageBuilder", () => new A.kDefaultImageBuilder_closure());
    _lazyFinal($, "kFallbackStyle", "$get$kFallbackStyle", () => new A.kFallbackStyle_closure());
    _lazyFinal($, "_emptyPattern", "$get$_emptyPattern", () => B.RegExp_RegExp("^(?:[ \\t]*)$", true, false));
    _lazyFinal($, "_setextPattern", "$get$_setextPattern", () => B.RegExp_RegExp("^[ ]{0,3}(=+|-+)\\s*$", true, false));
    _lazyFinal($, "_headerPattern", "$get$_headerPattern", () => B.RegExp_RegExp("^ {0,3}(#{1,6})[ \\x09\\x0b\\x0c](.*?)#*$", true, false));
    _lazyFinal($, "_blockquotePattern", "$get$_blockquotePattern", () => B.RegExp_RegExp("^[ ]{0,3}>[ ]?(.*)$", true, false));
    _lazyFinal($, "_indentPattern", "$get$_indentPattern", () => B.RegExp_RegExp("^(?:    | {0,3}\\t)(.*)$", true, false));
    _lazyFinal($, "_codeFencePattern", "$get$_codeFencePattern", () => B.RegExp_RegExp("^[ ]{0,3}(`{3,}|~{3,})(.*)$", true, false));
    _lazyFinal($, "_hrPattern", "$get$_hrPattern", () => B.RegExp_RegExp("^ {0,3}([-*_])[ \\t]*\\1[ \\t]*\\1(?:\\1|[ \\t])*$", true, false));
    _lazyFinal($, "_ulPattern", "$get$_ulPattern", () => B.RegExp_RegExp("^([ ]{0,3})()([*+-])(([ \\t])([ \\t]*)(.*))?$", true, false));
    _lazyFinal($, "_olPattern", "$get$_olPattern", () => B.RegExp_RegExp("^([ ]{0,3})(\\d{1,9})([\\.)])(([ \\t])([ \\t]*)(.*))?$", true, false));
    _lazyFinal($, "_tablePattern", "$get$_tablePattern", () => B.RegExp_RegExp("^[ ]{0,3}\\|?([ \\t]*:?\\-+:?[ \\t]*\\|)+([ \\t]|[ \\t]*:?\\-+:?[ \\t]*)?$", true, false));
    _lazyFinal($, "_dummyPattern", "$get$_dummyPattern", () => B.RegExp_RegExp("", true, false));
    _lazyFinal($, "BlockTagBlockHtmlSyntax__pattern", "$get$BlockTagBlockHtmlSyntax__pattern", () => B.RegExp_RegExp("^ {0,3}</?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|>|/>|$)", true, false));
    _lazyFinal($, "BlockTagBlockHtmlSyntax__openBracketPattern", "$get$BlockTagBlockHtmlSyntax__openBracketPattern", () => B.RegExp_RegExp("^ {0,3}<", true, false));
    _lazyFinal($, "ListSyntax__whitespaceRe", "$get$ListSyntax__whitespaceRe", () => B.RegExp_RegExp("[ \t]*", true, false));
    _lazyFinal($, "ParagraphSyntax__reflinkDefinitionStart", "$get$ParagraphSyntax__reflinkDefinitionStart", () => B.RegExp_RegExp("[ ]{0,3}\\[", true, false));
    _lazyFinal($, "ParagraphSyntax__whitespacePattern", "$get$ParagraphSyntax__whitespacePattern", () => B.RegExp_RegExp("^\\s*$", true, false));
    _lazyFinal($, "ExtensionSet_commonMark", "$get$ExtensionSet_commonMark", () => A.ExtensionSet$(B.List_List$unmodifiable(B._setArrayType([D.C_FencedCodeBlockSyntax], type$.JSArray_BlockSyntax), type$.BlockSyntax), B.List_List$unmodifiable(B._setArrayType([A.InlineHtmlSyntax$()], type$.JSArray_InlineSyntax), type$.InlineSyntax)));
    _lazyFinal($, "ExtensionSet_gitHubFlavored", "$get$ExtensionSet_gitHubFlavored", () => A.ExtensionSet$(B.List_List$unmodifiable(B._setArrayType([D.C_FencedCodeBlockSyntax, D.C_TableSyntax], type$.JSArray_BlockSyntax), type$.BlockSyntax), B.List_List$unmodifiable(B._setArrayType([A.InlineHtmlSyntax$(), new A.StrikethroughSyntax(true, true, B.RegExp_RegExp("~+", true, true), null), new A.AutolinkExtensionSyntax(B.RegExp_RegExp("(?:^|[\\s*_~(>])(((?:(?:https?|ftp):\\/\\/|www\\.))([\\w\\-][\\w\\-.]+)([^\\s<]*))", true, true), null)], type$.JSArray_InlineSyntax), type$.InlineSyntax)));
    _lazyFinal($, "InlineParser__defaultSyntaxes", "$get$InlineParser__defaultSyntaxes", () => {
      var _null = null;
      return B.List_List$unmodifiable(B._setArrayType([new A.EmailAutolinkSyntax(B.RegExp_RegExp("<([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>", true, true), 60), new A.AutolinkSyntax(B.RegExp_RegExp("<(([a-zA-Z][a-zA-Z\\-\\+\\.]+):(?://)?[^\\s>]*)>", true, true), _null), new A.LineBreakSyntax(B.RegExp_RegExp("(?:\\\\|  +)\\n", true, true), _null), new A.EscapeSyntax(B.RegExp_RegExp("\\\\[!\"#$%&'()*+,\\-./:;<=>?@\\[\\\\\\]^_`{|}~]", true, true), _null), A.TextSyntax$(" \\* ", 32, ""), A.TextSyntax$(" _ ", 32, ""), A.TagSyntax$("\\*+", false, true, _null), A.TagSyntax$("_+", false, true, _null), new A.CodeSyntax(B.RegExp_RegExp("(`+(?!`))((?:.|\\n)*?[^`])\\1(?!`)", true, true), _null)], type$.JSArray_InlineSyntax), type$.InlineSyntax);
    });
    _lazyFinal($, "AutolinkExtensionSyntax_regExpTrailingPunc", "$get$AutolinkExtensionSyntax_regExpTrailingPunc", () => B.RegExp_RegExp("[?!.,:*_~]*$", true, false));
    _lazyFinal($, "AutolinkExtensionSyntax_regExpEndsWithColon", "$get$AutolinkExtensionSyntax_regExpEndsWithColon", () => B.RegExp_RegExp("\\&[a-zA-Z0-9]+;$", true, false));
    _lazyFinal($, "AutolinkExtensionSyntax_regExpWhiteSpace", "$get$AutolinkExtensionSyntax_regExpWhiteSpace", () => B.RegExp_RegExp("\\s", true, false));
    _lazyFinal($, "DelimiterRun_punctuation", "$get$DelimiterRun_punctuation", () => B.RegExp_RegExp("[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]", true, false));
    _lazyFinal($, "LinkSyntax__entirelyWhitespacePattern", "$get$LinkSyntax__entirelyWhitespacePattern", () => B.RegExp_RegExp("^\\s*$", true, false));
    _lazyFinal($, "_oneOrMoreWhitespacePattern", "$get$_oneOrMoreWhitespacePattern", () => B.RegExp_RegExp("[ \n\r\t]+", true, false));
  })();
};

$__dart_deferred_initializers__["ZMmVWmYb5bcXeUMAV0Ao3LBnPIY="] = $__dart_deferred_initializers__.current
