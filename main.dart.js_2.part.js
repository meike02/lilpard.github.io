// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, deferred-serialization, csp), the Dart to JavaScript compiler version: 2.18.0-271.4.beta.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {Instantiation: function Instantiation() {
    }, Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    Future_any(futures, $T) {
      var t1, t2, _i,
        completer = new B._SyncCompleter(new B._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_SyncCompleter<0>")),
        onValue = new A.Future_any_onValue(completer, $T),
        onError = new A.Future_any_onError(completer);
      for (t1 = futures.length, t2 = type$.void, _i = 0; _i < futures.length; futures.length === t1 || (0, B.throwConcurrentModificationError)(futures), ++_i)
        futures[_i].then$1$2$onError(onValue, onError, t2);
      return completer.future;
    },
    _StreamHandlerTransformer$(handleData, $S, $T) {
      return new A._StreamHandlerTransformer(new A._StreamHandlerTransformer_closure(handleData, null, null, $T, $S), $S._eval$1("@<0>")._bind$1($T)._eval$1("_StreamHandlerTransformer<1,2>"));
    },
    Future_any_onValue: function Future_any_onValue(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    Future_any_onError: function Future_any_onError(t0) {
      this.completer = t0;
    },
    _StreamSinkTransformer: function _StreamSinkTransformer() {
    },
    _HandlerEventSink: function _HandlerEventSink(t0, t1, t2, t3, t4) {
      var _ = this;
      _._handleData = t0;
      _._async$_handleError = t1;
      _._handleDone = t2;
      _._async$_sink = t3;
      _.$ti = t4;
    },
    _StreamHandlerTransformer: function _StreamHandlerTransformer(t0, t1) {
      this._sinkMapper = t0;
      this.$ti = t1;
    },
    _StreamHandlerTransformer_closure: function _StreamHandlerTransformer_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.handleData = t0;
      _.handleError = t1;
      _.handleDone = t2;
      _.T = t3;
      _.S = t4;
    },
    _ByteCallbackSink: function _ByteCallbackSink(t0, t1) {
      this._convert$_callback = t0;
      this._buffer = t1;
      this._bufferIndex = 0;
    },
    CanonicalizedMap: function CanonicalizedMap() {
    },
    CanonicalizedMap_addAll_closure: function CanonicalizedMap_addAll_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_entries_closure: function CanonicalizedMap_entries_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_forEach_closure: function CanonicalizedMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CanonicalizedMap_keys_closure: function CanonicalizedMap_keys_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_map_closure: function CanonicalizedMap_map_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transform = t1;
      _.K2 = t2;
      _.V2 = t3;
    },
    CanonicalizedMap_putIfAbsent_closure: function CanonicalizedMap_putIfAbsent_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.ifAbsent = t2;
    },
    CanonicalizedMap_values_closure: function CanonicalizedMap_values_closure(t0) {
      this.$this = t0;
    },
    ResponseBody: function ResponseBody(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.stream = t0;
      _.__ResponseBody_headers_A = t1;
      _.statusCode = t2;
      _.statusMessage = t3;
      _.isRedirect = t4;
      _.extra = t5;
    },
    BrowserHttpClientAdapter: function BrowserHttpClientAdapter(t0) {
      this._xhrs = t0;
    },
    BrowserHttpClientAdapter_fetch_closure: function BrowserHttpClientAdapter_fetch_closure(t0) {
      this.xhr = t0;
    },
    BrowserHttpClientAdapter_fetch_closure0: function BrowserHttpClientAdapter_fetch_closure0(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    BrowserHttpClientAdapter_fetch__closure: function BrowserHttpClientAdapter_fetch__closure() {
    },
    BrowserHttpClientAdapter_fetch_closure1: function BrowserHttpClientAdapter_fetch_closure1(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.completer = t1;
      _.options = t2;
      _.xhr = t3;
    },
    BrowserHttpClientAdapter_fetch_closure2: function BrowserHttpClientAdapter_fetch_closure2(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.options = t1;
      _.completer = t2;
      _.xhr = t3;
    },
    BrowserHttpClientAdapter_fetch_closure3: function BrowserHttpClientAdapter_fetch_closure3(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.options = t1;
      _.completer = t2;
      _.xhr = t3;
    },
    BrowserHttpClientAdapter_fetch_closure4: function BrowserHttpClientAdapter_fetch_closure4(t0, t1) {
      this.completer = t0;
      this.options = t1;
    },
    BrowserHttpClientAdapter_fetch_closure5: function BrowserHttpClientAdapter_fetch_closure5(t0) {
      this._completer = t0;
    },
    BrowserHttpClientAdapter_fetch_closure6: function BrowserHttpClientAdapter_fetch_closure6(t0, t1) {
      this.$this = t0;
      this.xhr = t1;
    },
    DioError$(error, requestOptions, response, type) {
      return new A.DioError(type, error);
    },
    DioErrorType: function DioErrorType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DioError: function DioError(t0, t1) {
      this.type = t0;
      this.error = t1;
      this._stackTrace = null;
    },
    DioMixin_listenCancelForAsyncTask(cancelToken, future, $T) {
      var t1 = B._setArrayType([], $T._eval$1("JSArray<Future<0>>"));
      t1.push(future);
      return A.Future_any(t1, $T);
    },
    DioMixin_checkIfNeedEnqueue(lock, callback, $T) {
      var t1 = callback.call$0();
      return t1;
    },
    DioMixin_assureDioError(err, requestOptions, sourceStackTrace) {
      var dioError = err instanceof A.DioError ? err : new A.DioError(D.DioErrorType_5, err);
      dioError._stackTrace = sourceStackTrace == null ? dioError._stackTrace : sourceStackTrace;
      return dioError;
    },
    DioMixin_assureResponse(response, requestOptions, $T) {
      var data, t1, t2, t3, t4, t5, t6, t7, _null = null;
      if (!(response instanceof A.Response)) {
        $T._as(response);
        return A.Response$(response, _null, _null, _null, _null, requestOptions, _null, _null, $T);
      } else if (!$T._eval$1("Response<0>")._is(response)) {
        data = $T._eval$1("0?")._as(response.data);
        t1 = response.__Response_headers_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t2 = response.__Response_requestOptions_A;
        t2 === $ && B.throwUnnamedLateFieldNI();
        t3 = response.statusCode;
        t4 = response.isRedirect;
        t5 = response.__Response_redirects_A;
        t5 === $ && B.throwUnnamedLateFieldNI();
        t6 = response.statusMessage;
        t7 = response.__Response_extra_A;
        t7 === $ && B.throwUnnamedLateFieldNI();
        return A.Response$(data, t7, t1, t4, t5, t2, t3, t6, $T);
      }
      return response;
    },
    Lock$() {
      return new A.Lock();
    },
    DioMixin: function DioMixin() {
    },
    DioMixin_fetch__requestInterceptorWrapper: function DioMixin_fetch__requestInterceptorWrapper(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    DioMixin_fetch__requestInterceptorWrapper_closure: function DioMixin_fetch__requestInterceptorWrapper_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.interceptor = t2;
    },
    DioMixin_fetch__requestInterceptorWrapper__closure: function DioMixin_fetch__requestInterceptorWrapper__closure(t0, t1, t2) {
      this.$this = t0;
      this.interceptor = t1;
      this.state = t2;
    },
    DioMixin_fetch__requestInterceptorWrapper___closure: function DioMixin_fetch__requestInterceptorWrapper___closure(t0, t1) {
      this.interceptor = t0;
      this.state = t1;
    },
    DioMixin_fetch__responseInterceptorWrapper: function DioMixin_fetch__responseInterceptorWrapper(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    DioMixin_fetch__responseInterceptorWrapper_closure: function DioMixin_fetch__responseInterceptorWrapper_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.interceptor = t2;
    },
    DioMixin_fetch__responseInterceptorWrapper__closure: function DioMixin_fetch__responseInterceptorWrapper__closure(t0, t1, t2) {
      this.$this = t0;
      this.interceptor = t1;
      this.state = t2;
    },
    DioMixin_fetch__responseInterceptorWrapper___closure: function DioMixin_fetch__responseInterceptorWrapper___closure(t0, t1) {
      this.interceptor = t0;
      this.state = t1;
    },
    DioMixin_fetch__errorInterceptorWrapper: function DioMixin_fetch__errorInterceptorWrapper(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    DioMixin_fetch__errorInterceptorWrapper_closure: function DioMixin_fetch__errorInterceptorWrapper_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.interceptor = t2;
    },
    DioMixin_fetch__errorInterceptorWrapper__closure: function DioMixin_fetch__errorInterceptorWrapper__closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.interceptor = t2;
    },
    DioMixin_fetch__errorInterceptorWrapper___closure: function DioMixin_fetch__errorInterceptorWrapper___closure(t0, t1) {
      this._box_0 = t0;
      this.interceptor = t1;
    },
    DioMixin_fetch_closure: function DioMixin_fetch_closure(t0) {
      this._box_1 = t0;
    },
    DioMixin_fetch_closure0: function DioMixin_fetch_closure0(t0, t1) {
      this._box_1 = t0;
      this._requestInterceptorWrapper = t1;
    },
    DioMixin_fetch_closure1: function DioMixin_fetch_closure1(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    DioMixin_fetch__closure: function DioMixin_fetch__closure(t0) {
      this.handler = t0;
    },
    DioMixin_fetch__closure0: function DioMixin_fetch__closure0(t0) {
      this.handler = t0;
    },
    DioMixin_fetch_closure2: function DioMixin_fetch_closure2(t0, t1) {
      this._box_1 = t0;
      this._responseInterceptorWrapper = t1;
    },
    DioMixin_fetch_closure3: function DioMixin_fetch_closure3(t0, t1) {
      this._box_1 = t0;
      this._errorInterceptorWrapper = t1;
    },
    DioMixin_fetch_closure4: function DioMixin_fetch_closure4(t0, t1) {
      this._box_1 = t0;
      this.T = t1;
    },
    DioMixin_fetch_closure5: function DioMixin_fetch_closure5(t0, t1, t2) {
      this._box_1 = t0;
      this.stackTrace = t1;
      this.T = t2;
    },
    DioMixin__dispatchRequest_closure: function DioMixin__dispatchRequest_closure(t0, t1) {
      this.ret = t0;
      this.T = t1;
    },
    Lock: function Lock() {
      this._lock = null;
    },
    InterceptorResultType: function InterceptorResultType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    InterceptorState: function InterceptorState(t0, t1, t2) {
      this.data = t0;
      this.type = t1;
      this.$ti = t2;
    },
    _BaseHandler: function _BaseHandler() {
    },
    RequestInterceptorHandler: function RequestInterceptorHandler(t0) {
      this._completer = t0;
    },
    ResponseInterceptorHandler: function ResponseInterceptorHandler(t0) {
      this._completer = t0;
    },
    ErrorInterceptorHandler: function ErrorInterceptorHandler(t0) {
      this._completer = t0;
    },
    Interceptors: function Interceptors(t0, t1, t2, t3) {
      var _ = this;
      _._list = t0;
      _._requestLock = t1;
      _._responseLock = t2;
      _._errorLock = t3;
      _.length = 0;
    },
    DioForBrowser: function DioForBrowser(t0, t1, t2, t3, t4) {
      var _ = this;
      _.DioMixin___DioMixin_options_A = t0;
      _.DioMixin__interceptors = t1;
      _.DioMixin___DioMixin_httpClientAdapter_A = t2;
      _.DioMixin_transformer = t3;
      _.DioMixin__closed = t4;
    },
    _DioForBrowser_Object_DioMixin: function _DioForBrowser_Object_DioMixin() {
    },
    Headers$fromMap(map) {
      var t1 = type$.List_String;
      return new A.Headers(A.caseInsensitiveKeyMap(map.map$2$1(map, new A.Headers$fromMap_closure(), type$.String, t1), t1));
    },
    Headers: function Headers(t0) {
      this._headers$_map = t0;
    },
    Headers$fromMap_closure: function Headers$fromMap_closure() {
    },
    Headers_toString_closure: function Headers_toString_closure(t0) {
      this.stringBuffer = t0;
    },
    Headers_toString__closure: function Headers_toString__closure(t0, t1) {
      this.stringBuffer = t0;
      this.key = t1;
    },
    BaseOptions$(baseUrl, connectTimeout, headers, receiveTimeout) {
      var _null = null,
        t1 = new A.BaseOptions($, $, $, _null, _null);
      t1._RequestConfig$14$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(_null, _null, _null, headers, _null, _null, _null, _null, receiveTimeout, _null, _null, D.ResponseType_0, _null, _null);
      t1.OptionsMixin___OptionsMixin_queryParameters_A = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.OptionsMixin___OptionsMixin_baseUrl_A = baseUrl;
      t1.OptionsMixin___OptionsMixin_connectTimeout_A = connectTimeout == null ? 0 : connectTimeout;
      return t1;
    },
    Options$() {
      return new A.Options();
    },
    RequestOptions$(baseUrl, connectTimeout, data, extra, followRedirects, headers, listFormat, maxRedirects, method, path, queryParameters, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus) {
      var t1 = new A.RequestOptions(data, path, $, $, $, requestEncoder, responseDecoder);
      t1._RequestConfig$14$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(null, extra, followRedirects, headers, listFormat, maxRedirects, method, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus);
      t1.OptionsMixin___OptionsMixin_queryParameters_A = queryParameters == null ? B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic) : queryParameters;
      t1.OptionsMixin___OptionsMixin_baseUrl_A = baseUrl == null ? "" : baseUrl;
      t1.OptionsMixin___OptionsMixin_connectTimeout_A = connectTimeout == null ? 0 : connectTimeout;
      return t1;
    },
    ResponseType: function ResponseType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ListFormat: function ListFormat(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BaseOptions: function BaseOptions(t0, t1, t2, t3, t4) {
      var _ = this;
      _.OptionsMixin___OptionsMixin_baseUrl_A = t0;
      _.OptionsMixin___OptionsMixin_queryParameters_A = t1;
      _.OptionsMixin___OptionsMixin_connectTimeout_A = t2;
      _.___RequestConfig_receiveTimeout_A = _.___RequestConfig_sendTimeout_A = _.___RequestConfig__headers_A = _.___RequestConfig_method_A = $;
      _._defaultContentType = null;
      _.___RequestConfig_maxRedirects_A = _.___RequestConfig_followRedirects_A = _.___RequestConfig_extra_A = _.___RequestConfig_receiveDataWhenStatusError_A = _.___RequestConfig_validateStatus_A = _.___RequestConfig_responseType_A = $;
      _.requestEncoder = t3;
      _.responseDecoder = t4;
      _.___RequestConfig_listFormat_A = $;
    },
    OptionsMixin: function OptionsMixin() {
    },
    Options: function Options() {
      this.method = null;
    },
    RequestOptions: function RequestOptions(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.data = t0;
      _.path = t1;
      _.onSendProgress = _.onReceiveProgress = _.cancelToken = null;
      _.OptionsMixin___OptionsMixin_baseUrl_A = t2;
      _.OptionsMixin___OptionsMixin_queryParameters_A = t3;
      _.OptionsMixin___OptionsMixin_connectTimeout_A = t4;
      _.___RequestConfig_receiveTimeout_A = _.___RequestConfig_sendTimeout_A = _.___RequestConfig__headers_A = _.___RequestConfig_method_A = $;
      _._defaultContentType = null;
      _.___RequestConfig_maxRedirects_A = _.___RequestConfig_followRedirects_A = _.___RequestConfig_extra_A = _.___RequestConfig_receiveDataWhenStatusError_A = _.___RequestConfig_validateStatus_A = _.___RequestConfig_responseType_A = $;
      _.requestEncoder = t5;
      _.responseDecoder = t6;
      _.___RequestConfig_listFormat_A = $;
    },
    _RequestConfig: function _RequestConfig() {
    },
    _RequestConfig_closure: function _RequestConfig_closure() {
    },
    _BaseOptions__RequestConfig_OptionsMixin: function _BaseOptions__RequestConfig_OptionsMixin() {
    },
    _RequestOptions__RequestConfig_OptionsMixin: function _RequestOptions__RequestConfig_OptionsMixin() {
    },
    Response$(data, extra, headers, isRedirect, redirects, requestOptions, statusCode, statusMessage, $T) {
      var t1 = new A.Response(data, requestOptions, statusCode, statusMessage, isRedirect, $T._eval$1("Response<0>"));
      t1.__Response_headers_A = headers == null ? new A.Headers(A.caseInsensitiveKeyMap(null, type$.List_String)) : headers;
      t1.__Response_extra_A = extra == null ? B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic) : extra;
      t1.__Response_redirects_A = redirects == null ? B._setArrayType([], type$.JSArray_RedirectRecord) : redirects;
      return t1;
    },
    Response: function Response(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.__Response_headers_A = $;
      _.__Response_requestOptions_A = t1;
      _.statusCode = t2;
      _.statusMessage = t3;
      _.__Response_redirects_A = _.__Response_extra_A = $;
      _.isRedirect = t4;
      _.$ti = t5;
    },
    Transformer_urlEncodeMap(map, listFormat) {
      return A.encodeMap(map, new A.Transformer_urlEncodeMap_closure(), listFormat);
    },
    Transformer_isJsonMimeType(contentType) {
      var mediaType, t1, t2;
      if (contentType == null)
        return false;
      mediaType = A.MediaType_MediaType$parse(contentType);
      t1 = mediaType.subtype;
      t2 = mediaType.type + "/" + t1;
      return t2 === "application/json" || t2 === "text/json" || C.JSString_methods.endsWith$1(t1, "+json");
    },
    Transformer: function Transformer() {
    },
    Transformer_urlEncodeMap_closure: function Transformer_urlEncodeMap_closure() {
    },
    DefaultTransformer: function DefaultTransformer() {
    },
    DefaultTransformer_transformResponse_closure: function DefaultTransformer_transformResponse_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.showDownloadProgress = t1;
      this.options = t2;
    },
    DefaultTransformer_transformResponse_closure0: function DefaultTransformer_transformResponse_closure0(t0, t1) {
      this._box_0 = t0;
      this.chunks = t1;
    },
    DefaultTransformer_transformResponse_closure2: function DefaultTransformer_transformResponse_closure2(t0) {
      this.completer = t0;
    },
    DefaultTransformer_transformResponse_closure1: function DefaultTransformer_transformResponse_closure1(t0) {
      this.completer = t0;
    },
    encodeMap(data, handler, listFormat) {
      var t1 = {},
        urlData = new B.StringBuffer("");
      t1.first = true;
      new A.encodeMap_urlEncode(t1, listFormat, "%5B", "%5D", B.core_Uri_encodeQueryComponent$closure(), handler, urlData).call$2(data, "");
      t1 = urlData._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _getSeparatorChar(collectionFormat) {
      switch (collectionFormat.index) {
        case 0:
          return ",";
        case 1:
          return " ";
        case 2:
          return "\\t";
        case 3:
          return "|";
        default:
          return "";
      }
    },
    caseInsensitiveKeyMap(value, $V) {
      var map = B.LinkedHashMap_LinkedHashMap(new A.caseInsensitiveKeyMap_closure(), new A.caseInsensitiveKeyMap_closure0(), null, type$.String, $V);
      if (value != null && value._length !== 0)
        map.addAll$1(0, value);
      return map;
    },
    encodeMap_urlEncode: function encodeMap_urlEncode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.listFormat = t1;
      _.leftBracket = t2;
      _.rightBracket = t3;
      _.encodeComponent = t4;
      _.handler = t5;
      _.urlData = t6;
    },
    encodeMap_urlEncode_closure: function encodeMap_urlEncode_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.path = t0;
      _.urlEncode = t1;
      _.encodeComponent = t2;
      _.leftBracket = t3;
      _.rightBracket = t4;
    },
    caseInsensitiveKeyMap_closure: function caseInsensitiveKeyMap_closure() {
    },
    caseInsensitiveKeyMap_closure0: function caseInsensitiveKeyMap_closure0() {
    },
    CaseInsensitiveMap$from(other, $V) {
      var t1 = new A.CaseInsensitiveMap(new A.CaseInsensitiveMap$from_closure(), B.LinkedHashMap_LinkedHashMap$_empty(type$.String, $V._eval$1("MapEntry<String,0>")), $V._eval$1("CaseInsensitiveMap<0>"));
      t1.addAll$1(0, other);
      return t1;
    },
    CaseInsensitiveMap: function CaseInsensitiveMap(t0, t1, t2) {
      this._canonicalize = t0;
      this._base = t1;
      this.$ti = t2;
    },
    CaseInsensitiveMap$from_closure: function CaseInsensitiveMap$from_closure() {
    },
    MediaType_MediaType$parse(mediaType) {
      return A.wrapFormatException("media type", mediaType, new A.MediaType_MediaType$parse_closure(mediaType));
    },
    MediaType: function MediaType(t0, t1, t2) {
      this.type = t0;
      this.subtype = t1;
      this.parameters = t2;
    },
    MediaType_MediaType$parse_closure: function MediaType_MediaType$parse_closure(t0) {
      this.mediaType = t0;
    },
    MediaType_toString_closure: function MediaType_toString_closure(t0) {
      this.buffer = t0;
    },
    MediaType_toString__closure: function MediaType_toString__closure() {
    },
    expectQuotedString(scanner) {
      var string;
      scanner.expect$2$name($.$get$_quotedString(), "quoted string");
      string = scanner.get$lastMatch().$index(0, 0);
      return B.stringReplaceAllFuncUnchecked(C.JSString_methods.substring$2(string, 1, string.length - 1), $.$get$_quotedPair(), new A.expectQuotedString_closure(), null);
    },
    expectQuotedString_closure: function expectQuotedString_closure() {
    },
    _parseUri(uri) {
      if (type$.Uri._is(uri))
        return uri;
      throw B.wrapException(B.ArgumentError$value(uri, "uri", "Value must be a String or a Uri"));
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new B.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = B._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new B.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new B.MappedListIterable(t4, new A._validateArgList_closure(), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw B.wrapException(B.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, start, i,
        root = style.getRoot$1(path);
      style.isRootRelative$1(path);
      if (root != null)
        path = C.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = B._setArrayType([], t1);
      separators = B._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0 && style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, 0))) {
        separators.push(path[0]);
        start = 1;
      } else {
        separators.push("");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, i))) {
          parts.push(C.JSString_methods.substring$2(path, start, i));
          separators.push(path[i]);
          start = i + 1;
        }
      if (start < t1) {
        parts.push(C.JSString_methods.substring$1(path, start));
        separators.push("");
      }
      return new A.ParsedPath(style, root, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.parts = t2;
      _.separators = t3;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      if (B.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = B.Uri_base();
      if (!C.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (B._Uri__Uri("a/b").toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: function Style() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    FileLocation$_(file, offset) {
      if (offset < 0)
        B.throwExpression(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > file._decodedChars.length)
        B.throwExpression(B.RangeError$("Offset " + offset + string$._must_ + file.get$length(file) + "."));
      return new A.FileLocation(file, offset);
    },
    SourceFile: function SourceFile(t0, t1, t2) {
      var _ = this;
      _.url = t0;
      _._lineStarts = t1;
      _._decodedChars = t2;
      _._cachedLine = null;
    },
    FileLocation: function FileLocation(t0, t1) {
      this.file = t0;
      this.offset = t1;
    },
    _FileSpan: function _FileSpan(t0, t1, t2) {
      this.file = t0;
      this._file$_start = t1;
      this._file$_end = t2;
    },
    Highlighter$(span, color) {
      var t1 = A.Highlighter__collateLines(B._setArrayType([A._Highlight$(span, true)], type$.JSArray__Highlight)),
        t2 = new A.Highlighter_closure(color).call$0(),
        t3 = C.JSInt_methods.toString$0(C.JSArray_methods.get$last(t1).number + 1),
        t4 = A.Highlighter__contiguous(t1) ? 0 : 3,
        t5 = B._arrayInstanceType(t1);
      return new A.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new B.MappedListIterable(t1, new A.Highlighter$__closure(), t5._eval$1("MappedListIterable<1,int>")).reduce$1(0, D.CONSTANT), !A.isAllTheSame(new B.MappedListIterable(t1, new A.Highlighter$__closure0(), t5._eval$1("MappedListIterable<1,Object?>"))), new B.StringBuffer(""));
    },
    Highlighter__contiguous(lines) {
      var i, thisLine, nextLine;
      for (i = 0; i < lines.length - 1;) {
        thisLine = lines[i];
        ++i;
        nextLine = lines[i];
        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))
          return false;
      }
      return true;
    },
    Highlighter__collateLines(highlights) {
      var t1, t2, t3,
        highlightsByUrl = A.groupBy(highlights, new A.Highlighter__collateLines_closure(), type$._Highlight, type$.Object);
      for (t1 = highlightsByUrl.get$values(highlightsByUrl), t2 = B._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new B.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        J.sort$1$ax(t3, new A.Highlighter__collateLines_closure0());
      }
      t1 = highlightsByUrl.get$entries(highlightsByUrl);
      t2 = B._instanceType(t1)._eval$1("ExpandIterable<Iterable.E,_Line>");
      return B.List_List$of(new B.ExpandIterable(t1, new A.Highlighter__collateLines_closure1(), t2), true, t2._eval$1("Iterable.E"));
    },
    _Highlight$(span, primary) {
      return new A._Highlight(new A._Highlight_closure(span).call$0(), true);
    },
    _Highlight__normalizeNewlines(span) {
      var t1, endOffset, i, t2, t3, t4,
        text = span.get$text(span);
      if (!C.JSString_methods.contains$1(text, "\r\n"))
        return span;
      t1 = span.get$end(span);
      endOffset = t1.get$offset(t1);
      for (t1 = text.length - 1, i = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(text, i) === 13 && C.JSString_methods._codeUnitAt$1(text, i + 1) === 10)
          --endOffset;
      t1 = span.get$start(span);
      t2 = span.get$sourceUrl();
      t3 = span.get$end(span);
      t3 = t3.get$line(t3);
      t2 = A.SourceLocation$(endOffset, span.get$end(span).get$column(), t3, t2);
      t3 = B.stringReplaceAllUnchecked(text, "\r\n", "\n");
      t4 = span.get$context(span);
      return A.SourceSpanWithContext$(t1, t2, t3, B.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
    },
    _Highlight__normalizeTrailingNewline(span) {
      var context, text, start, end, t1, t2, t3;
      if (!C.JSString_methods.endsWith$1(span.get$context(span), "\n"))
        return span;
      if (C.JSString_methods.endsWith$1(span.get$text(span), "\n\n"))
        return span;
      context = C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1);
      text = span.get$text(span);
      start = span.get$start(span);
      end = span.get$end(span);
      if (C.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
        t1 = A.findLineStart(span.get$context(span), span.get$text(span), span.get$start(span).get$column());
        t1.toString;
        t1 = t1 + span.get$start(span).get$column() + span.get$length(span) === span.get$context(span).length;
      } else
        t1 = false;
      if (t1) {
        text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
        if (text.length === 0)
          end = start;
        else {
          t1 = span.get$end(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$sourceUrl();
          t3 = span.get$end(span);
          t3 = t3.get$line(t3);
          end = A.SourceLocation$(t1 - 1, A._Highlight__lastLineLength(context), t3 - 1, t2);
          t1 = span.get$start(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$end(span);
          start = t1 === t2.get$offset(t2) ? end : span.get$start(span);
        }
      }
      return A.SourceSpanWithContext$(start, end, text, context);
    },
    _Highlight__normalizeEndOfLine(span) {
      var t1, t2, text, t3, t4;
      if (span.get$end(span).get$column() !== 0)
        return span;
      t1 = span.get$end(span);
      t1 = t1.get$line(t1);
      t2 = span.get$start(span);
      if (t1 === t2.get$line(t2))
        return span;
      text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
      t1 = span.get$start(span);
      t2 = span.get$end(span);
      t2 = t2.get$offset(t2);
      t3 = span.get$sourceUrl();
      t4 = span.get$end(span);
      t4 = t4.get$line(t4);
      t3 = A.SourceLocation$(t2 - 1, text.length - C.JSString_methods.lastIndexOf$1(text, "\n") - 1, t4 - 1, t3);
      return A.SourceSpanWithContext$(t1, t3, text, C.JSString_methods.endsWith$1(span.get$context(span), "\n") ? C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1) : span.get$context(span));
    },
    _Highlight__lastLineLength(text) {
      var t1 = text.length;
      if (t1 === 0)
        return 0;
      else if (C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 10)
        return t1 === 1 ? 0 : t1 - C.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1;
      else
        return t1 - C.JSString_methods.lastIndexOf$1(text, "\n") - 1;
    },
    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._lines = t0;
      _._primaryColor = t1;
      _._secondaryColor = t2;
      _._paddingBeforeSidebar = t3;
      _._maxMultilineSpans = t4;
      _._multipleFiles = t5;
      _._highlighter$_buffer = t6;
    },
    Highlighter_closure: function Highlighter_closure(t0) {
      this.color = t0;
    },
    Highlighter$__closure: function Highlighter$__closure() {
    },
    Highlighter$___closure: function Highlighter$___closure() {
    },
    Highlighter$__closure0: function Highlighter$__closure0() {
    },
    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {
    },
    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {
    },
    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {
    },
    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {
      this.line = t0;
    },
    Highlighter_highlight_closure: function Highlighter_highlight_closure() {
    },
    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {
      this.$this = t0;
      this.startLine = t1;
      this.line = t2;
    },
    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {
      this.$this = t0;
      this.highlight = t1;
    },
    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.current = t2;
      _.startLine = t3;
      _.line = t4;
      _.highlight = t5;
      _.endLine = t6;
    },
    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {
      this.$this = t0;
      this.vertical = t1;
    },
    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.startColumn = t2;
      _.endColumn = t3;
    },
    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.coversWholeLine = t1;
      _.line = t2;
      _.highlight = t3;
    },
    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.end = t2;
    },
    _Highlight: function _Highlight(t0, t1) {
      this.span = t0;
      this.isPrimary = t1;
    },
    _Highlight_closure: function _Highlight_closure(t0) {
      this.span = t0;
    },
    _Line: function _Line(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.number = t1;
      _.url = t2;
      _.highlights = t3;
    },
    SourceLocation$(offset, column, line, sourceUrl) {
      if (offset < 0)
        B.throwExpression(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (line < 0)
        B.throwExpression(B.RangeError$("Line may not be negative, was " + line + "."));
      else if (column < 0)
        B.throwExpression(B.RangeError$("Column may not be negative, was " + column + "."));
      return new A.SourceLocation(sourceUrl, offset, line, column);
    },
    SourceLocation: function SourceLocation(t0, t1, t2, t3) {
      var _ = this;
      _.sourceUrl = t0;
      _.offset = t1;
      _.line = t2;
      _.column = t3;
    },
    SourceLocationMixin: function SourceLocationMixin() {
    },
    SourceSpanBase: function SourceSpanBase() {
    },
    SourceSpanFormatException$(message, span, source) {
      return new A.SourceSpanFormatException(source, message, span);
    },
    SourceSpanException: function SourceSpanException() {
    },
    SourceSpanFormatException: function SourceSpanFormatException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    SourceSpanMixin: function SourceSpanMixin() {
    },
    SourceSpanWithContext$(start, end, text, _context) {
      var t1 = new A.SourceSpanWithContext(_context, start, end, text);
      t1.SourceSpanBase$3(start, end, text);
      if (!C.JSString_methods.contains$1(_context, text))
        B.throwExpression(B.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".', null));
      if (A.findLineStart(_context, text, start.get$column()) == null)
        B.throwExpression(B.ArgumentError$('The span text "' + text + '" must start at column ' + (start.get$column() + 1) + ' in a line within "' + _context + '".', null));
      return t1;
    },
    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {
      var _ = this;
      _._context = t0;
      _.start = t1;
      _.end = t2;
      _.text = t3;
    },
    StringScannerException: function StringScannerException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    StringScanner: function StringScanner(t0, t1) {
      var _ = this;
      _.sourceUrl = t0;
      _.string = t1;
      _._string_scanner$_position = 0;
      _._lastMatchPosition = _._lastMatch = null;
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = B._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    groupBy(values, key, $S, $T) {
      var t1, _i, element, t2, t3,
        map = B.LinkedHashMap_LinkedHashMap$_empty($T, $S._eval$1("List<0>"));
      for (t1 = $S._eval$1("JSArray<0>"), _i = 0; _i < 1; ++_i) {
        element = values[_i];
        t2 = key.call$1(element);
        t3 = map.$index(0, t2);
        if (t3 == null) {
          t3 = B._setArrayType([], t1);
          map.$indexSet(0, t2, t3);
          t2 = t3;
        } else
          t2 = t3;
        J.add$1$ax(t2, element);
      }
      return map;
    },
    wrapFormatException($name, value, body) {
      var error, error0, t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        t1 = B.unwrapException(exception);
        if (t1 instanceof A.SourceSpanFormatException) {
          error = t1;
          throw B.wrapException(A.SourceSpanFormatException$("Invalid " + $name + ": " + error._span_exception$_message, error._span, J.get$source$z(error)));
        } else if (type$.FormatException._is(t1)) {
          error0 = t1;
          throw B.wrapException(B.FormatException$("Invalid " + $name + ' "' + value + '": ' + J.get$message$z(error0), J.get$source$z(error0), J.get$offset$x(error0)));
        } else
          throw exception;
      }
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = B.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(B.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() == $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : C.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    isDriveLetter(path, index) {
      var t1 = path.length,
        t2 = index + 2;
      if (t1 < t2)
        return false;
      if (!A.isAlphabetic(C.JSString_methods.codeUnitAt$1(path, index)))
        return false;
      if (C.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)
        return false;
      if (t1 === t2)
        return true;
      return C.JSString_methods.codeUnitAt$1(path, t2) === 47;
    },
    isAllTheSame(iter) {
      var firstValue, t1, t2, value;
      if (iter.get$length(iter) === 0)
        return true;
      firstValue = iter.get$first(iter);
      for (t1 = B.SubListIterable$(iter, 1, null, iter.$ti._eval$1("ListIterable.E")), t2 = t1.$ti, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        value = t1.__internal$_current;
        if (!J.$eq$(value == null ? t2._as(value) : value, firstValue))
          return false;
      }
      return true;
    },
    replaceFirstNull(list, element) {
      var index = C.JSArray_methods.indexOf$1(list, null);
      if (index < 0)
        throw B.wrapException(B.ArgumentError$(B.S(list) + " contains no null elements.", null));
      list[index] = element;
    },
    replaceWithNull(list, element) {
      var index = C.JSArray_methods.indexOf$1(list, element);
      if (index < 0)
        throw B.wrapException(B.ArgumentError$(B.S(list) + " contains no elements matching " + element.toString$0(0) + ".", null));
      list[index] = null;
    },
    countCodeUnits(string, codeUnit) {
      var t1, t2, count, t3;
      for (t1 = new B.CodeUnits(string), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === codeUnit)
          ++count;
      }
      return count;
    },
    findLineStart(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = C.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1)
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = C.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : C.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = C.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return null;
    }
  },
  B, C, J, D;
  A = hunkHelpers.updateHolder(holdersList[20], A);
  B = holdersList[0];
  C = holdersList[2];
  J = holdersList[1];
  D = holdersList[35];
  A.Instantiation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation && this._genericClosure.$eq(0, other._genericClosure) && B.getRuntimeType(this) === B.getRuntimeType(other);
    },
    get$hashCode(_) {
      return B.Object_hash(this._genericClosure, B.getRuntimeType(this), C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = C.JSArray_methods.join$1([B.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$1(a0) {
      return this._genericClosure.call$1$1(a0, this.$ti._rest[0]);
    },
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(B.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A._StreamSinkTransformer.prototype = {
    bind$1(stream) {
      var t1 = this.$ti;
      return new B._BoundSinkStream(this._sinkMapper, stream, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("_BoundSinkStream<1,2>"));
    }
  };
  A._HandlerEventSink.prototype = {
    add$1(_, data) {
      var sink = this._async$_sink;
      if (sink == null)
        throw B.wrapException(B.StateError$("Sink is closed"));
      this._handleData.call$2(data, sink);
    },
    addError$2(error, stackTrace) {
      var sink;
      B.checkNotNullable(error, "error", type$.Object);
      sink = this._async$_sink;
      if (sink == null)
        throw B.wrapException(B.StateError$("Sink is closed"));
      sink.addError$2(error, stackTrace);
    },
    close$0(_) {
      var t1,
        sink = this._async$_sink;
      if (sink == null)
        return;
      this._async$_sink = null;
      t1 = sink._async$_sink;
      if ((t1._state & 2) !== 0)
        B.throwExpression(B.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_close();
    },
    $isEventSink: 1
  };
  A._StreamHandlerTransformer.prototype = {};
  A._ByteCallbackSink.prototype = {
    add$1(_, chunk) {
      var v, grown, _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = J.getInterceptor$asx(chunk);
      if (t3.get$length(chunk) > t1.length - t2) {
        t1 = _this._buffer;
        v = t3.get$length(chunk) + t1.length - 1;
        v |= C.JSInt_methods._shrOtherPositive$1(v, 1);
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t1 = _this._buffer;
        C.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
        _this._buffer = grown;
      }
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      C.NativeUint8List_methods.setRange$3(t1, t2, t2 + t3.get$length(chunk), chunk);
      _this._bufferIndex = _this._bufferIndex + t3.get$length(chunk);
    },
    close$0(_) {
      this._convert$_callback.call$1(C.NativeUint8List_methods.sublist$2(this._buffer, 0, this._bufferIndex));
    }
  };
  A.CanonicalizedMap.prototype = {
    $index(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.$index(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.get$value(pair);
    },
    $indexSet(_, key, value) {
      var t1, _this = this;
      if (!_this._isValidKey$1(key))
        return;
      t1 = _this.$ti;
      _this._base.$indexSet(0, _this._canonicalize.call$1(key), new B.MapEntry(key, value, t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>")));
    },
    addAll$1(_, other) {
      other.forEach$1(0, new A.CanonicalizedMap_addAll_closure(this));
    },
    cast$2$0(_, K2, V2) {
      var t1 = this._base;
      return t1.cast$2$0(t1, K2, V2);
    },
    containsKey$1(_, key) {
      var _this = this;
      if (!_this._isValidKey$1(key))
        return false;
      return _this._base.containsKey$1(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
    },
    get$entries(_) {
      var t1 = this._base;
      return t1.get$entries(t1).map$1$1(0, new A.CanonicalizedMap_entries_closure(this), this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"));
    },
    forEach$1(_, f) {
      this._base.forEach$1(0, new A.CanonicalizedMap_forEach_closure(this, f));
    },
    get$isEmpty(_) {
      return this._base._length === 0;
    },
    get$isNotEmpty(_) {
      return this._base._length !== 0;
    },
    get$keys(_) {
      var t1 = this._base;
      t1 = t1.get$values(t1);
      return B.MappedIterable_MappedIterable(t1, new A.CanonicalizedMap_keys_closure(this), B._instanceType(t1)._eval$1("Iterable.E"), this.$ti._eval$1("CanonicalizedMap.K"));
    },
    get$length(_) {
      return this._base._length;
    },
    map$2$1(_, transform, K2, V2) {
      var t1 = this._base;
      return t1.map$2$1(t1, new A.CanonicalizedMap_map_closure(this, transform, K2, V2), K2, V2);
    },
    putIfAbsent$2(_, key, ifAbsent) {
      return J.get$value$z(this._base.putIfAbsent$2(0, this._canonicalize.call$1(key), new A.CanonicalizedMap_putIfAbsent_closure(this, key, ifAbsent)));
    },
    remove$1(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.remove$1(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.get$value(pair);
    },
    get$values(_) {
      var t1 = this._base;
      t1 = t1.get$values(t1);
      return B.MappedIterable_MappedIterable(t1, new A.CanonicalizedMap_values_closure(this), B._instanceType(t1)._eval$1("Iterable.E"), this.$ti._eval$1("CanonicalizedMap.V"));
    },
    toString$0(_) {
      return B.MapBase_mapToString(this);
    },
    _isValidKey$1(key) {
      var t1;
      if (this.$ti._eval$1("CanonicalizedMap.K")._is(key))
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    $isMap: 1
  };
  A.ResponseBody.prototype = {};
  A.BrowserHttpClientAdapter.prototype = {
    fetch$3(_, options, requestStream, cancelFuture) {
      return this.fetch$body$BrowserHttpClientAdapter(0, options, requestStream, cancelFuture);
    },
    fetch$body$BrowserHttpClientAdapter(_, options, requestStream, cancelFuture) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.ResponseBody),
        $async$returnValue, $async$self = this, t2, _url, t3, s, t4, query, _withCredentials, completer, t5, _completer, sink, t1, xhr, $async$temp1;
      var $async$fetch$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              xhr = new XMLHttpRequest();
              $async$self._xhrs.add$1(0, xhr);
              t2 = options.___RequestConfig_method_A;
              t2 === $ && B.throwUnnamedLateFieldNI();
              _url = options.path;
              if (!C.JSString_methods.startsWith$1(_url, B.RegExp_RegExp("https?:", true, false))) {
                t3 = options.OptionsMixin___OptionsMixin_baseUrl_A;
                t3 === $ && B.throwUnnamedLateFieldNI();
                _url = t3 + _url;
                s = _url.split(":/");
                if (s.length === 2) {
                  t3 = J.$add$ansx(s[0], ":/");
                  t4 = s[1];
                  _url = t3 + B.stringReplaceAllUnchecked(t4, "//", "/");
                }
              }
              t3 = options.OptionsMixin___OptionsMixin_queryParameters_A;
              t3 === $ && B.throwUnnamedLateFieldNI();
              t4 = options.___RequestConfig_listFormat_A;
              t4 === $ && B.throwUnnamedLateFieldNI();
              query = A.Transformer_urlEncodeMap(t3, t4);
              if (query.length !== 0)
                _url += (C.JSString_methods.contains$1(_url, "?") ? "&" : "?") + query;
              C.HttpRequest_methods.open$2(xhr, t2, B.Uri_parse(_url, 0, null).normalizePath$0().toString$0(0));
              xhr.responseType = "arraybuffer";
              t2 = options.___RequestConfig_extra_A;
              t2 === $ && B.throwUnnamedLateFieldNI();
              _withCredentials = t2.$index(0, "withCredentials");
              if (_withCredentials != null)
                xhr.withCredentials = J.$eq$(_withCredentials, true);
              else
                xhr.withCredentials = false;
              t2 = options.___RequestConfig__headers_A;
              t2 === $ && B.throwUnnamedLateFieldNI();
              t2.remove$1(0, "content-length");
              options.___RequestConfig__headers_A.forEach$1(0, new A.BrowserHttpClientAdapter_fetch_closure(xhr));
              t2 = options.OptionsMixin___OptionsMixin_connectTimeout_A;
              t2 === $ && B.throwUnnamedLateFieldNI();
              if (t2 > 0) {
                t3 = options.___RequestConfig_receiveTimeout_A;
                t3 === $ && B.throwUnnamedLateFieldNI();
                t3 = t3 > 0;
              } else
                t3 = false;
              if (t3) {
                t3 = options.___RequestConfig_receiveTimeout_A;
                t3 === $ && B.throwUnnamedLateFieldNI();
                xhr.timeout = t2 + t3;
              }
              t2 = new B._Future($.Zone__current, type$._Future_ResponseBody);
              completer = new B._AsyncCompleter(t2, type$._AsyncCompleter_ResponseBody);
              t3 = type$._EventStream_ProgressEvent;
              t4 = new B._EventStream(xhr, "load", false, t3);
              t5 = type$.Null;
              t4.get$first(t4).then$1$1(new A.BrowserHttpClientAdapter_fetch_closure0(xhr, completer), t5);
              t1.haveSent = false;
              t4 = options.OptionsMixin___OptionsMixin_connectTimeout_A;
              if (t4 > 0)
                B.Future_Future$delayed(B.Duration$(0, t4), type$.dynamic).then$1$1(new A.BrowserHttpClientAdapter_fetch_closure1(t1, completer, options, xhr), t5);
              t1.sendStart = 0;
              t4 = type$.ProgressEvent;
              B._EventStreamSubscription$(xhr.upload, "progress", new A.BrowserHttpClientAdapter_fetch_closure2(t1, options, completer, xhr), false, t4);
              t1.receiveStart = 0;
              B._EventStreamSubscription$(xhr, "progress", new A.BrowserHttpClientAdapter_fetch_closure3(t1, options, completer, xhr), false, t4);
              t3 = new B._EventStream(xhr, "error", false, t3);
              t3.get$first(t3).then$1$1(new A.BrowserHttpClientAdapter_fetch_closure4(completer, options), t5);
              $async$goto = requestStream != null ? 3 : 5;
              break;
            case 3:
              // then
              t1 = new B._Future($.Zone__current, type$._Future_Uint8List);
              _completer = new B._AsyncCompleter(t1, type$._AsyncCompleter_Uint8List);
              sink = new A._ByteCallbackSink(new A.BrowserHttpClientAdapter_fetch_closure5(_completer), new Uint8Array(1024));
              requestStream.listen$4$cancelOnError$onDone$onError(sink.get$add(sink), true, sink.get$close(sink), _completer.get$completeError());
              $async$temp1 = xhr;
              $async$goto = 6;
              return B._asyncAwait(t1, $async$fetch$3);
            case 6:
              // returning from await.
              $async$temp1.send($async$result);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              xhr.send();
            case 4:
              // join
              $async$returnValue = t2.whenComplete$1(new A.BrowserHttpClientAdapter_fetch_closure6($async$self, xhr));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$fetch$3, $async$completer);
    }
  };
  A.DioErrorType.prototype = {
    toString$0(_) {
      return "DioErrorType." + this._core$_name;
    }
  };
  A.DioError.prototype = {
    toString$0(_) {
      var msg,
        t1 = this.type.toString$0(0),
        t2 = this.error,
        t3 = t2 == null ? null : J.toString$0$(t2);
      if (t3 == null)
        t3 = "";
      msg = "DioError [" + t1 + "]: " + t3;
      if (type$.Error._is(t2))
        msg += "\n" + B.S(t2.get$stackTrace());
      t1 = this._stackTrace;
      return t1 != null ? msg + ("\nSource stack:\n" + t1.toString$0(0)) : msg;
    },
    $isException: 1
  };
  A.DioMixin.prototype = {
    $get$1$2$queryParameters(_, path, queryParameters, $T) {
      var options = A.Options$();
      options.method = "GET";
      return this.request$1$5$cancelToken$onReceiveProgress$options$queryParameters(0, path, null, null, options, queryParameters, $T);
    },
    $get$1$1($receiver, path, $T) {
      return this.$get$1$2$queryParameters($receiver, path, null, $T);
    },
    request$1$5$cancelToken$onReceiveProgress$options$queryParameters(_, path, cancelToken, onReceiveProgress, options, queryParameters, $T) {
      return this.request$body$DioMixin(0, path, cancelToken, onReceiveProgress, options, queryParameters, $T, $T._eval$1("Response<0>"));
    },
    request$body$DioMixin(_, path, cancelToken, onReceiveProgress, options, queryParameters, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t2, t3, query, t4, _headers, _extra, _method, t5, t6, t7, t8, t9, t10, t11, requestOptions, t1;
      var $async$request$1$5$cancelToken$onReceiveProgress$options$queryParameters = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.DioMixin___DioMixin_options_A;
              t1 === $ && B.throwUnnamedLateFieldNI();
              t2 = type$.String;
              t3 = type$.dynamic;
              query = B.LinkedHashMap_LinkedHashMap$_empty(t2, t3);
              t4 = t1.OptionsMixin___OptionsMixin_queryParameters_A;
              t4 === $ && B.throwUnnamedLateFieldNI();
              query.addAll$1(0, t4);
              if (queryParameters != null)
                query.addAll$1(0, queryParameters);
              t4 = t1.___RequestConfig__headers_A;
              t4 === $ && B.throwUnnamedLateFieldNI();
              _headers = A.caseInsensitiveKeyMap(t4, t3);
              _headers.remove$1(0, "content-type");
              t4 = t1.___RequestConfig_extra_A;
              t4 === $ && B.throwUnnamedLateFieldNI();
              _extra = B.LinkedHashMap_LinkedHashMap$from(t4, t2, t3);
              t2 = options.method;
              if (t2 == null) {
                t2 = t1.___RequestConfig_method_A;
                t2 === $ && B.throwUnnamedLateFieldNI();
              }
              _method = t2.toUpperCase();
              t2 = t1.OptionsMixin___OptionsMixin_baseUrl_A;
              t2 === $ && B.throwUnnamedLateFieldNI();
              t3 = t1.OptionsMixin___OptionsMixin_connectTimeout_A;
              t3 === $ && B.throwUnnamedLateFieldNI();
              t4 = t1.___RequestConfig_sendTimeout_A;
              t4 === $ && B.throwUnnamedLateFieldNI();
              t5 = t1.___RequestConfig_receiveTimeout_A;
              t5 === $ && B.throwUnnamedLateFieldNI();
              t6 = t1.___RequestConfig_responseType_A;
              t6 === $ && B.throwUnnamedLateFieldNI();
              t7 = t1.___RequestConfig_validateStatus_A;
              t7 === $ && B.throwUnnamedLateFieldNI();
              t8 = t1.___RequestConfig_receiveDataWhenStatusError_A;
              t8 === $ && B.throwUnnamedLateFieldNI();
              t9 = t1.___RequestConfig_followRedirects_A;
              t9 === $ && B.throwUnnamedLateFieldNI();
              t10 = t1.___RequestConfig_maxRedirects_A;
              t10 === $ && B.throwUnnamedLateFieldNI();
              t11 = t1.___RequestConfig_listFormat_A;
              t11 === $ && B.throwUnnamedLateFieldNI();
              requestOptions = A.RequestOptions$(t2, t3, null, _extra, t9, _headers, t11, t10, _method, path, query, t8, t5, t1.requestEncoder, t1.responseDecoder, t6, t4, t7);
              requestOptions.onReceiveProgress = onReceiveProgress;
              requestOptions.onSendProgress = null;
              requestOptions.cancelToken = cancelToken;
              t1 = t1.contentTypeWithRequestBody$1(_method);
              requestOptions.set$contentType(0, t1);
              requestOptions.onReceiveProgress = onReceiveProgress;
              requestOptions.onSendProgress = null;
              requestOptions.cancelToken = cancelToken;
              $async$returnValue = $async$self.fetch$1$1(0, requestOptions, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$request$1$5$cancelToken$onReceiveProgress$options$queryParameters, $async$completer);
    },
    fetch$1$1(_, requestOptions, $T) {
      return this.fetch$body$DioMixin(0, requestOptions, $T, $T._eval$1("Response<0>"));
    },
    fetch$body$DioMixin(_, requestOptions, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, stackTrace, t2, t3, t4, t1;
      var $async$fetch$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t1.requestOptions = requestOptions;
              stackTrace = B.StackTrace_current();
              if (B.createRuntimeType($T) !== C.Type_dynamic_0Rz) {
                t2 = requestOptions.___RequestConfig_responseType_A;
                t2 === $ && B.throwUnnamedLateFieldNI();
                t2 = !(t2 === D.ResponseType_3 || t2 === D.ResponseType_1);
              } else
                t2 = false;
              if (t2)
                if (B.createRuntimeType($T) === C.Type_String_k8F)
                  requestOptions.___RequestConfig_responseType_A = D.ResponseType_2;
                else
                  requestOptions.___RequestConfig_responseType_A = D.ResponseType_0;
              t2 = new A.DioMixin_fetch__requestInterceptorWrapper(t1, $async$self);
              t3 = type$.dynamic;
              t1.future = B.Future_Future(new A.DioMixin_fetch_closure(t1), t3);
              t4 = $async$self.DioMixin__interceptors;
              t4.forEach$1(t4, new A.DioMixin_fetch_closure0(t1, t2));
              t1.future = t1.future.then$1$1(t2.call$1(new A.DioMixin_fetch_closure1(t1, $async$self)), t3);
              t4.forEach$1(t4, new A.DioMixin_fetch_closure2(t1, new A.DioMixin_fetch__responseInterceptorWrapper(t1, $async$self)));
              t4.forEach$1(t4, new A.DioMixin_fetch_closure3(t1, new A.DioMixin_fetch__errorInterceptorWrapper(t1, $async$self)));
              $async$returnValue = t1.future.then$1$1(new A.DioMixin_fetch_closure4(t1, $T), $T._eval$1("Response<0>")).catchError$1(new A.DioMixin_fetch_closure5(t1, stackTrace, $T));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$fetch$1$1, $async$completer);
    },
    _dispatchRequest$1$1(reqOpt, $T) {
      return this._dispatchRequest$body$DioMixin(reqOpt, $T, $T._eval$1("Response<0>"));
    },
    _dispatchRequest$body$DioMixin(reqOpt, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, stream, headers, ret, statusOk, forceConvert, contentType, e, t1, t2, t3, t4, forceConvert0, exception, cancelToken, responseBody, $async$exception, $async$temp1, $async$temp2;
      var $async$_dispatchRequest$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              cancelToken = reqOpt.cancelToken;
              responseBody = null;
              $async$handler = 4;
              $async$goto = 7;
              return B._asyncAwait($async$self._transformData$1(reqOpt), $async$_dispatchRequest$1$1);
            case 7:
              // returning from await.
              stream = $async$result;
              t1 = $async$self.DioMixin___DioMixin_httpClientAdapter_A;
              t1 === $ && B.throwUnnamedLateFieldNI();
              t2 = cancelToken;
              t2 = t2 == null ? null : t2.get$whenCancel();
              $async$goto = 8;
              return B._asyncAwait(t1.fetch$3(0, reqOpt, stream, t2), $async$_dispatchRequest$1$1);
            case 8:
              // returning from await.
              responseBody = $async$result;
              t2 = responseBody;
              t1 = responseBody.__ResponseBody_headers_A;
              t1 === $ && B.throwUnnamedLateFieldNI();
              t2.__ResponseBody_headers_A = t1;
              t1 = responseBody.__ResponseBody_headers_A;
              t1 === $ && B.throwUnnamedLateFieldNI();
              headers = A.Headers$fromMap(t1);
              responseBody.toString;
              t1 = B._setArrayType([], type$.JSArray_RedirectRecord);
              t2 = responseBody.isRedirect;
              t3 = responseBody.statusCode;
              t4 = responseBody.statusMessage;
              ret = A.Response$(null, responseBody.extra, headers, t2, t1, reqOpt, t3, t4, $T);
              statusOk = reqOpt.validateStatus$1(responseBody.statusCode);
              if (!statusOk) {
                t1 = reqOpt.___RequestConfig_receiveDataWhenStatusError_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
              } else
                t1 = true;
              $async$goto = t1 ? 9 : 11;
              break;
            case 9:
              // then
              if (!(B.createRuntimeType($T) === C.Type_dynamic_0Rz || B.createRuntimeType($T) === C.Type_String_k8F)) {
                t1 = reqOpt.___RequestConfig_responseType_A;
                t1 === $ && B.throwUnnamedLateFieldNI();
                forceConvert0 = !(t1 === D.ResponseType_3 || t1 === D.ResponseType_1);
              } else
                forceConvert0 = false;
              forceConvert = forceConvert0;
              contentType = null;
              if (forceConvert) {
                contentType = J.value$1$z(headers, "content-type");
                J.$set$2$z(headers, "content-type", "application/json; charset=utf-8");
              }
              $async$temp1 = ret;
              $async$temp2 = $T._eval$1("0?");
              $async$goto = 12;
              return B._asyncAwait($async$self.DioMixin_transformer.transformResponse$2(reqOpt, responseBody), $async$_dispatchRequest$1$1);
            case 12:
              // returning from await.
              $async$temp1.data = $async$temp2._as($async$result);
              if (forceConvert)
                J.$set$2$z(headers, "content-type", contentType);
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              $async$goto = 13;
              return B._asyncAwait(responseBody.stream.listen$1(null).cancel$0(0), $async$_dispatchRequest$1$1);
            case 13:
              // returning from await.
            case 10:
              // join
              if (statusOk) {
                t1 = A.DioMixin_checkIfNeedEnqueue($async$self.DioMixin__interceptors._responseLock, new A.DioMixin__dispatchRequest_closure(ret, $T), $T._eval$1("Response<0>"));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } else {
                t1 = A.DioError$("Http status error [" + B.S(responseBody.statusCode) + "]", reqOpt, ret, D.DioErrorType_3);
                throw B.wrapException(t1);
              }
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = B.unwrapException($async$exception);
              t1 = A.DioMixin_assureDioError(e, reqOpt, null);
              throw B.wrapException(t1);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_dispatchRequest$1$1, $async$completer);
    },
    _transformData$1(options) {
      return this._transformData$body$DioMixin(options);
    },
    _transformData$body$DioMixin(options) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_Stream_Uint8List),
        $async$returnValue;
      var $async$_transformData$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_transformData$1, $async$completer);
    }
  };
  A.Lock.prototype = {};
  A.InterceptorResultType.prototype = {
    toString$0(_) {
      return "InterceptorResultType." + this._core$_name;
    }
  };
  A.InterceptorState.prototype = {
    get$data(receiver) {
      return this.data;
    }
  };
  A._BaseHandler.prototype = {};
  A.RequestInterceptorHandler.prototype = {};
  A.ResponseInterceptorHandler.prototype = {};
  A.ErrorInterceptorHandler.prototype = {};
  A.Interceptors.prototype = {
    $index(_, index) {
      return this._list[index];
    },
    $indexSet(_, index, value) {
      var t1 = this._list;
      if (t1.length === index)
        t1.push(value);
      else
        t1[index] = value;
    },
    get$length(receiver) {
      return this.length;
    },
    set$length(receiver, val) {
      return this.length = val;
    }
  };
  A.DioForBrowser.prototype = {};
  A._DioForBrowser_Object_DioMixin.prototype = {};
  A.Headers.prototype = {
    $index(_, $name) {
      return this._headers$_map.$index(0, C.JSString_methods.trim$0($name).toLowerCase());
    },
    value$1(_, $name) {
      var t2,
        t1 = this._headers$_map.$index(0, C.JSString_methods.trim$0($name).toLowerCase());
      if (t1 == null)
        return null;
      t2 = J.getInterceptor$asx(t1);
      if (t2.get$length(t1) === 1)
        return t2.get$first(t1);
      throw B.wrapException(B.Exception_Exception('"' + $name + '" header has more than one value, please use Headers[name]'));
    },
    $set$2(_, $name, value) {
      if (value == null)
        return;
      this._headers$_map.$indexSet(0, C.JSString_methods.trim$0($name).toLowerCase(), B._setArrayType([C.JSString_methods.trim$0(value)], type$.JSArray_String));
    },
    toString$0(_) {
      var t1,
        stringBuffer = new B.StringBuffer("");
      this._headers$_map.forEach$1(0, new A.Headers_toString_closure(stringBuffer));
      t1 = stringBuffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.ResponseType.prototype = {
    toString$0(_) {
      return "ResponseType." + this._core$_name;
    }
  };
  A.ListFormat.prototype = {
    toString$0(_) {
      return "ListFormat." + this._core$_name;
    }
  };
  A.BaseOptions.prototype = {
    contentTypeWithRequestBody$1(method) {
      var t1;
      if (C.JSArray_methods.contains$1(D.List_POST_PUT_PATCH_DELETE, method)) {
        t1 = this.___RequestConfig__headers_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t1 = B._asStringQ(t1.$index(0, "content-type"));
      } else
        t1 = null;
      return t1;
    }
  };
  A.OptionsMixin.prototype = {};
  A.Options.prototype = {};
  A.RequestOptions.prototype = {
    get$data(receiver) {
      return this.data;
    }
  };
  A._RequestConfig.prototype = {
    _RequestConfig$14$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(contentType, extra, followRedirects, headers, listFormat, maxRedirects, method, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus) {
      var contentTypeInHeader, _this = this,
        _s12_ = "content-type",
        t1 = type$.dynamic,
        t2 = A.caseInsensitiveKeyMap(headers, t1);
      _this.___RequestConfig__headers_A = t2;
      if (_this._defaultContentType != null && !t2.containsKey$1(0, _s12_))
        _this.___RequestConfig__headers_A.$indexSet(0, _s12_, _this._defaultContentType);
      contentTypeInHeader = _this.___RequestConfig__headers_A.containsKey$1(0, _s12_);
      _this.___RequestConfig_method_A = method == null ? "GET" : method;
      _this.___RequestConfig_sendTimeout_A = sendTimeout == null ? 0 : sendTimeout;
      _this.___RequestConfig_receiveTimeout_A = receiveTimeout == null ? 0 : receiveTimeout;
      _this.___RequestConfig_listFormat_A = listFormat == null ? D.ListFormat_4 : listFormat;
      _this.___RequestConfig_extra_A = extra == null ? B.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1) : extra;
      _this.___RequestConfig_followRedirects_A = followRedirects !== false;
      _this.___RequestConfig_maxRedirects_A = maxRedirects == null ? 5 : maxRedirects;
      _this.___RequestConfig_receiveDataWhenStatusError_A = receiveDataWhenStatusError !== false;
      _this.___RequestConfig_validateStatus_A = validateStatus == null ? new A._RequestConfig_closure() : validateStatus;
      _this.___RequestConfig_responseType_A = responseType == null ? D.ResponseType_0 : responseType;
      if (!contentTypeInHeader)
        _this.set$contentType(0, "application/json; charset=utf-8");
    },
    set$contentType(_, contentType) {
      var t1, t2, _this = this,
        _s12_ = "content-type";
      if (contentType != null) {
        t1 = _this.___RequestConfig__headers_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t2 = C.JSString_methods.trim$0(contentType);
        _this._defaultContentType = t2;
        t1.$indexSet(0, _s12_, t2);
      } else {
        _this._defaultContentType = null;
        t1 = _this.___RequestConfig__headers_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        t1.remove$1(0, _s12_);
      }
    },
    get$validateStatus() {
      var t1 = this.___RequestConfig_validateStatus_A;
      t1 === $ && B.throwUnnamedLateFieldNI();
      return t1;
    },
    validateStatus$1(arg0) {
      return this.get$validateStatus().call$1(arg0);
    }
  };
  A._BaseOptions__RequestConfig_OptionsMixin.prototype = {};
  A._RequestOptions__RequestConfig_OptionsMixin.prototype = {};
  A.Response.prototype = {
    toString$0(_) {
      var t1 = this.data;
      if (type$.Map_dynamic_dynamic._is(t1))
        return C.C_JsonCodec.encode$1(t1);
      return J.toString$0$(t1);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.Transformer.prototype = {};
  A.DefaultTransformer.prototype = {
    transformResponse$2(options, response) {
      return this.transformResponse$body$DefaultTransformer(options, response);
    },
    transformResponse$body$DefaultTransformer(options, response) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, completer, t2, t3, stream, chunks, responseBytes, chunkOffset, _i, chunk, responseBody, _box_0, t1;
      var $async$transformResponse$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              t1 = options.___RequestConfig_responseType_A;
              t1 === $ && B.throwUnnamedLateFieldNI();
              if (t1 === D.ResponseType_1) {
                $async$returnValue = response;
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.received = _box_0.length = 0;
              t1 = new B._Future($.Zone__current, type$._Future_dynamic);
              completer = new B._AsyncCompleter(t1, type$._AsyncCompleter_dynamic);
              t2 = response.stream;
              t3 = type$.Uint8List;
              stream = A._StreamHandlerTransformer$(new A.DefaultTransformer_transformResponse_closure(_box_0, false, options), t3, t3).super$_StreamSinkTransformer$bind(t2);
              chunks = B._setArrayType([], type$.JSArray_Uint8List);
              _box_0.finalSize = 0;
              stream.listen$4$cancelOnError$onDone$onError(new A.DefaultTransformer_transformResponse_closure0(_box_0, chunks), true, new A.DefaultTransformer_transformResponse_closure1(completer), new A.DefaultTransformer_transformResponse_closure2(completer));
              $async$goto = 3;
              return B._asyncAwait(t1, $async$transformResponse$2);
            case 3:
              // returning from await.
              t1 = _box_0.finalSize;
              responseBytes = new Uint8Array(t1);
              for (t1 = chunks.length, chunkOffset = 0, _i = 0; _i < chunks.length; chunks.length === t1 || (0, B.throwConcurrentModificationError)(chunks), ++_i) {
                chunk = chunks[_i];
                C.NativeUint8List_methods.setAll$2(responseBytes, chunkOffset, chunk);
                chunkOffset += chunk.length;
              }
              if (options.___RequestConfig_responseType_A === D.ResponseType_3) {
                $async$returnValue = responseBytes;
                // goto return
                $async$goto = 1;
                break;
              }
              responseBody = C.C_Utf8Codec.decode$2$allowMalformed(0, responseBytes, true);
              if (responseBody.length !== 0)
                if (options.___RequestConfig_responseType_A === D.ResponseType_0) {
                  t1 = response.__ResponseBody_headers_A;
                  t1 === $ && B.throwUnnamedLateFieldNI();
                  t1 = t1.$index(0, "content-type");
                  t1 = A.Transformer_isJsonMimeType(t1 == null ? null : J.get$first$ax(t1));
                } else
                  t1 = false;
              else
                t1 = false;
              if (t1) {
                t1 = C.C_JsonCodec.decode$1(0, responseBody);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = responseBody;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$transformResponse$2, $async$completer);
    }
  };
  A.CaseInsensitiveMap.prototype = {};
  A.MediaType.prototype = {
    toString$0(_) {
      var buffer = new B.StringBuffer(""),
        t1 = "" + this.type;
      buffer._contents = t1;
      t1 += "/";
      buffer._contents = t1;
      buffer._contents = t1 + this.subtype;
      J.forEach$1$ax(this.parameters._collection$_map, new A.MediaType_toString_closure(buffer));
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Context.prototype = {
    absolute$1(_, part1) {
      var t1, _null = null;
      A._validateArgList("absolute", B._setArrayType([part1, null, null, null, null, null, null], type$.JSArray_nullable_String));
      t1 = this.style;
      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
      if (t1)
        return part1;
      t1 = this._context$_current;
      return this.join$8(0, t1 == null ? A.current() : t1, part1, _null, _null, _null, _null, _null, _null);
    },
    join$8(_, part1, part2, part3, part4, part5, part6, part7, part8) {
      var parts = B._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8], type$.JSArray_nullable_String);
      A._validateArgList("join", parts);
      return this.joinAll$1(new B.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path;
      for (t1 = parts.get$iterator(parts), t2 = new B.WhereIterator(t1, new A.Context_joinAll_closure(), parts.$ti._eval$1("WhereIterator<Iterable.E>")), t3 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t2.moveNext$0();) {
        t5 = t1.get$current(t1);
        if (t3.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t3);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = C.JSString_methods.substring$2(path, 0, t3.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t3.needsSeparator$1(t4))
            parsed.separators[0] = t3.get$separator();
          t4 = "" + parsed.toString$0(0);
        } else if (t3.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t3.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          if (!(t5.length !== 0 && t3.containsSeparator$1(t5[0])))
            if (needsSeparator)
              t4 += t3.get$separator();
          t4 += t5;
        }
        needsSeparator = t3.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = B._arrayInstanceType(t1)._eval$1("WhereIterable<1>");
      t2 = B.List_List$of(new B.WhereIterable(t1, new A.Context_split_closure(), t2), true, t2._eval$1("Iterable.E"));
      parsed.parts = t2;
      t1 = parsed.root;
      if (t1 != null)
        C.JSArray_methods.insert$2(t2, 0, t1);
      return parsed.parts;
    },
    normalize$1(_, path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0(0);
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var i, start, previous, t2, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (i = 0; i < root; ++i)
            if (C.JSString_methods._codeUnitAt$1(path, i) === 47)
              return true;
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new B.CodeUnits(path)._string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        codeUnit = C.JSString_methods.codeUnitAt$1(t2, i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$1(path) {
      var from, fromParsed, pathParsed, t3, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = _this.style,
        t2 = t1.rootLength$1(path);
      if (t2 <= 0)
        return _this.normalize$1(0, path);
      t2 = _this._context$_current;
      from = t2 == null ? A.current() : t2;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(0, path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw B.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0(0);
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0(0);
      t2 = fromParsed.parts;
      if (t2.length !== 0 && J.$eq$(t2[0], "."))
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        if (t2.length !== 0) {
          t3 = pathParsed.parts;
          t2 = t3.length !== 0 && t1.pathsEqual$2(t2[0], t3[0]);
        } else
          t2 = false;
        if (!t2)
          break;
        C.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        C.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        C.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        C.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      if (t2.length !== 0 && J.$eq$(t2[0], ".."))
        throw B.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      C.JSArray_methods.insertAll$2(pathParsed.parts, 0, B.List_List$filled(fromParsed.parts.length, "..", false, t2));
      t3 = pathParsed.separators;
      t3[0] = "";
      C.JSArray_methods.insertAll$2(t3, 1, B.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(C.JSArray_methods.get$last(t1), ".")) {
        C.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        t1.pop();
        t1.pop();
        t1.push("");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(0, _this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var $length = this.rootLength$1(path);
      if ($length > 0)
        return C.JSString_methods.substring$2(path, 0, $length);
      return this.isRootRelative$1(path) ? path[0] : null;
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(C.JSArray_methods.get$last(t1), "")))
          break;
        C.JSArray_methods.removeLast$0(_this.parts);
        _this.separators.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        t1[t2 - 1] = "";
    },
    normalize$0(_) {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = B._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        t3 = J.getInterceptor$(part);
        if (!(t3.$eq(part, ".") || t3.$eq(part, "")))
          if (t3.$eq(part, ".."))
            if (newParts.length !== 0)
              newParts.pop();
            else
              ++leadingDoubles;
          else
            newParts.push(part);
      }
      if (_this.root == null)
        C.JSArray_methods.insertAll$2(newParts, 0, B.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        newParts.push(".");
      _this.parts = newParts;
      t1 = _this.style;
      _this.separators = B.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String);
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        _this.separators[0] = "";
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows()) {
        t2.toString;
        _this.root = B.stringReplaceAllUnchecked(t2, "/", "\\");
      }
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var i, _this = this,
        t1 = _this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (i = 0; i < _this.parts.length; ++i)
        t1 = t1 + B.S(_this.separators[i]) + B.S(_this.parts[i]);
      t1 += B.S(C.JSArray_methods.get$last(_this.separators));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      return t1 !== 0 && C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47;
    },
    rootLength$2$withDrive(path, withDrive) {
      if (path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return B._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);
      }
      throw B.wrapException(B.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      if (C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47)
        return true;
      return C.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index, t2,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (C.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = C.JSString_methods._codeUnitAt$1(path, i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = C.JSString_methods.indexOf$2(path, "/", C.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!C.JSString_methods.startsWith$1(path, "file://"))
            return index;
          if (!A.isDriveLetter(path, index + 1))
            return index;
          t2 = index + 3;
          return t1 === t2 ? t2 : index + 4;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      t1 = C.JSString_methods.codeUnitAt$1(path, t1 - 1);
      return !(t1 === 47 || t1 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      t2 = C.JSString_methods._codeUnitAt$1(path, 0);
      if (t2 === 47)
        return 1;
      if (t2 === 92) {
        if (t1 < 2 || C.JSString_methods._codeUnitAt$1(path, 1) !== 92)
          return 1;
        index = C.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = C.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(t2))
        return 0;
      if (C.JSString_methods._codeUnitAt$1(path, 1) !== 58)
        return 0;
      t1 = C.JSString_methods._codeUnitAt$1(path, 2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw B.wrapException(B.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && C.JSString_methods.startsWith$1(path, "/") && A.isDriveLetter(path, 1))
          path = C.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = B.stringReplaceAllUnchecked(path, "/", "\\");
      return B._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      if (t1 !== path2.length)
        return false;
      for (i = 0; i < t1; ++i)
        if (!this.codeUnitsEqual$2(C.JSString_methods._codeUnitAt$1(path1, i), C.JSString_methods._codeUnitAt$1(path2, i)))
          return false;
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines(_) {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j >= t2 || t1[j] !== 10)
            c = 10;
        }
        if (c === 10)
          t3.push(i + 1);
      }
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw B.wrapException(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw B.wrapException(B.RangeError$("Offset " + offset + string$._must_ + _this.get$length(_this) + "."));
      t1 = _this._lineStarts;
      if (offset < C.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= C.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      if (offset < t2[t1])
        return false;
      t3 = t2.length;
      if (t1 >= t3 - 1 || offset < t2[t1 + 1])
        return true;
      if (t1 >= t3 - 2 || offset < t2[t1 + 2]) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        max = t1.length - 1;
      for (min = 0; min < max;) {
        half = min + C.JSInt_methods._tdivFast$1(max - min, 2);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, lineStart, _this = this;
      if (offset < 0)
        throw B.wrapException(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw B.wrapException(B.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(_this) + "."));
      line = _this.getLine$1(offset);
      lineStart = _this._lineStarts[line];
      if (lineStart > offset)
        throw B.wrapException(B.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3, _this = this;
      if (line < 0)
        throw B.wrapException(B.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = _this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw B.wrapException(B.RangeError$("Line " + line + " must be less than the number of lines in the file, " + _this.get$lines(_this) + "."));
      }
      result = t1[line];
      if (result <= _this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw B.wrapException(B.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$line(_) {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$length(_) {
      return this._file$_end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end(_) {
      return A.FileLocation$_(this.file, this._file$_end);
    },
    get$text(_) {
      return B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._file$_end), 0, null);
    },
    get$context(_) {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._file$_end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    compareTo$1(_, other) {
      var result;
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = C.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? C.JSInt_methods.compareTo$1(this._file$_end, other._file$_end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!type$.FileSpan._is(other))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._file$_end === other._file$_end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return B.Object_hash(this._file$_start, this._file$_end, this.file.url, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0(_) {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, t12, t13, index, primaryIdx, primary, _i, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(C.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = B.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._highlighter$_buffer, t2 = t2 !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end("\u2575");
            t3._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = B._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>"), t7 = new B.ReversedListIterable(t5, t6), t7 = new B.ListIterator(t7, t7.get$length(t7), t6._eval$1("ListIterator<ListIterable.E>")), t6 = t6._eval$1("ListIterable.E"), t8 = line.number, t9 = line.text; t7.moveNext$0();) {
          t10 = t7.__internal$_current;
          if (t10 == null)
            t10 = t6._as(t10);
          t11 = t10.span;
          t12 = t11.get$start(t11);
          t12 = t12.get$line(t12);
          t13 = t11.get$end(t11);
          if (t12 !== t13.get$line(t13)) {
            t12 = t11.get$start(t11);
            t11 = t12.get$line(t12) === t8 && _this._isOnlyWhitespace$1(C.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()));
          } else
            t11 = false;
          if (t11) {
            index = C.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              B.throwExpression(B.ArgumentError$(B.S(highlightsByColumn) + " contains no null elements.", _null));
            highlightsByColumn[index] = t10;
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = C.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        primary = primaryIdx === -1 ? _null : t5[primaryIdx];
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7);
          t10 = t10.get$line(t10) === t8 ? t7.get$start(t7).get$column() : 0;
          t11 = t7.get$end(t7);
          _this._writeHighlightedText$4$color(t9, t10, t11.get$line(t11) === t8 ? t7.get$end(t7).get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t6; ++_i) {
          t5[_i].toString;
          continue;
        }
      }
      _this._writeSidebar$1$end("\u2575");
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var _this = this;
      if (!_this._multipleFiles || !type$.Uri._is(url))
        _this._writeSidebar$1$end("\u2577");
      else {
        _this._writeSidebar$1$end("\u250c");
        _this._colorize$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m");
        _this._highlighter$_buffer._contents += " " + $.$get$context().prettyUri$1(url);
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, foundCurrent, _i, highlight, t5, startLine, t6, endLine, _this = this, _box_0 = {};
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = _this._primaryColor;
      for (t2 = highlightsByColumn.length, t3 = _this._primaryColor, t1 = !t1, t4 = _this._highlighter$_buffer, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t5 = highlight == null;
        if (t5)
          startLine = null;
        else {
          t6 = highlight.span;
          t6 = t6.get$start(t6);
          startLine = t6.get$line(t6);
        }
        if (t5)
          endLine = null;
        else {
          t6 = highlight.span;
          t6 = t6.get$end(t6);
          endLine = t6.get$line(t6);
        }
        if (t1 && highlight === current) {
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor);
        else if (t5)
          if (_box_0.openedOnThisLine)
            _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor);
          else
            t4._contents += " ";
        else
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t3);
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(C.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color);
      _this._writeText$1(C.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var t3, coversWholeLine, _this = this,
        color = _this._primaryColor,
        t1 = highlight.span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$end(t1);
      if (t2 === t3.get$line(t3)) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._colorize$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color);
        t1._contents += "\n";
      } else {
        t2 = t1.get$start(t1);
        t3 = line.number;
        if (t2.get$line(t2) === t3) {
          if (C.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color);
          t1._contents += "\n";
        } else {
          t2 = t1.get$end(t1);
          if (t2.get$line(t2) === t3) {
            coversWholeLine = t1.get$end(t1).get$column() === line.text.length;
            if (coversWholeLine && true) {
              A.replaceWithNull(highlightsByColumn, highlight);
              return;
            }
            _this._writeSidebar$0();
            t1 = _this._highlighter$_buffer;
            t1._contents += " ";
            _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
            _this._colorize$2$color(new A.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color);
            t1._contents += "\n";
            A.replaceWithNull(highlightsByColumn, highlight);
          }
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t1 = beginning ? 0 : 1,
        t2 = this._highlighter$_buffer;
      t1 = t2._contents += C.JSString_methods.$mul("\u2500", 1 + column + this._countTabs$1(C.JSString_methods.substring$2(line.text, 0, column + t1)) * 3);
      t2._contents = t1 + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t3 = this._highlighter$_buffer, t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 === 9)
          t3._contents += C.JSString_methods.$mul(" ", 4);
        else
          t3._contents += B.Primitives_stringFromCharCode(t4);
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = C.JSInt_methods.toString$0(line + 1);
      this._colorize$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m");
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$2$color(callback, color) {
      var t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
    }
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t3, t4,
        t1 = this.span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$start(t1).get$column();
      t4 = t1.get$end(t1);
      t1 = "" + "primary " + ("" + t2 + ":" + t3 + "-" + t4.get$line(t4) + ":" + t1.get$end(t1).get$column());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + C.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t1) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t1) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = B.getRuntimeType(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (B.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl() {
      return this.sourceUrl;
    },
    get$offset(receiver) {
      return this.offset;
    },
    get$line(receiver) {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(this.get$sourceUrl()) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(this.get$sourceUrl()) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = B.getRuntimeType(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (B.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t2.get$sourceUrl()) + '" and  "' + B.S(t1.get$sourceUrl()) + "\" don't match.", null));
      else if (t1.get$offset(t1) < t2.get$offset(t2))
        throw B.wrapException(B.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw B.wrapException(B.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end(receiver) {
      return this.end;
    },
    get$text(receiver) {
      return this.text;
    }
  };
  A.SourceSpanException.prototype = {
    get$message(_) {
      return this._span_exception$_message;
    },
    toString$0(_) {
      var t3, highlight,
        t1 = this._span,
        t2 = t1.get$start(t1);
      t2 = "" + ("line " + (t2.get$line(t2) + 1) + ", column " + (t1.get$start(t1).get$column() + 1));
      if (t1.get$sourceUrl() != null) {
        t3 = t1.get$sourceUrl();
        t3 = t2 + (" of " + $.$get$context().prettyUri$1(t3));
        t2 = t3;
      }
      t2 += ": " + this._span_exception$_message;
      highlight = t1.highlight$1$color(0, null);
      t1 = highlight.length !== 0 ? t2 + "\n" + highlight : t2;
      return "Error on " + (t1.charCodeAt(0) == 0 ? t1 : t1);
    },
    $isException: 1
  };
  A.SourceSpanFormatException.prototype = {
    get$offset(_) {
      var t1 = this._span;
      t1 = A.FileLocation$_(t1.file, t1._file$_start);
      return t1.offset;
    },
    $isFormatException: 1,
    get$source(receiver) {
      return this.source;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl() {
      return this.get$start(this).get$sourceUrl();
    },
    get$length(_) {
      var t2, _this = this,
        t1 = _this.get$end(_this);
      t1 = t1.get$offset(t1);
      t2 = _this.get$start(_this);
      return t1 - t2.get$offset(t2);
    },
    compareTo$1(_, other) {
      var _this = this,
        result = _this.get$start(_this).compareTo$1(0, other.get$start(other));
      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;
    },
    highlight$1$color(_, color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0(0);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return type$.SourceSpan._is(other) && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$start(_this), _this.get$end(_this), C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + B.getRuntimeType(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end(_this).toString$0(0) + ' "' + _this.get$text(_this) + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context(_) {
      return this._context;
    }
  };
  A.StringScannerException.prototype = {
    get$source(_) {
      return B._asString(this.source);
    }
  };
  A.StringScanner.prototype = {
    get$lastMatch() {
      var _this = this;
      if (_this._string_scanner$_position !== _this._lastMatchPosition)
        _this._lastMatch = null;
      return _this._lastMatch;
    },
    scan$1(pattern) {
      var success, _this = this,
        t1 = _this._lastMatch = J.matchAsPrefix$2$s(pattern, _this.string, _this._string_scanner$_position);
      _this._lastMatchPosition = _this._string_scanner$_position;
      success = t1 != null;
      if (success)
        _this._lastMatchPosition = _this._string_scanner$_position = t1.get$end(t1);
      return success;
    },
    expect$2$name(pattern, $name) {
      var t1;
      if (this.scan$1(pattern))
        return;
      if ($name == null)
        if (type$.RegExp._is(pattern))
          $name = "/" + pattern.pattern + "/";
        else {
          t1 = J.toString$0$(pattern);
          t1 = B.stringReplaceAllUnchecked(t1, "\\", "\\\\");
          $name = '"' + B.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
        }
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expect$1(pattern) {
      return this.expect$2$name(pattern, null);
    },
    expectDone$0() {
      var t1 = this._string_scanner$_position;
      if (t1 === this.string.length)
        return;
      this.error$3$length$position(0, "expected no more input.", 0, t1);
    },
    error$3$length$position(_, message, $length, position) {
      var t2, t3, t4, t5, sourceFile, end,
        t1 = this.string;
      if (position < 0)
        B.throwExpression(B.RangeError$("position must be greater than or equal to 0."));
      else if (position > t1.length)
        B.throwExpression(B.RangeError$("position must be less than or equal to the string length."));
      t2 = position + $length > t1.length;
      if (t2)
        B.throwExpression(B.RangeError$("position plus length must not go beyond the end of the string."));
      t2 = this.sourceUrl;
      t3 = new B.CodeUnits(t1);
      t4 = B._setArrayType([0], type$.JSArray_int);
      t5 = new Uint32Array(B._ensureNativeList(t3.toList$0(t3)));
      sourceFile = new A.SourceFile(t2, t4, t5);
      sourceFile.SourceFile$decoded$2$url(t3, t2);
      end = position + $length;
      if (end > t5.length)
        B.throwExpression(B.RangeError$("End " + end + string$._must_ + sourceFile.get$length(sourceFile) + "."));
      else if (position < 0)
        B.throwExpression(B.RangeError$("Start may not be negative, was " + position + "."));
      throw B.wrapException(new A.StringScannerException(t1, message, new A._FileSpan(sourceFile, position, end)));
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["Future<InterceptorState<@>>()", "~(Interceptor0)", "bool(_Highlight)", "~(Object?)", "~()", "@(@)(~(RequestOptions,RequestInterceptorHandler))", "@(@)(~(Response<@>,ResponseInterceptorHandler))", "@(@,StackTrace)(~(DioError,ErrorInterceptorHandler))", "InterceptorState<RequestOptions>()", "~(RequestOptions,RequestInterceptorHandler)", "~(Response<@>)", "MediaType()", "int(_Line)", "Object(_Line)", "Object(_Highlight)", "int(_Highlight,_Highlight)", "List<_Line>(MapEntry<Object,List<_Highlight>>)", "SourceSpanWithContext()"]);
  A.Future_any_onValue.prototype = {
    call$1(value) {
      var t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(0, value);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.Future_any_onError.prototype = {
    call$2(error, stack) {
      var t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.completeError$2(error, stack);
    },
    $signature: 38
  };
  A._StreamHandlerTransformer_closure.prototype = {
    call$1(outputSink) {
      var _this = this;
      return new A._HandlerEventSink(_this.handleData, _this.handleError, _this.handleDone, outputSink, _this.S._eval$1("@<0>")._bind$1(_this.T)._eval$1("_HandlerEventSink<1,2>"));
    },
    $signature() {
      return this.S._eval$1("@<0>")._bind$1(this.T)._eval$1("_HandlerEventSink<1,2>(EventSink<2>)");
    }
  };
  A.CanonicalizedMap_addAll_closure.prototype = {
    call$2(key, value) {
      this.$this.$indexSet(0, key, value);
      return value;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)");
    }
  };
  A.CanonicalizedMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti;
      return new B.MapEntry(J.get$key$x(e.get$value(e)), J.get$value$z(e.get$value(e)), t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)");
    }
  };
  A.CanonicalizedMap_forEach_closure.prototype = {
    call$2(key, pair) {
      return this.f.call$2(pair.get$key(pair), pair.get$value(pair));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_keys_closure.prototype = {
    call$1(pair) {
      return pair.get$key(pair);
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.K(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_map_closure.prototype = {
    call$2(_, pair) {
      return this.transform.call$2(pair.get$key(pair), pair.get$value(pair));
    },
    $signature() {
      return this.$this.$ti._bind$1(this.K2)._bind$1(this.V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_putIfAbsent_closure.prototype = {
    call$0() {
      var t1 = this.$this.$ti;
      return new B.MapEntry(this.key, this.ifAbsent.call$0(), t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>()");
    }
  };
  A.CanonicalizedMap_values_closure.prototype = {
    call$1(pair) {
      return pair.get$value(pair);
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.V(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.BrowserHttpClientAdapter_fetch_closure.prototype = {
    call$2(key, v) {
      return this.xhr.setRequestHeader(key, B.S(v));
    },
    $signature: 9
  };
  A.BrowserHttpClientAdapter_fetch_closure0.prototype = {
    call$1(_) {
      var t5, t6, t7, _null = null,
        t1 = this.xhr,
        body = B.NativeUint8List_NativeUint8List$view(type$.ByteBuffer._as(B._convertNativeToDart_XHR_Response(t1.response)), 0, _null),
        t2 = t1.status,
        t3 = C.HttpRequest_methods.get$responseHeaders(t1),
        t4 = type$.String;
      t3 = t3.map$2$1(t3, new A.BrowserHttpClientAdapter_fetch__closure(), t4, type$.List_String);
      t5 = t1.statusText;
      t1 = t1.status;
      t1 = t1 === 302 || t1 === 301;
      t6 = type$._AsyncStreamController_Uint8List;
      t7 = new B._AsyncStreamController(_null, _null, _null, _null, t6);
      t7._async$_add$1(0, new Uint8Array(B._ensureNativeList(body)));
      t7._closeUnchecked$0();
      this.completer.complete$1(0, new A.ResponseBody(new B._ControllerStream(t7, t6._eval$1("_ControllerStream<1>")), t3, t2, t5, t1, B.LinkedHashMap_LinkedHashMap$_empty(t4, type$.dynamic)));
    },
    $signature: 132
  };
  A.BrowserHttpClientAdapter_fetch__closure.prototype = {
    call$2(k, v) {
      return new B.MapEntry(k, B._setArrayType(v.split(","), type$.JSArray_String), type$.MapEntry_of_String_and_List_String);
    },
    $signature: 367
  };
  A.BrowserHttpClientAdapter_fetch_closure1.prototype = {
    call$1(value) {
      var t1, _this = this;
      if (!_this._box_0.haveSent) {
        t1 = _this.options.OptionsMixin___OptionsMixin_connectTimeout_A;
        t1 === $ && B.throwUnnamedLateFieldNI();
        _this.completer.completeError$2(new A.DioError(D.DioErrorType_0, "Connecting timed out [" + t1 + "ms]"), B.StackTrace_current());
        _this.xhr.abort();
      }
    },
    $signature: 4
  };
  A.BrowserHttpClientAdapter_fetch_closure2.prototype = {
    call$1($event) {
      var t2, t3, _this = this,
        t1 = _this._box_0;
      t1.haveSent = true;
      t2 = _this.options;
      t3 = t2.___RequestConfig_sendTimeout_A;
      t3 === $ && B.throwUnnamedLateFieldNI();
      if (t3 > 0) {
        if (t1.sendStart === 0)
          t1.sendStart = Date.now();
        t3 = Date.now();
        B.print(t3 - t1.sendStart);
        t1 = t1.sendStart;
        t2 = t2.___RequestConfig_sendTimeout_A;
        if (t3 - t1 > t2) {
          _this.completer.completeError$2(new A.DioError(D.DioErrorType_1, "Sending timed out [" + B.S(t2) + "ms]"), B.StackTrace_current());
          _this.xhr.abort();
        }
      }
    },
    $signature: 133
  };
  A.BrowserHttpClientAdapter_fetch_closure3.prototype = {
    call$1($event) {
      var t3, _this = this,
        t1 = _this.options,
        t2 = t1.___RequestConfig_receiveTimeout_A;
      t2 === $ && B.throwUnnamedLateFieldNI();
      if (t2 > 0) {
        t2 = _this._box_0;
        if (t2.receiveStart === 0)
          t2.receiveStart = Date.now();
        t3 = Date.now();
        t2 = t2.receiveStart;
        t1 = t1.___RequestConfig_receiveTimeout_A;
        if (t3 - t2 > t1) {
          _this.completer.completeError$2(new A.DioError(D.DioErrorType_2, "Receiving timed out [" + B.S(t1) + "ms]"), B.StackTrace_current());
          _this.xhr.abort();
        }
      }
    },
    $signature: 133
  };
  A.BrowserHttpClientAdapter_fetch_closure4.prototype = {
    call$1(_) {
      this.completer.completeError$2(new A.DioError(D.DioErrorType_3, "XMLHttpRequest error."), B.StackTrace_current());
    },
    $signature: 132
  };
  A.BrowserHttpClientAdapter_fetch_closure5.prototype = {
    call$1(bytes) {
      return this._completer.complete$1(0, new Uint8Array(B._ensureNativeList(bytes)));
    },
    $signature: 369
  };
  A.BrowserHttpClientAdapter_fetch_closure6.prototype = {
    call$0() {
      this.$this._xhrs.remove$1(0, this.xhr);
    },
    $signature: 6
  };
  A.DioMixin_fetch__requestInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch__requestInterceptorWrapper_closure(this._box_1, this.$this, interceptor);
    },
    $signature: typesOffset + 5
  };
  A.DioMixin_fetch__requestInterceptorWrapper_closure.prototype = {
    call$1(_state) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type$.InterceptorState_dynamic._as(_state);
              if (_state.type === D.InterceptorResultType_0) {
                t1 = type$.dynamic;
                $async$returnValue = A.DioMixin_listenCancelForAsyncTask($async$self._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch__requestInterceptorWrapper__closure($async$self.$this, $async$self.interceptor, _state), t1), t1);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = _state;
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 134
  };
  A.DioMixin_fetch__requestInterceptorWrapper__closure.prototype = {
    call$0() {
      return A.DioMixin_checkIfNeedEnqueue(this.$this.DioMixin__interceptors._requestLock, new A.DioMixin_fetch__requestInterceptorWrapper___closure(this.interceptor, this.state), type$.dynamic);
    },
    $signature: 15
  };
  A.DioMixin_fetch__requestInterceptorWrapper___closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.RequestOptions._as(this.state.data), new A.RequestInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 0
  };
  A.DioMixin_fetch__responseInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch__responseInterceptorWrapper_closure(this._box_1, this.$this, interceptor);
    },
    $signature: typesOffset + 6
  };
  A.DioMixin_fetch__responseInterceptorWrapper_closure.prototype = {
    call$1(_state) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type$.InterceptorState_dynamic._as(_state);
              t1 = _state.type;
              if (t1 === D.InterceptorResultType_0 || t1 === D.InterceptorResultType_2) {
                t1 = type$.dynamic;
                $async$returnValue = A.DioMixin_listenCancelForAsyncTask($async$self._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch__responseInterceptorWrapper__closure($async$self.$this, $async$self.interceptor, _state), t1), t1);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = _state;
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 134
  };
  A.DioMixin_fetch__responseInterceptorWrapper__closure.prototype = {
    call$0() {
      return A.DioMixin_checkIfNeedEnqueue(this.$this.DioMixin__interceptors._responseLock, new A.DioMixin_fetch__responseInterceptorWrapper___closure(this.interceptor, this.state), type$.dynamic);
    },
    $signature: 15
  };
  A.DioMixin_fetch__responseInterceptorWrapper___closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.Response_dynamic._as(this.state.data), new A.ResponseInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 0
  };
  A.DioMixin_fetch__errorInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch__errorInterceptorWrapper_closure(this._box_1, this.$this, interceptor);
    },
    $signature: typesOffset + 7
  };
  A.DioMixin_fetch__errorInterceptorWrapper_closure.prototype = {
    call$2(err, stackTrace) {
      var t2, t3, _this = this, t1 = {};
      t1.err = err;
      t2 = !(err instanceof A.InterceptorState) ? t1.err = new A.InterceptorState(A.DioMixin_assureDioError(err, _this._box_1.requestOptions, null), D.InterceptorResultType_0, type$.InterceptorState_DioError) : err;
      t3 = t2.type;
      if (t3 === D.InterceptorResultType_0 || t3 === D.InterceptorResultType_4) {
        t2 = type$.dynamic;
        return A.DioMixin_listenCancelForAsyncTask(_this._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch__errorInterceptorWrapper__closure(t1, _this.$this, _this.interceptor), t2), t2);
      } else
        throw B.wrapException(t2);
    },
    $signature: 371
  };
  A.DioMixin_fetch__errorInterceptorWrapper__closure.prototype = {
    call$0() {
      return A.DioMixin_checkIfNeedEnqueue(this.$this.DioMixin__interceptors._errorLock, new A.DioMixin_fetch__errorInterceptorWrapper___closure(this._box_0, this.interceptor), type$.dynamic);
    },
    $signature: 15
  };
  A.DioMixin_fetch__errorInterceptorWrapper___closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.DioError._as(J.get$data$x(this._box_0.err)), new A.ErrorInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 0
  };
  A.DioMixin_fetch_closure.prototype = {
    call$0() {
      return new A.InterceptorState(this._box_1.requestOptions, D.InterceptorResultType_0, type$.InterceptorState_RequestOptions);
    },
    $signature: typesOffset + 8
  };
  A.DioMixin_fetch_closure0.prototype = {
    call$1(interceptor) {
      var fun = interceptor.get$_handleRequest(),
        t1 = this._box_1;
      t1.future = t1.future.then$1$1(this._requestInterceptorWrapper.call$1(fun), type$.dynamic);
    },
    $signature: typesOffset + 1
  };
  A.DioMixin_fetch_closure1.prototype = {
    call$2(reqOpt, handler) {
      this._box_1.requestOptions = reqOpt;
      this.$this._dispatchRequest$1$1(reqOpt, type$.dynamic).then$1$1(new A.DioMixin_fetch__closure(handler), type$.void).catchError$1(new A.DioMixin_fetch__closure0(handler));
    },
    $signature: typesOffset + 9
  };
  A.DioMixin_fetch__closure.prototype = {
    call$1(value) {
      this.handler._completer.complete$1(0, new A.InterceptorState(value, D.InterceptorResultType_2, type$.InterceptorState_Response_dynamic));
      return null;
    },
    $signature: typesOffset + 10
  };
  A.DioMixin_fetch__closure0.prototype = {
    call$1(e) {
      type$.DioError._as(e);
      this.handler._completer.completeError$2(new A.InterceptorState(e, D.InterceptorResultType_4, type$.InterceptorState_DioError), e._stackTrace);
    },
    $signature: 4
  };
  A.DioMixin_fetch_closure2.prototype = {
    call$1(interceptor) {
      var fun = interceptor.get$_handleResponse(),
        t1 = this._box_1;
      t1.future = t1.future.then$1$1(this._responseInterceptorWrapper.call$1(fun), type$.dynamic);
    },
    $signature: typesOffset + 1
  };
  A.DioMixin_fetch_closure3.prototype = {
    call$1(interceptor) {
      var fun = interceptor.get$_handleError(),
        t1 = this._box_1;
      t1.future = t1.future.catchError$1(this._errorInterceptorWrapper.call$1(fun));
    },
    $signature: typesOffset + 1
  };
  A.DioMixin_fetch_closure4.prototype = {
    call$1(data) {
      var t1 = data instanceof A.InterceptorState ? data.data : data;
      return A.DioMixin_assureResponse(t1, this._box_1.requestOptions, this.T);
    },
    $signature() {
      return this.T._eval$1("Response<0>(@)");
    }
  };
  A.DioMixin_fetch_closure5.prototype = {
    call$2(err, _) {
      var t1, _this = this,
        isState = err instanceof A.InterceptorState;
      if (isState)
        if (err.type === D.InterceptorResultType_1)
          return A.DioMixin_assureResponse(err.data, _this._box_1.requestOptions, _this.T);
      t1 = isState ? err.data : err;
      throw B.wrapException(A.DioMixin_assureDioError(t1, _this._box_1.requestOptions, _this.stackTrace));
    },
    $signature() {
      return this.T._eval$1("Response<0>(@,@)");
    }
  };
  A.DioMixin__dispatchRequest_closure.prototype = {
    call$0() {
      return this.ret;
    },
    $signature() {
      return this.T._eval$1("Response<0>()");
    }
  };
  A.Headers$fromMap_closure.prototype = {
    call$2(k, v) {
      return new B.MapEntry(C.JSString_methods.trim$0(k).toLowerCase(), v, type$.MapEntry_of_String_and_List_String);
    },
    $signature: 372
  };
  A.Headers_toString_closure.prototype = {
    call$2(key, value) {
      J.forEach$1$ax(value, new A.Headers_toString__closure(this.stringBuffer, key));
    },
    $signature: 373
  };
  A.Headers_toString__closure.prototype = {
    call$1(e) {
      this.stringBuffer._contents += this.key + ": " + e + "\n";
      return null;
    },
    $signature: 94
  };
  A._RequestConfig_closure.prototype = {
    call$1($status) {
      return $status != null && $status >= 200 && $status < 300;
    },
    $signature: 374
  };
  A.Transformer_urlEncodeMap_closure.prototype = {
    call$2(key, value) {
      if (value == null)
        return key;
      return key + "=" + B._Uri__uriEncode(C.List_nxB, J.toString$0$(value), C.C_Utf8Codec, true);
    },
    $signature: 375
  };
  A.DefaultTransformer_transformResponse_closure.prototype = {
    call$2(data, sink) {
      var t1 = sink._async$_sink;
      if ((t1._state & 2) !== 0)
        B.throwExpression(B.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_add(0, data);
      if (this.showDownloadProgress) {
        t1 = this._box_0;
        t1.received = t1.received + data.length;
      }
    },
    $signature: 376
  };
  A.DefaultTransformer_transformResponse_closure0.prototype = {
    call$1(chunk) {
      var t1 = this._box_0;
      t1.finalSize = t1.finalSize + chunk.length;
      this.chunks.push(chunk);
    },
    $signature: 377
  };
  A.DefaultTransformer_transformResponse_closure2.prototype = {
    call$2(error, stackTrace) {
      this.completer.completeError$2(error, stackTrace);
    },
    $signature: 28
  };
  A.DefaultTransformer_transformResponse_closure1.prototype = {
    call$0() {
      return this.completer.complete$0(0);
    },
    $signature: 0
  };
  A.encodeMap_urlEncode.prototype = {
    call$2(sub, path) {
      var t2, t3, t4, t5, t6, t7, i, isCollection, t8, str, isNotEmpty, _this = this,
        format = _this.listFormat,
        separatorChar = A._getSeparatorChar(format),
        t1 = type$.List_dynamic;
      if (t1._is(sub))
        if (format === D.ListFormat_4 || format === D.ListFormat_5)
          for (t2 = J.getInterceptor$asx(sub), t3 = _this.rightBracket, t4 = _this.leftBracket, t5 = path + t4, t6 = format === D.ListFormat_4, t7 = type$.Map_dynamic_dynamic, i = 0; i < t2.get$length(sub); ++i) {
            if (!t7._is(t2.$index(sub, i)))
              if (!t1._is(t2.$index(sub, i))) {
                t2.$index(sub, i);
                isCollection = false;
              } else
                isCollection = true;
            else
              isCollection = true;
            if (t6) {
              t8 = t2.$index(sub, i);
              _this.call$2(t8, path + (isCollection ? t4 + i + t3 : ""));
            } else {
              t8 = t2.$index(sub, i);
              _this.call$2(t8, t5 + B.S(isCollection ? i : "") + t3);
            }
          }
        else
          _this.call$2(J.join$1$ax(sub, separatorChar), path);
      else if (type$.Map_dynamic_dynamic._is(sub))
        J.forEach$1$ax(sub, new A.encodeMap_urlEncode_closure(path, _this, _this.encodeComponent, _this.leftBracket, _this.rightBracket));
      else {
        str = _this.handler.call$2(path, sub);
        isNotEmpty = str != null && C.JSString_methods.trim$0(str).length !== 0;
        t1 = _this._box_0;
        if (!t1.first && isNotEmpty)
          _this.urlData._contents += "&";
        t1.first = false;
        if (isNotEmpty)
          _this.urlData._contents += B.S(str);
      }
    },
    $signature: 378
  };
  A.encodeMap_urlEncode_closure.prototype = {
    call$2(k, v) {
      var _this = this,
        t1 = _this.path,
        t2 = _this.urlEncode,
        t3 = _this.encodeComponent;
      if (t1 === "")
        t2.call$2(v, B.S(t3.call$1(B._asString(k))));
      else
        t2.call$2(v, t1 + _this.leftBracket + B.S(t3.call$1(B._asString(k))) + _this.rightBracket);
    },
    $signature: 76
  };
  A.caseInsensitiveKeyMap_closure.prototype = {
    call$2(key1, key2) {
      return key1.toLowerCase() === key2.toLowerCase();
    },
    $signature: 379
  };
  A.caseInsensitiveKeyMap_closure0.prototype = {
    call$1(key) {
      return C.JSString_methods.get$hashCode(key.toLowerCase());
    },
    $signature: 380
  };
  A.CaseInsensitiveMap$from_closure.prototype = {
    call$1(key) {
      return key.toLowerCase();
    },
    $signature: 54
  };
  A.MediaType_MediaType$parse_closure.prototype = {
    call$0() {
      var t3, t4, t5, t6, parameters, t7, t8, success, t9, value,
        t1 = this.mediaType,
        scanner = new A.StringScanner(null, t1),
        t2 = $.$get$whitespace();
      scanner.scan$1(t2);
      t3 = $.$get$token();
      scanner.expect$1(t3);
      t4 = scanner.get$lastMatch().$index(0, 0);
      t4.toString;
      scanner.expect$1("/");
      scanner.expect$1(t3);
      t5 = scanner.get$lastMatch().$index(0, 0);
      t5.toString;
      scanner.scan$1(t2);
      t6 = type$.String;
      parameters = B.LinkedHashMap_LinkedHashMap$_empty(t6, t6);
      while (true) {
        t7 = scanner._lastMatch = C.JSString_methods.matchAsPrefix$2(";", t1, scanner._string_scanner$_position);
        t8 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t7 != null;
        t7 = success ? scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end(t7) : t8;
        if (!success)
          break;
        t7 = scanner._lastMatch = t2.matchAsPrefix$2(0, t1, t7);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t7 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end(t7);
        scanner.expect$1(t3);
        if (scanner._string_scanner$_position !== scanner._lastMatchPosition)
          scanner._lastMatch = null;
        t7 = scanner._lastMatch.$index(0, 0);
        t7.toString;
        scanner.expect$1("=");
        t8 = scanner._lastMatch = t3.matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
        t9 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t8 != null;
        if (success) {
          t8 = scanner._lastMatchPosition = scanner._string_scanner$_position = t8.get$end(t8);
          t9 = t8;
        } else
          t8 = t9;
        if (success) {
          if (t8 !== t9)
            scanner._lastMatch = null;
          t8 = scanner._lastMatch.$index(0, 0);
          t8.toString;
          value = t8;
        } else
          value = A.expectQuotedString(scanner);
        t8 = scanner._lastMatch = t2.matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t8 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t8.get$end(t8);
        parameters.$indexSet(0, t7, value);
      }
      scanner.expectDone$0();
      t1 = A.CaseInsensitiveMap$from(parameters, t6);
      return new A.MediaType(t4.toLowerCase(), t5.toLowerCase(), new B.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_String));
    },
    $signature: typesOffset + 11
  };
  A.MediaType_toString_closure.prototype = {
    call$2(attribute, value) {
      var t2, t3,
        t1 = this.buffer;
      t1._contents += "; " + attribute + "=";
      t2 = $.$get$nonToken()._nativeRegExp;
      t2 = t2.test(value);
      t3 = t1._contents;
      if (t2) {
        t1._contents = t3 + '"';
        t2 = t1._contents += B.stringReplaceAllFuncUnchecked(value, $.$get$_escapedChar(), new A.MediaType_toString__closure(), null);
        t1._contents = t2 + '"';
      } else
        t1._contents = t3 + value;
    },
    $signature: 72
  };
  A.MediaType_toString__closure.prototype = {
    call$1(match) {
      return "\\" + B.S(match.$index(0, 0));
    },
    $signature: 136
  };
  A.expectQuotedString_closure.prototype = {
    call$1(match) {
      var t1 = match.$index(0, 1);
      t1.toString;
      return t1;
    },
    $signature: 136
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return part !== "";
    },
    $signature: 23
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return part.length !== 0;
    },
    $signature: 23
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 383
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      return this.color;
    },
    $signature: 384
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = line.highlights;
      t1 = new B.WhereIterable(t1, new A.Highlighter$___closure(), B._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
      return t1.get$length(t1);
    },
    $signature: typesOffset + 12
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t1 = t1.get$end(t1);
      return t2 !== t1.get$line(t1);
    },
    $signature: typesOffset + 2
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return line.url;
    },
    $signature: typesOffset + 13
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span.get$sourceUrl();
      return t1 == null ? new B.Object() : t1;
    },
    $signature: typesOffset + 14
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      return highlight1.span.compareTo$1(0, highlight2.span);
    },
    $signature: typesOffset + 15
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength,
        url = entry.get$key(entry),
        highlightsForFile = entry.get$value(entry),
        lines = B._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current(t2).span;
        context = t4.get$context(t4);
        t5 = A.findLineStart(context, t4.get$text(t4), t4.get$start(t4).get$column());
        t5.toString;
        t5 = C.JSString_methods.allMatches$1("\n", C.JSString_methods.substring$2(context, 0, t5));
        linesBeforeSpan = t5.get$length(t5);
        t4 = t4.get$start(t4);
        lineNumber = t4.get$line(t4) - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > C.JSArray_methods.get$last(lines).number)
            lines.push(new A._Line(line, lineNumber, url, B._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = B._setArrayType([], t3);
      for (t2 = lines.length, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, B.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        if (!!activeHighlights.fixed$length)
          B.throwExpression(B.UnsupportedError$("removeWhere"));
        C.JSArray_methods._removeWhere$2(activeHighlights, new A.Highlighter__collateLines__closure(line), true);
        oldHighlightLength = activeHighlights.length;
        for (t3 = t1.skip$1(highlightsForFile, highlightIndex), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t5 = t4.span;
          t5 = t5.get$start(t5);
          if (t5.get$line(t5) > line.number)
            break;
          activeHighlights.push(t4);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        C.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: typesOffset + 16
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span;
      t1 = t1.get$end(t1);
      return t1.get$line(t1) < this.line.number;
    },
    $signature: typesOffset + 2
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      return true;
    },
    $signature: typesOffset + 2
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += C.JSString_methods.$mul("\u2500", 2) + ">";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = this.startLine === this.line.number ? "\u250c" : "\u2514";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = this.highlight == null ? "\u2500" : "\u253c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += "\u2500";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this._box_0,
        vertical = t1.openedOnThisLine ? "\u253c" : "\u2502";
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = t2._primaryColor;
        } else {
          if (_this.endLine === t3) {
            t3 = _this.highlight.span;
            t2 = t3.get$end(t3).get$column() === t2.text.length;
          } else
            t2 = false;
          t3 = _this.$this;
          if (t2)
            t3._highlighter$_buffer._contents += "\u2514";
          else
            t3._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor);
        }
      }
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 0
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(C.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = this.highlight.span,
        startColumn = t2.get$start(t2).get$column(),
        endColumn = t2.get$end(t2).get$column();
      t2 = this.line.text;
      tabsBefore = t1._countTabs$1(C.JSString_methods.substring$2(t2, 0, startColumn));
      tabsInside = t1._countTabs$1(C.JSString_methods.substring$2(t2, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t1 = t1._highlighter$_buffer;
      t1._contents += C.JSString_methods.$mul(" ", startColumn);
      t1._contents += C.JSString_methods.$mul("^", Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var t2, _this = this,
        t1 = _this.$this;
      if (_this.coversWholeLine)
        t1._highlighter$_buffer._contents += C.JSString_methods.$mul("\u2500", 3);
      else {
        t2 = _this.highlight.span;
        t1._writeArrow$3$beginning(_this.line, Math.max(t2.get$end(t2).get$column() - 1, 0), false);
      }
    },
    $signature: 0
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t1 = t2._contents += C.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t3 = this.end;
      t2._contents = t1 + (t3 == null ? "\u2502" : t3);
    },
    $signature: 0
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.SourceSpanWithContext._is(t1) && A.findLineStart(t1.get$context(t1), t1.get$text(t1), t1.get$start(t1).get$column()) != null)) {
        t2 = t1.get$start(t1);
        t2 = A.SourceLocation$(t2.get$offset(t2), 0, 0, t1.get$sourceUrl());
        t3 = t1.get$end(t1);
        t3 = t3.get$offset(t3);
        t4 = t1.get$sourceUrl();
        t5 = A.countCodeUnits(t1.get$text(t1), 10);
        t1 = A.SourceSpanWithContext$(t2, A.SourceLocation$(t3, A._Highlight__lastLineLength(t1.get$text(t1)), t5, t4), t1.get$text(t1), t1.get$text(t1));
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(t1)));
    },
    $signature: typesOffset + 17
  };
  (function aliases() {
    var _ = A._StreamSinkTransformer.prototype;
    _.super$_StreamSinkTransformer$bind = _.bind$1;
    _ = A.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
  })();
  (function installTearOffs() {
    var _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i;
    var _;
    _instance_1_i(_ = A._ByteCallbackSink.prototype, "get$add", "add$1", 3);
    _instance_0_i(_, "get$close", "close$0", 4);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Closure, [A.Instantiation, A.Future_any_onValue, A._StreamHandlerTransformer_closure, A.CanonicalizedMap_entries_closure, A.CanonicalizedMap_keys_closure, A.CanonicalizedMap_values_closure, A.BrowserHttpClientAdapter_fetch_closure0, A.BrowserHttpClientAdapter_fetch_closure1, A.BrowserHttpClientAdapter_fetch_closure2, A.BrowserHttpClientAdapter_fetch_closure3, A.BrowserHttpClientAdapter_fetch_closure4, A.BrowserHttpClientAdapter_fetch_closure5, A.DioMixin_fetch__requestInterceptorWrapper, A.DioMixin_fetch__requestInterceptorWrapper_closure, A.DioMixin_fetch__responseInterceptorWrapper, A.DioMixin_fetch__responseInterceptorWrapper_closure, A.DioMixin_fetch__errorInterceptorWrapper, A.DioMixin_fetch_closure0, A.DioMixin_fetch__closure, A.DioMixin_fetch__closure0, A.DioMixin_fetch_closure2, A.DioMixin_fetch_closure3, A.DioMixin_fetch_closure4, A.Headers_toString__closure, A._RequestConfig_closure, A.DefaultTransformer_transformResponse_closure0, A.caseInsensitiveKeyMap_closure0, A.CaseInsensitiveMap$from_closure, A.MediaType_toString__closure, A.expectQuotedString_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.Highlighter$__closure, A.Highlighter$___closure, A.Highlighter$__closure0, A.Highlighter__collateLines_closure, A.Highlighter__collateLines_closure1, A.Highlighter__collateLines__closure, A.Highlighter_highlight_closure]);
    _inherit(A.Instantiation1, A.Instantiation);
    _inheritMany(B.Closure2Args, [A.Future_any_onError, A.CanonicalizedMap_addAll_closure, A.CanonicalizedMap_forEach_closure, A.CanonicalizedMap_map_closure, A.BrowserHttpClientAdapter_fetch_closure, A.BrowserHttpClientAdapter_fetch__closure, A.DioMixin_fetch__errorInterceptorWrapper_closure, A.DioMixin_fetch_closure1, A.DioMixin_fetch_closure5, A.Headers$fromMap_closure, A.Headers_toString_closure, A.Transformer_urlEncodeMap_closure, A.DefaultTransformer_transformResponse_closure, A.DefaultTransformer_transformResponse_closure2, A.encodeMap_urlEncode, A.encodeMap_urlEncode_closure, A.caseInsensitiveKeyMap_closure, A.MediaType_toString_closure, A.Highlighter__collateLines_closure0]);
    _inherit(A._StreamSinkTransformer, B.StreamTransformerBase);
    _inheritMany(B.Object, [A._HandlerEventSink, A.CanonicalizedMap, A.ResponseBody, A.BrowserHttpClientAdapter, A.DioError, A.DioMixin, A.Lock, A.InterceptorState, A._BaseHandler, A._DioForBrowser_Object_DioMixin, A.Headers, A._RequestConfig, A.OptionsMixin, A.Options, A.Response, A.Transformer, A.MediaType, A.Context, A.Style, A.ParsedPath, A.PathException, A.SourceFile, A.SourceLocationMixin, A.SourceSpanMixin, A.Highlighter, A._Highlight, A._Line, A.SourceLocation, A.SourceSpanException, A.StringScanner]);
    _inherit(A._StreamHandlerTransformer, A._StreamSinkTransformer);
    _inherit(A._ByteCallbackSink, B.ByteConversionSinkBase);
    _inheritMany(B.Closure0Args, [A.CanonicalizedMap_putIfAbsent_closure, A.BrowserHttpClientAdapter_fetch_closure6, A.DioMixin_fetch__requestInterceptorWrapper__closure, A.DioMixin_fetch__requestInterceptorWrapper___closure, A.DioMixin_fetch__responseInterceptorWrapper__closure, A.DioMixin_fetch__responseInterceptorWrapper___closure, A.DioMixin_fetch__errorInterceptorWrapper__closure, A.DioMixin_fetch__errorInterceptorWrapper___closure, A.DioMixin_fetch_closure, A.DioMixin__dispatchRequest_closure, A.DefaultTransformer_transformResponse_closure1, A.MediaType_MediaType$parse_closure, A.Highlighter_closure, A.Highlighter__writeFileStart_closure, A.Highlighter__writeMultilineHighlights_closure, A.Highlighter__writeMultilineHighlights_closure0, A.Highlighter__writeMultilineHighlights_closure1, A.Highlighter__writeMultilineHighlights_closure2, A.Highlighter__writeMultilineHighlights__closure, A.Highlighter__writeMultilineHighlights__closure0, A.Highlighter__writeHighlightedText_closure, A.Highlighter__writeIndicator_closure, A.Highlighter__writeIndicator_closure0, A.Highlighter__writeIndicator_closure1, A.Highlighter__writeSidebar_closure, A._Highlight_closure]);
    _inheritMany(B._Enum, [A.DioErrorType, A.InterceptorResultType, A.ResponseType, A.ListFormat]);
    _inheritMany(A._BaseHandler, [A.RequestInterceptorHandler, A.ResponseInterceptorHandler, A.ErrorInterceptorHandler]);
    _inherit(A.Interceptors, B.ListMixin);
    _inherit(A.DioForBrowser, A._DioForBrowser_Object_DioMixin);
    _inheritMany(A._RequestConfig, [A._BaseOptions__RequestConfig_OptionsMixin, A._RequestOptions__RequestConfig_OptionsMixin]);
    _inherit(A.BaseOptions, A._BaseOptions__RequestConfig_OptionsMixin);
    _inherit(A.RequestOptions, A._RequestOptions__RequestConfig_OptionsMixin);
    _inherit(A.DefaultTransformer, A.Transformer);
    _inherit(A.CaseInsensitiveMap, A.CanonicalizedMap);
    _inherit(A.InternalStyle, A.Style);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inherit(A.FileLocation, A.SourceLocationMixin);
    _inheritMany(A.SourceSpanMixin, [A._FileSpan, A.SourceSpanBase]);
    _inherit(A.SourceSpanFormatException, A.SourceSpanException);
    _inherit(A.SourceSpanWithContext, A.SourceSpanBase);
    _inherit(A.StringScannerException, A.SourceSpanFormatException);
    _mixin(A._DioForBrowser_Object_DioMixin, A.DioMixin);
    _mixin(A._BaseOptions__RequestConfig_OptionsMixin, A.OptionsMixin);
    _mixin(A._RequestOptions__RequestConfig_OptionsMixin, A.OptionsMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"Instantiation":{"Function":[]},"Instantiation1":{"Function":[]},"_HandlerEventSink":{"EventSink":["1"]},"_StreamHandlerTransformer":{"_StreamSinkTransformer":["1","2"]},"CanonicalizedMap":{"Map":["2","3"]},"DioError":{"Exception":[]},"DioErrorType":{"Enum":[]},"InterceptorResultType":{"Enum":[]},"Interceptors":{"ListMixin":["Interceptor0"],"List":["Interceptor0"],"EfficientLengthIterable":["Interceptor0"],"Iterable":["Interceptor0"],"ListMixin.E":"Interceptor0"},"ResponseType":{"Enum":[]},"ListFormat":{"Enum":[]},"CaseInsensitiveMap":{"CanonicalizedMap":["String","String","1"],"Map":["String","1"],"CanonicalizedMap.K":"String","CanonicalizedMap.V":"1","CanonicalizedMap.C":"String"},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"FileLocation":{"SourceLocation":[],"Comparable":["SourceLocation"]},"_FileSpan":{"FileSpan":[],"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceLocation":{"Comparable":["SourceLocation"]},"SourceLocationMixin":{"SourceLocation":[],"Comparable":["SourceLocation"]},"SourceSpan":{"Comparable":["SourceSpan"]},"SourceSpanBase":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanException":{"Exception":[]},"SourceSpanFormatException":{"FormatException":[],"Exception":[]},"SourceSpanMixin":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanWithContext":{"SourceSpan":[],"Comparable":["SourceSpan"]},"StringScannerException":{"FormatException":[],"Exception":[]}}'));
  var string$ = {
    _must_: " must not be greater than the number of characters in the file, "
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      ByteBuffer: findType("ByteBuffer"),
      CodeUnits: findType("CodeUnits"),
      DioError: findType("DioError"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      FileSpan: findType("FileSpan"),
      FormatException: findType("FormatException"),
      InterceptorState_DioError: findType("InterceptorState<DioError>"),
      InterceptorState_RequestOptions: findType("InterceptorState<RequestOptions>"),
      InterceptorState_Response_dynamic: findType("InterceptorState<Response<@>>"),
      InterceptorState_dynamic: findType("InterceptorState<@>"),
      JSArray_RedirectRecord: findType("JSArray<RedirectRecord>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray__Highlight: findType("JSArray<_Highlight>"),
      JSArray__Line: findType("JSArray<_Line>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      List_String: findType("List<String>"),
      List_dynamic: findType("List<@>"),
      MapEntry_of_String_and_List_String: findType("MapEntry<String,List<String>>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Null: findType("Null"),
      Object: findType("Object"),
      ProgressEvent: findType("ProgressEvent"),
      RegExp: findType("RegExp"),
      RequestOptions: findType("RequestOptions"),
      ResponseBody: findType("ResponseBody"),
      Response_dynamic: findType("Response<@>"),
      SourceLocation: findType("SourceLocation"),
      SourceSpan: findType("SourceSpan"),
      SourceSpanWithContext: findType("SourceSpanWithContext"),
      String: findType("String"),
      Uint8List: findType("Uint8List"),
      UnmodifiableMapView_String_String: findType("UnmodifiableMapView<String,String>"),
      Uri: findType("Uri"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      _AsyncCompleter_InterceptorState_dynamic: findType("_AsyncCompleter<InterceptorState<@>>"),
      _AsyncCompleter_ResponseBody: findType("_AsyncCompleter<ResponseBody>"),
      _AsyncCompleter_Uint8List: findType("_AsyncCompleter<Uint8List>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncStreamController_Uint8List: findType("_AsyncStreamController<Uint8List>"),
      _EventStream_ProgressEvent: findType("_EventStream<ProgressEvent>"),
      _Future_InterceptorState_dynamic: findType("_Future<InterceptorState<@>>"),
      _Future_ResponseBody: findType("_Future<ResponseBody>"),
      _Future_Uint8List: findType("_Future<Uint8List>"),
      _Future_dynamic: findType("_Future<@>"),
      _Highlight: findType("_Highlight"),
      dynamic: findType("@"),
      nullable_Stream_Uint8List: findType("Stream<Uint8List>?"),
      nullable__Highlight: findType("_Highlight?"),
      void: findType("~")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.CONSTANT = new A.Instantiation1(B.math__max$closure(), B.findType("Instantiation1<int>"));
    D.DioErrorType_0 = new A.DioErrorType(0, "connectTimeout");
    D.DioErrorType_1 = new A.DioErrorType(1, "sendTimeout");
    D.DioErrorType_2 = new A.DioErrorType(2, "receiveTimeout");
    D.DioErrorType_3 = new A.DioErrorType(3, "response");
    D.DioErrorType_5 = new A.DioErrorType(5, "other");
    D.InterceptorResultType_0 = new A.InterceptorResultType(0, "next");
    D.InterceptorResultType_1 = new A.InterceptorResultType(1, "resolve");
    D.InterceptorResultType_2 = new A.InterceptorResultType(2, "resolveCallFollowing");
    D.InterceptorResultType_4 = new A.InterceptorResultType(4, "rejectCallFollowing");
    D.ListFormat_4 = new A.ListFormat(4, "multi");
    D.ListFormat_5 = new A.ListFormat(5, "multiCompatible");
    D.List_POST_PUT_PATCH_DELETE = B._setArrayType(makeConstList(["POST", "PUT", "PATCH", "DELETE"]), type$.JSArray_String);
    D.ResponseType_0 = new A.ResponseType(0, "json");
    D.ResponseType_1 = new A.ResponseType(1, "stream");
    D.ResponseType_2 = new A.ResponseType(2, "plain");
    D.ResponseType_3 = new A.ResponseType(3, "bytes");
  })();
  (function staticFields() {
    $._currentUriBase = null;
    $._current = null;
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy,
      _lazyFinal = hunkHelpers.lazyFinal;
    _lazy($, "dio", "$get$dio", () => {
      var t1 = A.BaseOptions$("https://blog.keker.tech/api/", 500, B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic), 300),
        t2 = new A.DioForBrowser(B.createSentinel(), new A.Interceptors(B._setArrayType([], B.findType("JSArray<Interceptor0>")), A.Lock$(), A.Lock$(), A.Lock$()), B.createSentinel(), new A.DefaultTransformer(), false);
      t2.DioMixin___DioMixin_options_A = t1;
      t2.DioMixin___DioMixin_httpClientAdapter_A = new A.BrowserHttpClientAdapter(B.LinkedHashSet_LinkedHashSet$_empty(B.findType("HttpRequest")));
      return t2;
    });
    _lazyFinal($, "_escapedChar", "$get$_escapedChar", () => B.RegExp_RegExp('["\\x00-\\x1F\\x7F]', true, false));
    _lazyFinal($, "token", "$get$token", () => B.RegExp_RegExp('[^()<>@,;:"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+', true, false));
    _lazyFinal($, "_lws", "$get$_lws", () => B.RegExp_RegExp("(?:\\r\\n)?[ \\t]+", true, false));
    _lazyFinal($, "_quotedString", "$get$_quotedString", () => B.RegExp_RegExp('"(?:[^"\\x00-\\x1F\\x7F]|\\\\.)*"', true, false));
    _lazyFinal($, "_quotedPair", "$get$_quotedPair", () => B.RegExp_RegExp("\\\\(.)", true, false));
    _lazyFinal($, "nonToken", "$get$nonToken", () => B.RegExp_RegExp('[()<>@,;:"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]', true, false));
    _lazyFinal($, "whitespace", "$get$whitespace", () => B.RegExp_RegExp("(?:" + $.$get$_lws().pattern + ")*", true, false));
    _lazyFinal($, "context", "$get$context", () => new A.Context(B.findType("InternalStyle")._as($.$get$Style_platform()), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(B.RegExp_RegExp("/", true, false), B.RegExp_RegExp("[^/]$", true, false), B.RegExp_RegExp("^/", true, false)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(B.RegExp_RegExp("[/\\\\]", true, false), B.RegExp_RegExp("[^/\\\\]$", true, false), B.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", true, false), B.RegExp_RegExp("^[/\\\\](?![/\\\\])", true, false)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(B.RegExp_RegExp("/", true, false), B.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", true, false), B.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", true, false), B.RegExp_RegExp("^/", true, false)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
  })();
};

$__dart_deferred_initializers__["K/YTePX7zwibzMI83FTx4odUTlo="] = $__dart_deferred_initializers__.current
